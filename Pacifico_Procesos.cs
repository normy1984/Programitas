using System;
using System.Data;
using System.Diagnostics;
using System.Xml;
using System.Threading;
using EasySoft.EasySwitch.Pacifico.WSPacifico;
using System.IO;
using System.Net;
using System.Text.RegularExpressions;
using System.ServiceModel;
using EasySoft.EasySwitch.Reintentos;
using System.Configuration;
using System.Security.Cryptography.X509Certificates;
using System.Net.Security;
using System.Globalization;
namespace EasySoft.EasySwitch.Pacifico
{
    public class Pacifico_Procesos :
        IPacifico_Procesos, IDisposable
    {

        LogicaNegocioPacifico adm = new LogicaNegocioPacifico();
        static DataSet dsCatalogo = null;

        //Roger::2018/05/09::Retiro en efectivo::Variables globales para almacenar información que se recibe en la consulta
        //static string nombreCliente = string.Empty;
        //static string cuentaCliente = string.Empty;
        static string ip_maquina = string.Empty;
        static string host_maquina = string.Empty;
        static string mac_maquina = string.Empty;


        public Pacifico_Procesos()
        {
            if (dsCatalogo == null)
            {
                dsCatalogo = adm.ObtenerCatalogoErrores();
            }

        }

        public void CambiarSobreContrato(string strIdContratoNew, string strIdContratoOld)
        {
            adm.ActualizarSobres(strIdContratoOld, strIdContratoNew);
        }

        public void GenerarReversoAutomaticosDudosos(string strIdOrigen)
        {

            string strTransaccion = string.Empty, strOperador = string.Empty, IdTransaccion = string.Empty, strTrama = string.Empty, strRespuesta = string.Empty;
            //obtener los items a reversar
            //si el strIdOrigen es igual a vacio es por que debe generar un reverso automatico de todos los id_origen que 
            //que no tengan items en la tabla de switch_log_tran, pero si tiene datos hay que buscar estos id_origen para realizar el reverso auto
            //dsEntrada
            DataSet dsItems = new DataSet();
            EventLog.WriteEntry("EasySwitch", "Inicio reverso automatico dudosos");

            dsItems = adm.ObtenerItemsReversar(strIdOrigen);
            try
            {
                if (dsItems.Tables["Switch_Log_Tran"].Rows.Count > 0)
                {
                    EventLog.WriteEntry("EasySwitch", "reverso automatico dudosos con:" + dsItems.Tables["Switch_Log_Tran"].Rows.Count.ToString());
                    foreach (DataRow dr in dsItems.Tables["Switch_Log_Tran"].Rows)
                    {
                        DataSet dsEntrada = new DataSet();
                        strTrama = dr["TramaHX"].ToString();
                        strOperador = dr["Operador"].ToString();
                        strTransaccion = dr["Transaccion"].ToString();
                        IdTransaccion = dr["Id_Transaccion"].ToString();

                        dsEntrada = adm.getDataSetFromString(strTrama);

                        EventLog.WriteEntry("EasySwitch", "GenerarReversoAutomaticosDudosos: Se envia a reversar automaticamente el Id_Origen=" + dr["Id_Origen"].ToString());
                        GenerarReversoAutomatico(strTransaccion, strOperador, dsEntrada, true, Convert.ToString(IdTransaccion), strTrama, dr["Id_Origen"].ToString());
                        strRespuesta = adm.Actualizar_Transaccion_Switch_Log_Tran(Convert.ToInt64(dr["Id_Log"].ToString()), "PROCESADO|REVERSO AUTO");
                        dsEntrada.Dispose();
                        if (strIdOrigen == "")
                            adm.RegistroCmEventos(dsEntrada, dr["Id_Origen"].ToString(), dr["Id_Log"].ToString());
                    }
                }
                else
                {
                    EventLog.WriteEntry("EasySwitch", "GenerarReversoAutomaticosDudosos: No existen items a reversar automaticamente");
                }
            }
            catch (Exception e)
            {
                EventLog.WriteEntry("EasySwitch", "GenerarReversoAutomaticosDudosos:Error:" + e.Message);
            }
            EventLog.WriteEntry("EasySwitch", "Termina reverso automatico dudosos");
        }

        public string EnvioTrama(string xmlEntrada)
        {
            EventLog.WriteEntry("EasySwitch", "Pacifico_Procesos.cs -> EnvioTrama(string xmlEntrada)\nValor de xmlEntrada= " + xmlEntrada);
            DataSet dsEntrada = new DataSet();
            string strFuenteInformacion = string.Empty;
            string strTipoTransaccion = string.Empty;
            string strRetornoOffline = string.Empty;
            string strModoProceso = string.Empty;
            string strRetorno = string.Empty;
            string strTraductor = string.Empty;
            string response = string.Empty;
            string strRespuestaModo = string.Empty;
            string strTransaccion = string.Empty;
            string strOperador = string.Empty;
            string strCodBanco = string.Empty;
            string strClase = string.Empty;
            string strTran = string.Empty;


            XmlReader reader = XmlReader.Create(new StringReader(xmlEntrada));
            dsEntrada.ReadXml(reader);

            strFuenteInformacion = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Fuente_Informacion"].ToString();
            strTipoTransaccion = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Tipo"].ToString();
            strCodBanco = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Banco"].ToString();
            string strProceso = string.Empty;
            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Proceso"))
                strProceso = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Proceso"].ToString();

            strTransaccion = strTipoTransaccion.ToUpper() + "_" + strFuenteInformacion;

            //Buscar el operador
            strOperador = adm.GetOperador(strCodBanco, strTransaccion, ref strClase);
            string url = string.Empty;
            string usuarioconexion = string.Empty;
            string passwordconexion = string.Empty;


            strRespuestaModo = adm.obtenerDatosModoProceso("ET", strFuenteInformacion, strTipoTransaccion, ref strModoProceso, ref strRetorno, ref strTraductor, ref response, ref strTran);
            EventLog.WriteEntry("EasySwitch", "strRespuestaModo = adm.obtenerDatosModoProceso(\"ET\", strFuenteInformacion, strTipoTransaccion, ref strModoProceso, ref strRetorno, ref strTraductor, ref response, ref strTran);\nstrFuenteInformacion= " + strFuenteInformacion +
                "\nstrTipoTransaccion= " + strTipoTransaccion + "\nstrModoProceso= " + strModoProceso + "\nstrRetorno= " + strRetorno + "\nstrTraductor= " + strTraductor + "\nresponse= " + response + "\nstrTran= " + strTran + "\nstrRespuestaModo= " + strRespuestaModo);

            if (!strRespuestaModo.StartsWith("0001"))
            {
                EventLog.WriteEntry("EasySwitch", "Pacifico_Procesos.EnvioTrama.Problemas al obtener la transaccion ET|" + strFuenteInformacion + "|" + strTipoTransaccion, EventLogEntryType.Warning);
                return null;
            }

            response = strProceso == string.Empty ? EnvioTrama(xmlEntrada, strModoProceso, strOperador, strTransaccion, strRetorno) : EnvioTrama(xmlEntrada, strModoProceso, strOperador, strTransaccion, strRetorno, strProceso);

            return response;
        }

        public string EnvioTrama(string strXmlEntrada, string strENLINEA, string strOperador, string strTransaccion, string strRetorno)
        {
            EventLog.WriteEntry("EasySwitch", "public string EnvioTrama(string strXmlEntrada, string strENLINEA, string strOperador, string strTransaccion, string strRetorno)" +
                "\nstrXmlEntrada= " + strXmlEntrada + "\nstrENLINEA= " + strENLINEA + "\nstrOperador= " + strOperador + "\nstrTransaccion= " + strTransaccion + "\nstrRetorno= " + strRetorno);

            string traceInformation = string.Empty;
            DataSet dsEntrada = new DataSet();
            string ReferenciaAdicionalAux = string.Empty;
            //Transformar mi xml a un DataSet
            dsEntrada = adm.getDataSetFromString(strXmlEntrada);

            //Babahoyo
            if (strTransaccion == "REGISTRO_PACIFICO_BABAHOYOEP")
            {
                ReferenciaAdicionalAux = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Referencia_Adicional"].ToString();

            }
            traceInformation = "XML de entrada:" + strXmlEntrada;

            DataSet dsTransaccion = adm.ObtenerTransaccion(strTransaccion, strOperador);
            DataRow drTransaccion = (DataRow)dsTransaccion.Tables["Switch_Transaccion"].Rows[0];
            string id_Transaccion = string.Empty;

            string strRespuesta = string.Empty;
            string strId_operador = drTransaccion["Id_Operador"].ToString();
            string Estado_Operador = drTransaccion["Estado"].ToString();
            string strXmlPlantilla = drTransaccion["Valor"].ToString();
            string url = drTransaccion["Url"].ToString();
            string usuarioconexion = drTransaccion["UsuarioConexion"].ToString();
            string passwordconexion = drTransaccion["PasswordConexion"].ToString();

            int int_CONFIG_NumeroReintentos = Convert.ToInt32(drTransaccion["NumeroReintentos"].ToString());
            string strTraceAudit = "ET|";
            string[] lstTransaccion = strTransaccion.Split('_');



            if (lstTransaccion.Length > 2)
                strTraceAudit += lstTransaccion[1].ToString() + "_" + lstTransaccion[2].ToString() + "|" + lstTransaccion[0].ToString();
            else
                strTraceAudit += lstTransaccion[1].ToString() + "|" + lstTransaccion[0].ToString();

            if (dsTransaccion.Tables.Count > 0)
            {
                if (dsTransaccion.Tables[0].Rows.Count > 0)
                {
                    DataRow dr = dsTransaccion.Tables[0].Rows[0];
                    id_Transaccion = dr["Id_Transaccion"].ToString();
                }
            }



            if (id_Transaccion.Trim() != string.Empty)
            {

                bool boolObtenerRespuesta = false;
                bool boolReintentoTransaccion = true;
                bool boolSeguir = true;
                string strTramaRespuesta = string.Empty;
                string strEnvio = "ENVIO";
                string strIdOrigen = string.Empty;

                if (strTransaccion.Contains("REVERSO"))
                    strEnvio += "_REVERSO";
                try
                {
                    double valorIva = adm.ObtenerValorIvaComisionContrato(dsEntrada.Tables["DatosTransaccion"].Rows[0]["Id_Contrato"].ToString());

                    while (boolReintentoTransaccion) // Aqui debo poner un timeout de espera de la respuesta
                    {
                        //validar si es reverso hay que validar el control de horarios
                        //                        
                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Id_Item"))
                        {
                            string strIdContrato = adm.ObtenerIdContrato(dsEntrada.Tables["DatosTransaccion"].Rows[0]["Id_Item"].ToString());

                            if (adm.TieneControlHorario(strIdContrato) && adm.TransaccionNoPermitida(strTransaccion))
                            {
                                //si esta transaccion no es permitida validar si tiene control de horario
                                //validar si la transaccion original de registro se realizo antes de la hora de corte entonces no puede hacer el reverso

                                if (adm.EstoyEnHorario(strIdContrato, dsEntrada.Tables["DatosTransaccion"].Rows[0]["Id_Item"].ToString(), adm.ObtenerTransaccionesInicialparaReverso()))
                                {
                                    //aqui entro por que la transaccion de pago si se registro antes de la hora de corte entonces se debe responder que 
                                    //si se puede realizar la transaccion.
                                    boolReintentoTransaccion = true;
                                    boolSeguir = true;
                                }
                                else
                                {
                                    boolSeguir = false;
                                    boolReintentoTransaccion = false;
                                }
                            }
                            else
                            {
                                boolSeguir = true;
                            }
                        }

                        if (boolSeguir)
                        {
                            double dblValor = 0;
                            string strMensajeValidacion = string.Empty;
        
                            EventLog.WriteEntry("EasySwitch", "NEAPProcesar_Transaccion_OnlineA=Entrada " + dsEntrada + "Platilla=" + strXmlPlantilla + " strTransaccion" + strTransaccion);
                            string strXmlParametros = TransformarTramaEnviar(dsEntrada, strXmlPlantilla, strTransaccion, ref strIdOrigen, ref dblValor, valorIva);

                            EventLog.WriteEntry("EasySwitch", "EnvioTrama| linea 239\nstrXmlParametros= " + strXmlParametros);

                            if (!strXmlParametros.StartsWith("9999"))
                            {
                                //validaciones especiales

                                //if (ValidacionEspecial(strTransaccion, dblValor, ref strMensajeValidacion))
                                //{
                                long lngId_log = 0;

                                switch (strENLINEA)
                                {
                                    case "TEST":
                                        break;
                                    case "ONLINE":
                                        int intMaxBoletos = 1;
                                        EventLog.WriteEntry("EasySwitch", "NEAPProcesar_Transaccion_OnlineA= " + strXmlParametros);

                                        lngId_log = adm.IngresarLog_Tran(strId_operador, strOperador, strEnvio, id_Transaccion, strTransaccion, strXmlParametros, strTraceAudit, strIdOrigen, "ENVIADO");

                                        switch (strOperador)
                                        {
                                            case "PACIFICO":
                                                EventLog.WriteEntry("EasySwitch", "NEAPProcesar_Transaccion_OnlineA1= " + strXmlParametros);
                                                strRespuesta = Procesar_Transaccion_Online(strXmlParametros, lngId_log, strTransaccion, strOperador, valorIva, strXmlEntrada);
                                                EventLog.WriteEntry("EasySwitch", "NEAPProcesar_Transaccion_OnlineD1= " + strRespuesta);
                                                break;
                                            case "FARMA":
                                                strRespuesta = ProcesarTransaccionOnlineFarmaenlace(strTransaccion, strXmlParametros, lngId_log, strXmlEntrada, intMaxBoletos, valorIva);
                                                break;
                                            case "RAPIPAGOS":
                                                strRespuesta = Procesar_Transaccion_Online_Rapipagos(lngId_log, strTransaccion, strXmlParametros, url, Convert.ToInt32(strIdOrigen), usuarioconexion, passwordconexion);
                                                break;
                                            default:
                                                break;
                                        }

                                        break;
                                    case "ONLINE_LOG":
                                        // Leo respuesta del switch log
                                        // Voy a leer de la tabla Switch_Log lngID_Log con estado procesado
                                        // si todo esta ok, proceso con la respuesta


                                        lngId_log = adm.IngresarLog_Tran(strId_operador, strOperador, strEnvio, id_Transaccion, strTransaccion, strXmlParametros, strTraceAudit, strIdOrigen, "PENDIENTE");
                                        int intIntentos = 0;
                                        while (!boolObtenerRespuesta) // Aqui debo poner un timeout de espera de la respuesta
                                        {
                                            strRespuesta = adm.Obtener_Respuesta_Switch_Log(ref strTramaRespuesta, lngId_log, "PROCESADO", ref boolObtenerRespuesta, string.Empty);

                                            if (strRespuesta != "RESPUESTA_OK")
                                            {
                                                //RESPUESTA NO EXISTE
                                                // Un tiempo y reintento
                                                Thread.Sleep(1000);
                                                intIntentos += 1;
                                                if (intIntentos >= int_CONFIG_NumeroReintentos) // El treinta debe ser una variable de configuracion
                                                {
                                                    // Si me da timeout debo dejar marcando el registro con ENVIO_TIMEOUT
                                                    strRespuesta = adm.Actualizar_Transaccion_Switch_Log_Tran(lngId_log, "ENVIO_TIMEOUT", strRespuesta);
                                                    if (strRespuesta == "ACTUALIZACION_OK")
                                                    {
                                                        strRespuesta = "9998|ENVIO_TIMEOUT";
                                                        boolObtenerRespuesta = true;
                                                    }
                                                    //voy a validar si existe por ultima ves un "ENVIO_DUDOSO" si no hay genero el reverso pero
                                                    // si existe el SWITCH ya se encargo de enviar un reverso automatico
                                                    traceInformation = "Inicio de Reverso Automatico:Transaccion:" + strTransaccion;
                                                    if (strTransaccion.Contains("REGISTRO"))
                                                    {
                                                        //hay que realizar un reverso automatico de la transaccion que se estaba 
                                                        //enviado a realizar
                                                        GenerarReversoAutomatico(strTransaccion, strOperador, dsEntrada, true, id_Transaccion, strXmlParametros, strIdOrigen);

                                                    }

                                                }
                                            }
                                            else
                                            {
                                                strRespuesta = "0001|RESPUESTA_OK";
                                                boolObtenerRespuesta = true;
                                                strRespuesta += "|" + TransformarTramaSalida(strTramaRespuesta, strTransaccion, strXmlEntrada, "ONLINE_LOG", strIdOrigen, valorIva);
                                            }
                                        }

                                        break;
                                    case "SAF":
                                        if (lngId_log > 0)
                                        {
                                            strRespuesta = "0001|RESPUESTA_OK";
                                        }
                                        break;
                                    default:
                                        //2016-04-25 Se aumenta para que inserte en el switch_log_tran
                                        //Se comenta para pasara  produccion
                                        //2016-09-07: Lenin Quezada COmentó esta Línea de código
                                        // lngId_log = adm.IngresarLog_Tran(strId_operador, strOperador, strEnvio, id_Transaccion, strTransaccion, strXmlParametros, strTraceAudit, strIdOrigen, "ENVIADO");
                                        strRespuesta = "0001|RESPUESTA_OK";
                                        boolObtenerRespuesta = true;
                                        //GrabarAppLog("EnvioTrama.traceInformation.1" , "I");
                                        strRespuesta += "|" + TransformarTramaSalida(strRetorno, strTransaccion, strXmlEntrada, "OFFLINE", strIdOrigen, valorIva);
                                        //GrabarAppLog("EnvioTrama.traceInformation.1" + strRespuesta, "I");
                                        string strResp = adm.Actualizar_Transaccion_Switch_Log_Tran(lngId_log, "PROCESADO", strRespuesta, DateTime.Now.ToString("yyyyMMdd HH:mm:ss:fff"), "OFFLINE", string.Empty, strRespuesta);
                                        break;

                                }
                                //}
                                //else
                                //{
                                //    //mostrar mensaje de validacion                                
                                //    strRespuesta = "0001|RESPUESTA_OK";
                                //    strRespuesta += "|" + TransformarTramaSalidaError("9988", strMensajeValidacion);
                                //    EventLog.WriteEntry("EasySwitch", strRespuesta);

                                //}
                            }
                            boolReintentoTransaccion = false;
                        }
                        else
                        {
                            traceInformation = " Transaccion no permitida ";
                            strRespuesta = "0001|RESPUESTA_OK";
                            strRespuesta += "|" + TransformarTramaSalidaError("0000", "TRANSACCION NO PERMITIDA");
                            traceInformation = strRespuesta;
                        }
                    }
                }
                catch (Exception e)
                {
                    GrabarAppLog("EnvioTrama.traceInformation:" + traceInformation, "I");
                    GrabarAppLog("EnvioTrama.Error:" + e.Message, "I");
                }

            }
            EventLog.WriteEntry("EasySwitch", "EnvioTrama(string strXmlEntrada, string strENLINEA, string strOperador, string strTransaccion, string strRetorno)| linea 369" +
                "\nEsto esta retornando :strRespuesta= " + strRespuesta);
            return strRespuesta;
        }

        //ESTE UTILIZA PUNTOMATICO
        public string EnvioTrama(string strXmlEntrada, string strENLINEA, string strOperador, string strTransaccion, string strRetorno, string strProceso)
        {
            EventLog.WriteEntry("EasySwitch", "public string EnvioTrama(string strXmlEntrada, string strENLINEA, string strOperador, string strTransaccion, string strRetorno, string strProceso)" +
     "\nstrENLINEA= " + strENLINEA + "\nstrOperador= " + strOperador + "\nstrTransaccion= " + strTransaccion + "\nstrRetorno= " + strRetorno + "\nstrProceso= " + strProceso);


            DataSet dsEntrada = new DataSet();
            //Transformar mi xml a un DataSet
            dsEntrada = adm.getDataSetFromString(strXmlEntrada);
            //EventLog.WriteEntry("EasySwitch", "XML de entrada:" + strXmlEntrada);

            DataSet dsTransaccion = adm.ObtenerTransaccion(strTransaccion, strOperador);
            DataRow drTransaccion = (DataRow)dsTransaccion.Tables["Switch_Transaccion"].Rows[0];
            string id_Transaccion = string.Empty;

            string strRespuesta = string.Empty;
            string strId_operador = drTransaccion["Id_Operador"].ToString();
            string Estado_Operador = drTransaccion["Estado"].ToString();
            string strXmlPlantilla = drTransaccion["Valor"].ToString();
            string url = drTransaccion["Url"].ToString();
            string usuarioconexion = drTransaccion["UsuarioConexion"].ToString();
            string passwordconexion = drTransaccion["PasswordConexion"].ToString();

            int int_CONFIG_NumeroReintentos = Convert.ToInt32(drTransaccion["NumeroReintentos"].ToString());
            string strTraceAudit = "ET|";
            string[] lstTransaccion = strTransaccion.Split('_');

            if (lstTransaccion.Length > 2)
                strTraceAudit += lstTransaccion[1].ToString() + "_" + lstTransaccion[2].ToString() + "|" + lstTransaccion[0].ToString();
            else
                strTraceAudit += lstTransaccion[1].ToString() + "|" + lstTransaccion[0].ToString();

            if (dsTransaccion.Tables.Count > 0)
            {
                if (dsTransaccion.Tables[0].Rows.Count > 0)
                {
                    DataRow dr = dsTransaccion.Tables[0].Rows[0];
                    id_Transaccion = dr["Id_Transaccion"].ToString();
                }
            }

            if (id_Transaccion.Trim() != string.Empty)
            {

                bool boolObtenerRespuesta = false;
                bool boolReintentoTransaccion = true;
                bool boolSeguir = true;
                string strTramaRespuesta = string.Empty;
                string strIdOrigen = string.Empty;
                try
                {
                    double valorIva = adm.ObtenerValorIvaComisionContrato(dsEntrada.Tables["DatosTransaccion"].Rows[0]["Id_Contrato"].ToString());
                    while (boolReintentoTransaccion) // Aqui debo poner un timeout de espera de la respuesta
                    {
                        //validar si es reverso hay que validar el control de horarios
                        //                        
                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Id_Item"))
                        {
                            string strIdContrato = adm.ObtenerIdContrato(dsEntrada.Tables["DatosTransaccion"].Rows[0]["Id_Item"].ToString());

                            if (adm.TieneControlHorario(strIdContrato) && adm.TransaccionNoPermitida(strTransaccion))
                            {
                                //si esta transaccion no es permitida validar si tiene control de horario
                                //validar si la transaccion original de registro se realizo antes de la hora de corte entonces no puede hacer el reverso

                                if (adm.EstoyEnHorario(strIdContrato, dsEntrada.Tables["DatosTransaccion"].Rows[0]["Id_Item"].ToString(), adm.ObtenerTransaccionesInicialparaReverso()))
                                {
                                    //aqui entro por que la transaccion de pago si se registro antes de la hora de corte entonces se debe responder que 
                                    //si se puede realizar la transaccion.
                                    boolReintentoTransaccion = true;
                                    boolSeguir = true;
                                }
                                else
                                {
                                    boolSeguir = false;
                                    boolReintentoTransaccion = false;
                                }
                            }
                            else
                            {
                                boolSeguir = true;
                            }
                        }

                        if (boolSeguir)
                        {
                            double dblValor = 0;
                            string strMensajeValidacion = string.Empty;
                            string strXmlParametros = TransformarTramaEnviar(dsEntrada, strXmlPlantilla, strTransaccion, ref strIdOrigen, ref dblValor, valorIva);

                            EventLog.WriteEntry("EasySwitch", "EnvioTrama(string strXmlEntrada, string strENLINEA, string strOperador, string strTransaccion, string strRetorno, string strProceso)| linea 465" +
                                "\nstrXmlParametros= " + strXmlParametros);

                            if (!strXmlParametros.StartsWith("9999"))
                            {
                                //validaciones especiales

                                //if (ValidacionEspecial(strTransaccion, dblValor, ref strMensajeValidacion))
                                //{
                                long lngId_log = 0;

                                switch (strENLINEA)
                                {
                                    case "TEST":
                                        break;
                                    case "ONLINE":
                                        int intMaxBoletos = 1;
                                        lngId_log = adm.IngresarLog_Tran(strId_operador, strOperador, "ENVIO", id_Transaccion, strTransaccion, strXmlParametros, strTraceAudit, strIdOrigen, "PROCESANDO");

                                        switch (strOperador)
                                        {
                                            case "PACIFICO":
                                                strRespuesta = Procesar_Transaccion_Online(strXmlParametros, lngId_log, strTransaccion, strOperador, valorIva, strXmlEntrada);
                                                break;
                                            case "FARMA":
                                                strRespuesta = ProcesarTransaccionOnlineFarmaenlace(strTransaccion, strXmlParametros, lngId_log, strXmlEntrada, intMaxBoletos, valorIva);
                                                break;
                                            case "RAPIPAGOS":
                                                strRespuesta = Procesar_Transaccion_Online_Rapipagos(lngId_log, strTransaccion, strXmlParametros, url, Convert.ToInt32(strIdOrigen), usuarioconexion, passwordconexion);
                                                break;
                                            default:
                                                break;
                                        }
                                        break;
                                    case "ONLINE_LOG":
                                        // Leo respuesta del switch log
                                        // Voy a leer de la tabla Switch_Log lngID_Log con estado procesado
                                        // si todo esta ok, proceso con la respuesta
                                        lngId_log = adm.IngresarLog_Tran(strId_operador, strOperador, "ENVIO", id_Transaccion, strTransaccion, strXmlParametros, strTraceAudit, strIdOrigen, "PENDIENTE");

                                        int intIntentos = 0;
                                        while (!boolObtenerRespuesta) // Aqui debo poner un timeout de espera de la respuesta
                                        {
                                            strRespuesta = adm.Obtener_Respuesta_Switch_Log(ref strTramaRespuesta, lngId_log, "PROCESADO", ref boolObtenerRespuesta, string.Empty);

                                            if (strRespuesta != "RESPUESTA_OK")
                                            {
                                                //RESPUESTA NO EXISTE
                                                // Un tiempo y reintento
                                                Thread.Sleep(1000);
                                                intIntentos += 1;
                                                if (intIntentos >= int_CONFIG_NumeroReintentos) // El treinta debe ser una variable de configuracion
                                                {
                                                    // Si me da timeout debo dejar marcando el registro con ENVIO_TIMEOUT
                                                    strRespuesta = adm.Actualizar_Transaccion_Switch_Log_Tran(lngId_log, "ENVIO_TIMEOUT", strRespuesta);
                                                    if (strRespuesta == "ACTUALIZACION_OK")
                                                    {
                                                        strRespuesta = "9998|ENVIO_TIMEOUT";
                                                        boolObtenerRespuesta = true;
                                                    }
                                                    //voy a validar si existe por ultima ves un "ENVIO_DUDOSO" si no hay genero el reverso pero
                                                    // si existe el SWITCH ya se encargo de enviar un reverso automatico
                                                    EventLog.WriteEntry("EasySwitch", "Inicio de Reverso Automatico:Transaccion:" + strTransaccion);
                                                    if (strTransaccion.Contains("REGISTRO"))
                                                    {
                                                        //hay que realizar un reverso automatico de la transaccion que se estaba 
                                                        //enviado a realizar
                                                        GenerarReversoAutomatico(strTransaccion, strOperador, dsEntrada, true, id_Transaccion, strXmlParametros, strIdOrigen);

                                                    }

                                                }
                                            }
                                            else
                                            {
                                                strRespuesta = "0001|RESPUESTA_OK";
                                                boolObtenerRespuesta = true;
                                                strRespuesta += "|" + TransformarTramaSalida(strTramaRespuesta, strTransaccion, strXmlEntrada, "ONLINE_LOG", strIdOrigen, valorIva);
                                            }
                                        }

                                        break;
                                    case "SAF":
                                        if (lngId_log > 0)
                                        {
                                            strRespuesta = "0001|RESPUESTA_OK";
                                        }
                                        break;
                                    default:
                                        strRespuesta = "0001|RESPUESTA_OK";
                                        boolObtenerRespuesta = true;
                                        strRespuesta += "|" + TransformarTramaSalida(strRetorno, strTransaccion, strXmlEntrada, "OFFLINE", strIdOrigen, valorIva);

                                        EventLog.WriteEntry("EasySwitch", "EnvioTrama | linea 558\nstrRespuesta= " + strRespuesta);

                                        string strResp = adm.Actualizar_Transaccion_Switch_Log_Tran(lngId_log, "PROCESADO", strRespuesta);
                                        break;

                                }
                                //}
                                //else
                                //{
                                //    //mostrar mensaje de validacion                                
                                //    strRespuesta = "0001|RESPUESTA_OK";
                                //    strRespuesta += "|" + TransformarTramaSalidaError("9988", strMensajeValidacion);
                                //    EventLog.WriteEntry("EasySwitch", strRespuesta);

                                //}

                            }
                            boolReintentoTransaccion = false;
                        }
                        else
                        {
                            EventLog.WriteEntry("EasySwitch", " Transaccion no permitida ");
                            strRespuesta = "0001|RESPUESTA_OK";
                            strRespuesta += "|" + TransformarTramaSalidaError("0000", "TRANSACCION NO PERMITIDA");
                            EventLog.WriteEntry("EasySwitch", strRespuesta);
                        }
                    }
                }
                catch (Exception e)
                {
                    GrabarAppLog("EnvioTrama.Error:" + e.Message, "I");
                }

            }
            EventLog.WriteEntry("EasySwitch", "EnvioTrama(string strXmlEntrada, string strENLINEA, string strOperador, string strTransaccion, string strRetorno, string strProceso)|linea 585|Esto esta retornando este metodo:\n strRespuesta= " + strRespuesta);
            return strRespuesta;
        }

        private bool ValidacionEspecial(string strTransaccion, double dblValor, ref string strMensajeValidacion)
        {
            bool boolSeguir = true;
            //validacion de claro     

            switch (strTransaccion)
            {
                case "REGISTRO_PACIFICO_CLARO":
                    //if (dblValor != 3)
                    //{
                    //    boolSeguir = false;
                    //    strMensajeValidacion = "SOLO SE PERMITEN RECARGAS DE 3 DOLARES";
                    //}
                    break;
                default:
                    break;
            }
            return boolSeguir;
        }

        private string ProcesarTransaccionOnlineFarmaenlace(string strTransaccion, string strXmlEntrada, long lngId_log, string strXmlEntradaDatos, int intMaximo, double valorIva)
        {
            string strRespuesta = string.Empty; //respuesta que va a devolver el switch codigo_respuesta|mensaje|xml de  respuesta

            string strDatosRespuesta = string.Empty;
            string strNumeroRifa = strXmlEntrada;
            string strRespuesta1 = string.Empty;
            //EventLog.WriteEntry("EasySwitch", "strTransaccion:" + strTransaccion);

            switch (strTransaccion)
            {
                case "CONSULTA_FARMA_RIFA":
                    //VALIDAR EL NUMERO MAXIMO DE BOLETOS PERMITIDOS                                        
                    DataSet dsMaximo = adm.ObtenerTablas("'RIFA'", "'MAXBOLETOS'");

                    if (dsMaximo.Tables["Tablas"].Rows.Count > 0)
                    {
                        if (Convert.ToInt32(dsMaximo.Tables["Tablas"].Rows[0]["TablaReferencia"]) >= intMaximo)
                        {
                            //AQUI HAY ENVIAR A REALIZAR LA PETICION PAR LOS CASOS ONLINE Y ES A NUESTRA BASE                    
                            strDatosRespuesta = adm.ObtenerDatosItemMasivos(intMaximo);
                            //Transformar a una trama entendible por la ventanilla
                            strRespuesta = "0001|RESPUESTA_OK";
                            strRespuesta += "|" + TransformarTramaSalida(strDatosRespuesta, strTransaccion, strXmlEntrada, "ONLINE", string.Empty, valorIva);
                            strRespuesta1 = adm.Actualizar_Transaccion_Switch_Log_Tran(lngId_log, "PROCESADO", strRespuesta);
                        }
                        else
                        {
                            //reportar que el numero maximo permitido es dsMaximo.Tables["Tablas"].Rows[0]["TablaReferencia"]
                            strRespuesta = "0001|RESPUESTA_OK";
                            strRespuesta += "|" + TransformarTramaSalidaError("9999", "EL NUMERO MAXIMO DE BOLETOS ES " + dsMaximo.Tables["Tablas"].Rows[0]["TablaReferencia"].ToString());
                            strRespuesta1 = adm.Actualizar_Transaccion_Switch_Log_Tran(lngId_log, "PROCESADO", strRespuesta);
                        }
                    }
                    break;
                case "REGISTRO_FARMA_RIFA":
                    //AQUI HAY ENVIAR A REALIZAR LA PETICION PAR LOS CASOS ONLINE Y ES A NUESTRA BASE
                    strDatosRespuesta = adm.RegistrarItemsMasivos(strNumeroRifa);
                    //Transformar a una trama entendible por la ventanilla
                    strRespuesta = "0001|RESPUESTA_OK";
                    strRespuesta += "|" + TransformarTramaSalida(strDatosRespuesta, strTransaccion, strXmlEntradaDatos, "ONLINE", string.Empty, valorIva);
                    strRespuesta1 = adm.Actualizar_Transaccion_Switch_Log_Tran(lngId_log, "PROCESADO", strRespuesta);
                    break;
                case "REVERSO_FARMA_RIFA":
                    //AQUI HAY ENVIAR A REALIZAR LA PETICION PAR LOS CASOS ONLINE Y ES A NUESTRA BASE
                    strNumeroRifa = "'" + strNumeroRifa.Replace("@", "','") + "'";

                    strDatosRespuesta = adm.ReversarItemsMasivos(strNumeroRifa);
                    //Transformar a una trama entendible por la ventanilla
                    strRespuesta = "0001|RESPUESTA_OK";
                    strRespuesta += "|" + TransformarTramaSalida(strDatosRespuesta, strTransaccion, strXmlEntradaDatos, "ONLINE", string.Empty, valorIva);
                    strRespuesta1 = adm.Actualizar_Transaccion_Switch_Log_Tran(lngId_log, "PROCESADO", strRespuesta);
                    break;
                case "REGISTRO_FARMA_CARPETA":
                    //AQUI HAY ENVIAR A REALIZAR LA PETICION PAR LOS CASOS ONLINE Y ES A NUESTRA BASE
                    //obtener los datos para registrarlos en la base de datos
                    DataSet dsEntrada = new DataSet();
                    //Transformar mi xml a un DataSet
                    dsEntrada = adm.getDataSetFromString(strXmlEntrada);
                    string strNumCedula = dsEntrada.Tables["DatosTransaccion"].Rows[0]["NumeroId_Cliente"].ToString();
                    string strNombre = dsEntrada.Tables["DatosTransaccion"].Rows[0]["NombreContrapartida"].ToString();
                    string strTelefono = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Telefono_Cliente"].ToString();
                    string strIdOrigen = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Id_Item"].ToString();

                    strDatosRespuesta = adm.RegistrarCarpetas(strNumCedula, strNombre, strTelefono, strIdOrigen);
                    //Transformar a una trama entendible por la ventanilla
                    strRespuesta = "0001|RESPUESTA_OK";
                    strRespuesta += "|" + TransformarTramaSalida(strDatosRespuesta, strTransaccion, strXmlEntradaDatos, "ONLINE", string.Empty, valorIva);
                    strRespuesta1 = adm.Actualizar_Transaccion_Switch_Log_Tran(lngId_log, "PROCESADO", strRespuesta);
                    break;
                default:
                    break;
            }

            return strRespuesta;
        }

        private string TransformarTramaSalidaError(string Codigo_Retorno, string MensajeRetorno)
        {
            XmlDocument xmldatos = new System.Xml.XmlDocument();
            XmlNode dsSalida = xmldatos.CreateElement("dsSalida");

            XmlNode dtDatosTransaccion = xmldatos.CreateElement("dtDatosTransaccion");
            XmlNode datos = xmldatos.CreateElement("NumeroId_Cliente"); datos.InnerText = string.Empty; dtDatosTransaccion.AppendChild(datos);
            datos = xmldatos.CreateElement("TipoId_Cliente"); datos.InnerText = string.Empty; dtDatosTransaccion.AppendChild(datos);
            datos = xmldatos.CreateElement("Fecha_Proceso"); datos.InnerText = string.Empty; dtDatosTransaccion.AppendChild(datos);
            datos = xmldatos.CreateElement("Codigo_Retorno"); datos.InnerText = Codigo_Retorno; dtDatosTransaccion.AppendChild(datos);
            datos = xmldatos.CreateElement("Descripcion_Retorno"); datos.InnerText = MensajeRetorno; dtDatosTransaccion.AppendChild(datos);
            datos = xmldatos.CreateElement("MensajeRetorno"); datos.InnerText = MensajeRetorno; dtDatosTransaccion.AppendChild(datos);
            datos = xmldatos.CreateElement("Valor"); datos.InnerText = string.Empty; dtDatosTransaccion.AppendChild(datos);
            datos = xmldatos.CreateElement("Moneda"); datos.InnerText = string.Empty; dtDatosTransaccion.AppendChild(datos);
            datos = xmldatos.CreateElement("NombreContrapartida"); datos.InnerText = string.Empty; dtDatosTransaccion.AppendChild(datos);
            datos = xmldatos.CreateElement("Referencia"); datos.InnerText = string.Empty; dtDatosTransaccion.AppendChild(datos);
            datos = xmldatos.CreateElement("Referencia_Adicional"); datos.InnerText = string.Empty; dtDatosTransaccion.AppendChild(datos);
            datos = xmldatos.CreateElement("Contrapartida"); datos.InnerText = string.Empty; dtDatosTransaccion.AppendChild(datos);
            datos = xmldatos.CreateElement("Genera_XML"); datos.InnerText = string.Empty; dtDatosTransaccion.AppendChild(datos);
            datos = xmldatos.CreateElement("Referencia_SWIFT"); datos.InnerText = string.Empty; dtDatosTransaccion.AppendChild(datos);
            datos = xmldatos.CreateElement("Banco"); datos.InnerText = string.Empty; dtDatosTransaccion.AppendChild(datos);
            datos = xmldatos.CreateElement("Comision"); datos.InnerText = string.Empty; dtDatosTransaccion.AppendChild(datos);
            datos = xmldatos.CreateElement("Codigo_Tercero"); datos.InnerText = string.Empty; dtDatosTransaccion.AppendChild(datos);
            datos = xmldatos.CreateElement("Numero_Documento"); datos.InnerText = string.Empty; dtDatosTransaccion.AppendChild(datos);
            dsSalida.AppendChild(dtDatosTransaccion);

            xmldatos.AppendChild(dsSalida);
            return xmldatos.InnerXml;

        }

        private string NumeroSinPuntoDecimal(string strNumero)
        {
            string strRespuesta = "0.00";
            string[] lstNumero;
            if (strNumero == string.Empty || strNumero == "0")
            {
                strNumero = strRespuesta;
            }
            if (strNumero.Contains("."))
            {
                lstNumero = strNumero.Split('.');
                strRespuesta = lstNumero[0] + lstNumero[1].PadRight(2, '0');
            }
            else
            {
                strNumero = strNumero + "00";
                strRespuesta = strNumero;
            }
            return strRespuesta;
        }

        // Ramiro Lugmania 2012-06-26
        // Se optimiza el uso de memoria cambiando las cadenas string.Empty por string.Empty
        // Se aplica el conjunto de reglas de nomenclatura propestas por stylecop
        private string TransformarTramaEnviar(DataSet dsEntrada, string plantillaXml, string transaccion, ref string idOrigen, ref double valor, double valorIva)
        {
            EventLog.WriteEntry("EasySwitch", "private string TransformarTramaEnviar(DataSet dsEntrada, string plantillaXml, string transaccion, ref string idOrigen, ref double valor, double valorIva)" +
                "\ndsEntrada= " + dsEntrada.Tables.ToString() + "\nplantillaXml= " + plantillaXml + "\ntransaccion= " + transaccion + "\nidOrigen= " + idOrigen + "\nvalor= " + valor.ToString() + "\nvalorIva= " + valorIva.ToString());
            #region Declaracion de variables
            //la trama a enviar en el Pacifico es un xml.            
            string operador = string.Empty;
            string numeroTransaccion = string.Empty;
            string empresa = string.Empty;
            string producto = string.Empty;
            string servicio = string.Empty;
            string servicio1 = string.Empty;
            string fechaTransaccion = string.Empty;
            string fechaContable = string.Empty;
            string horaTransaccion = string.Empty;
            string canalProceso = string.Empty;
            string UserWS = string.Empty;
            string PasswordWS = string.Empty;
            string Codigo = string.Empty;
            string TipoCodigo = string.Empty;
            string Auxiliar = string.Empty;
            string strResultado = string.Empty;
            string Identificacion = string.Empty;
            string ReferenciaComprobante = string.Empty;
            string strDescRubro1 = string.Empty;
            string strDescRubro2 = string.Empty;
            string strDescRubro3 = string.Empty;
            string strDescRubro4 = string.Empty;
            //string CodigoAdicionalAuxiliar;

            ////Roger NewWS: Agregado 08/02/2018 para nueva especificación retiro
            string FechaCaducidad = string.Empty; string TipoCuenta = string.Empty; string TipoIdentificacion = string.Empty; string NumeroCuentaRed = string.Empty;
            string idAgencia = string.Empty; string idMensaje = string.Empty; string localidad = string.Empty; string fecha_caducidad = FechaCaducidad;
            //identificacion,mediootp,numerotarjeta,tipocuenta,tipoidentificacion   //estos se les puede llamar normalmente
            //End Roger NewWS

            string placa = string.Empty;
            string TipoServicio = string.Empty;


            string ReferenciaOrdenante = string.Empty;
            string ReferenciaSecundaria = string.Empty;
            string RefernciaNumero_Documento = string.Empty;
            string Valor = string.Empty;
            //master
            var ValorTar = "0.00";
            string CodigoMoneda = "USD";
            string FormaPago = string.Empty;
            string NumeroCuenta = string.Empty;
            string NumeroTransaccionReversar = string.Empty;
            string Motivo = "000";
            string ValorComision = "000000000000000";
            string NumeroTransaccionComision = string.Empty;
            long NumeroTransaccionEnviar = 1000000;

            //-----para caso de global envio
            string strOrdenBanco = string.Empty;
            string strSecuencial = string.Empty;
            string strIdentificacion = string.Empty;
            string strDireccionCliente = string.Empty;
            string strTelefono = string.Empty;
            string strFechaNacimiento = string.Empty;
            string strEstadoCivil = string.Empty;
            string strApellidoConyuge = string.Empty;
            bool bolTieneComision = false;
            string CodigoAdicional = string.Empty;
            string strOperadora = string.Empty;
            string strNombre1 = string.Empty;
            string strNombre2 = string.Empty;
            string strApellido1 = string.Empty;
            string strApellido2 = string.Empty;
            string strProvincia = string.Empty;
            string strCanton = string.Empty;
            string strValorRubro1 = string.Empty;
            string strValorRubro2 = string.Empty;
            string strValorRubro3 = string.Empty;
            string strValorRubro4 = string.Empty;
            string traceInformation = string.Empty;
            string Empresa = string.Empty;
            string RucCedula = "C9999999999";
            string NombreFactura = "";

            string referenciaComboDescripcion = string.Empty;
            //string strIdentificacion = "";

            //amt
            string referenciaSecundaria = string.Empty, IdentificacionFactura = string.Empty;
            //Variables para el pago de MRLRCM, agregado por luis.lopez(11/08/2014)
            string strNombresEmpleado = string.Empty;
            string strConcepto = string.Empty;
            string valorSubTotal = string.Empty;
            string valorInteres = string.Empty;
            //eeqol
            string fechaemision = string.Empty, fechavencimiento = string.Empty;
            //scias
            string tipoIdentificacion = string.Empty;
            //judicatura
            string Nombre = string.Empty, AuxiliarJudicatura = string.Empty, codigoJudicatura = string.Empty;
            //ANT CON CAMBIOS DEL UPGRADE
            //Modifica Erika para porceso de ATM
            string tipoDocumento = string.Empty;
            //cte
            string tipoCobro = string.Empty;

            //DATOS DE LA TABLA USUARIOS
            string UsuarioCajero = string.Empty;
            string OficinaCPT = string.Empty;
            string CodigoOficina = string.Empty;

            string strTipoIDCliente = string.Empty;
            #endregion

            //------------------------------
            string strCodigo = string.Empty;
            string ReferenciaComprobante1 = string.Empty;

            try
            {
                EventLog.WriteEntry("EasySwitch", "dsEntrada: " + dsEntrada.GetXml(), EventLogEntryType.Information);

                if (dsEntrada.Tables["DatosTransaccion"].Rows.Count > 0)
                {
                    DataRow informacionTransaccion = dsEntrada.Tables["DatosTransaccion"].Rows[0];

                    if (informacionTransaccion["Fuente_Informacion"].ToString() == "PACIFICO_BABAHOYOEP")
                    {
                        ReferenciaComprobante1 = informacionTransaccion["Referencia"].ToString();
                        EventLog.WriteEntry("EasySwitch", "Para RefComp Babahoyo: " + ReferenciaComprobante1, EventLogEntryType.Information);

                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia_Adicional"))
                        {
                            //Aumento para Babahoyo OJOOOOOOOOOO
                            //esta bien
                            ReferenciaComprobante = informacionTransaccion["Referencia_Adicional"].ToString() +
                            informacionTransaccion["Referencia"].ToString().Substring(0, 2);
                            //ReferenciaComprobante = informacionTransaccion["Referencia_Adicional"].ToString();
                           // informacionTransaccion["Referencia"].ToString().Substring(0, 2);

                            //if (informacionTransaccion["Tipo"].ToString() == "CONSULTA")
                            //    ReferenciaComprobante = informacionTransaccion["Referencia_Adicional"].ToString();

                            //if (informacionTransaccion["Tipo"].ToString() == "CONSULTA")
                            //    informacionTransaccion["Referencia"].ToString().Substring(0, 2);

                            EventLog.WriteEntry("EasySwitch", "Para Babahoyo: " + ReferenciaComprobante, EventLogEntryType.Information);
                        }
                    }

                    if (informacionTransaccion["Fuente_Informacion"].ToString() == "PACIFICO_SENESCYT")
                    {                    
                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Codigo"))
                        {
                            ReferenciaComprobante = informacionTransaccion["Codigo"].ToString();
                            //EventLog.WriteEntry("EasySwitch", "Para RefComp Senescyt:1: " + ReferenciaComprobante, EventLogEntryType.Information);
                        }
                    }

                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Fuente_Registrador"))
                        operador = informacionTransaccion["Fuente_Registrador"].ToString();
                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Id_Empresa"))
                        empresa = informacionTransaccion["Id_Empresa"].ToString();
                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Id_Contrato"))
                        producto = informacionTransaccion["Id_Contrato"].ToString();
                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Id_Servicio"))
                        servicio = informacionTransaccion["Id_Servicio"].ToString();
                    //ANT CON CAMBIOS DEL UPGRADE
                    //Modifica Erika para porceso de ATM
                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Tipo_Documento"))
                        tipoDocumento = informacionTransaccion["Tipo_Documento"].ToString();

                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("FechaProceso"))
                    {
                        if (informacionTransaccion["FechaProceso"].ToString().Length > 8)
                            fechaTransaccion = Convert.ToDateTime(informacionTransaccion["FechaProceso"].ToString()).ToString("yyyyMMdd");
                        else
                            fechaTransaccion = informacionTransaccion["FechaProceso"].ToString();
                    }
                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("FechaValor"))
                    {
                        if (informacionTransaccion["FechaValor"].ToString().Length > 8)
                            fechaContable = Convert.ToDateTime(informacionTransaccion["FechaValor"].ToString()).ToString("yyyyMMdd");
                        else
                            fechaContable = informacionTransaccion["FechaValor"].ToString();
                    }

                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("HoraTransaccion"))
                        horaTransaccion = Convert.ToDateTime(informacionTransaccion["HoraTransaccion"].ToString()).ToString("HHmmss");
                    //
                    canalProceso = "CPT";
                    UserWS = string.Empty;// este usuario hay que sacarlo de una tabla
                    PasswordWS = string.Empty;//este pass hay que sacarlo de una tabla
                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Contrapartida"))
                        Codigo = informacionTransaccion["Contrapartida"].ToString();


                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia"))
                    {
                        switch (transaccion)
                        {
                            case "REGISTRO_PACIFICO_JUDICATURAPER":
                            case "REGISTRO_PACIFICO_EMAPOTAV":
                            case "REGISTRO_PACIFICO_MININTERSD":
                            case "REGISTRO_PACIFICO_MININTERCD":
                            case "REGISTRO_PACIFICO_EMOV":
                            case "REGISTRO_PACIFICO_CNTVTA":
                            case "CONSULTA_PACIFICO_IESSOL":
                                AuxiliarJudicatura = informacionTransaccion["Referencia"].ToString();
                                break;
                        }
                    }


                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Contrapartida") && (transaccion == "REGISTRO_PACIFICO_JUDICATURAPER"))
                    {
                        traceInformation = traceInformation + " Dentro REGISTRO_PACIFICO_JUDICATURAPER Contrapartida = " + informacionTransaccion["ContraPartida"].ToString();
                        string aux = informacionTransaccion["ContraPartida"].ToString().Replace("-", "|");
                        traceInformation = traceInformation + " Dentro REGISTRO_PACIFICO_JUDICATURAPER Contrapartida aux = " + aux;
                        Codigo = aux.Split('|')[0].Trim();
                        codigoJudicatura = aux;
                    }


                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia") && transaccion == "CONSULTA_PACIFICO_SRICEP")
                    {
                        strCodigo = informacionTransaccion["Referencia"].ToString().Split('|')[0];
                        Auxiliar = informacionTransaccion["Referencia"].ToString().Split('|')[1];
                    }

                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Ciudad_Cliente"))
                    {
                        CodigoAdicional = informacionTransaccion["Ciudad_Cliente"].ToString();
                    }

                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia") && (transaccion.Contains("TVCABLE") || transaccion.Contains("JUDICATURA")))
                    {
                        CodigoAdicional = informacionTransaccion["Referencia"].ToString();
                    }

                    if (transaccion.Contains("TVCABLEOL"))
                    {
                        Codigo = informacionTransaccion["Contrapartida"].ToString();
                        if (Codigo.Length <= 10)
                            Codigo = "C" + Codigo;
                        else
                            Codigo = "R" + Codigo;
                    }

                    if (transaccion.Contains("SCIAS"))
                    {
                        Codigo = informacionTransaccion["Codigo"].ToString();
                        if (Codigo.Length <= 10)
                            tipoIdentificacion = "C";
                        else
                            tipoIdentificacion = "R";
                    }

                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia") && transaccion == "CONSULTA_PACIFICO_AMBATO")
                        TipoCodigo = informacionTransaccion["Referencia"].ToString();
                    else
                    {
                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Ciudad_Cliente"))
                            TipoCodigo = informacionTransaccion["Ciudad_Cliente"].ToString();
                    }
                    //Para Babahoyo CAMBIE
                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia") &&
                        informacionTransaccion["Fuente_Informacion"].ToString() != "PACIFICO_BABAHOYOEP")
                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia"))
                        {
                        ReferenciaSecundaria = informacionTransaccion["Referencia"].ToString();
                        ReferenciaComprobante = informacionTransaccion["Referencia"].ToString();
                    }

                    //eeqol
                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("TipoId_Cliente") && (transaccion == "REGISTRO_PACIFICO_EEQOL"))
                        TipoCodigo = informacionTransaccion["TipoId_Cliente"].ToString();
                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("NumeroId_Cliente") && ((transaccion == "REGISTRO_PACIFICO_EEQOL") || (transaccion == "REGISTRO_PACIFICO_TUAYUDAC")))
                        Identificacion = informacionTransaccion["NumeroId_Cliente"].ToString();
                    if (transaccion == "REGISTRO_PACIFICO_EEQOL")
                        ReferenciaSecundaria = TipoCodigo + Identificacion;


                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia") && (transaccion == "REGISTRO_PACIFICO_EEQOL"))
                    {
                        Codigo = informacionTransaccion["Referencia"].ToString().Substring(16, 20);
                        ReferenciaComprobante = informacionTransaccion["ContraPartida"].ToString();
                        // Codigo = informacionTransaccion["Referencia"].ToString().Substring(17,3);
                    }


                   


                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia_Adicional") && (transaccion != "CONSULTA_PACIFICO_SRICEP" ||
                        transaccion == "REGISTRO_PACIFICO_CNTVTA" || transaccion == "CONSULTA_PACIFICO_YANBAL" || transaccion == "REGISTRO_PACIFICO_MININTERSD"
                        || transaccion == "CONSULTA_PACIFICO_IESSOL"))
                        Auxiliar = informacionTransaccion["Referencia_Adicional"].ToString();

                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia") && transaccion == "REGISTRO_PACIFICO_AMT")
                    {
                        ReferenciaSecundaria = informacionTransaccion["Referencia"].ToString().Substring(0, 14);
                        ReferenciaComprobante = informacionTransaccion["Referencia"].ToString().Substring(15, 3);
                    }

                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia_Adicional") && transaccion == "REGISTRO_PACIFICO_ESMENA")
                    {
                        CodigoAdicional = informacionTransaccion["Referencia_Adicional"].ToString();
                        Nombre = informacionTransaccion["NombreContrapartida"].ToString();
                    }

                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Auxiliar") && transaccion == "CONSULTA_PACIFICO_AMT")
                        Auxiliar = informacionTransaccion["Auxiliar"].ToString();
                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Codigo") && transaccion == "CONSULTA_PACIFICO_AMT")
                        Codigo = informacionTransaccion["Codigo"].ToString();


                    traceInformation = "transaccion1:" + transaccion;
                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Numero_Documento"))
                        RefernciaNumero_Documento = informacionTransaccion["Numero_Documento"].ToString();
                    else
                        RefernciaNumero_Documento = ReferenciaSecundaria;

                    traceInformation = "RefernciaNumero_Documento:" + RefernciaNumero_Documento;
                     EventLog.WriteEntry("EasySwitch", "NEAP-RefernciaNumero_Documento:" + RefernciaNumero_Documento);
                  
                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("TipoId_Cliente") &&
                        dsEntrada.Tables["DatosTransaccion"].Columns.Contains("NumeroId_Cliente"))
                    {
                        //strIdentificacion = informacionTransaccion["NumeroId_Cliente"].ToString();
                        if (informacionTransaccion["NumeroId_Cliente"].ToString() == string.Empty)
                            Identificacion = "C0000000000";
                        else
                            if (informacionTransaccion["NumeroId_Cliente"].ToString().Length == 10)
                            Identificacion = "C" + informacionTransaccion["NumeroId_Cliente"].ToString();
                        else
                                if (informacionTransaccion["NumeroId_Cliente"].ToString().Length == 13)
                            Identificacion = "R" + informacionTransaccion["NumeroId_Cliente"].ToString();
                        else
                            Identificacion = informacionTransaccion["TipoId_Cliente"].ToString() + informacionTransaccion["NumeroId_Cliente"].ToString();

                        traceInformation = "Identificacion:" + Identificacion;
                        EventLog.WriteEntry("EasySwitch", "Identificacion:" + Identificacion);
                    }

                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia") && (transaccion == "CONSULTA_PACIFICO_JUDICATURAPER"))
                        Auxiliar = informacionTransaccion["Referencia"].ToString();

                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia_Adicional") &&
                        (transaccion == "CONSULTA_PACIFICO_JUDICATURAPER" || transaccion == "REGISTRO_PACIFICO_ATMOL" || transaccion == "CONSULTA_PACIFICO_ATMOL"
                                             || transaccion == "CONSULTA_PACIFICO_RET" || transaccion == "REGISTRO_PACIFICO_RET" || transaccion == "REGISTRO_PACIFICO_SALDOS"))
                        CodigoAdicional = informacionTransaccion["Referencia_Adicional"].ToString();

                    if (transaccion == "CONSULTA_PACIFICO_DMTMANTA" || transaccion == "REGISTRO_PACIFICO_DMTMANTA" || transaccion == "REVERSO_PACIFICO_DMTMANTA")
                    {
                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia_Adicional"))
                            CodigoAdicional = informacionTransaccion["Referencia_Adicional"].ToString();

                        if (RefernciaNumero_Documento != "")
                            CodigoAdicional = RefernciaNumero_Documento;

                       
                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia") && transaccion.Contains("CONSULTA"))
                        {
                            CodigoAdicional = informacionTransaccion["Referencia"].ToString();


                        }
                        ReferenciaComprobante = CodigoAdicional;
                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("NombreContrapartida"))
                            ReferenciaOrdenante = informacionTransaccion["NombreContrapartida"].ToString();


                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia_Adicional") && dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia"))
                            ReferenciaComprobante = informacionTransaccion["Referencia_Adicional"].ToString() + informacionTransaccion["Referencia"].ToString();


                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Ordenante"))
                            RucCedula = informacionTransaccion["Ordenante"].ToString().Split('|')[0];
                        
                        
                        //reVISAR NEAP
                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("FechaContable"))
                            fechaContable = DateTime.Now.ToString("yyyyMMdd");

                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Identificacion"))
                        {
                            Identificacion = informacionTransaccion["Identificacion"].ToString();
                            IdentificacionFactura = Identificacion;
                            if (Identificacion.Length <= 10)
                                Identificacion = "C" + Codigo;
                            else
                                Identificacion = "R" + Codigo;
                            ReferenciaSecundaria = Identificacion;


                        }
                    }

                    if (transaccion == "CONSULTA_PACIFICO_BABAHOYOEP" || transaccion == "REGISTRO_PACIFICO_BABAHOYOEP" || transaccion == "REVERSO_PACIFICO_BABAHOYOEP")
                    {

                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia") && transaccion.Contains("CONSULTA"))
                            CodigoAdicional = informacionTransaccion["Referencia"].ToString();
                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("NombreContrapartida"))
                            ReferenciaOrdenante = informacionTransaccion["NombreContrapartida"].ToString();

                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Ordenante"))
                            RucCedula = informacionTransaccion["Ordenante"].ToString().Split('|')[0];
                      
                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("FechaContable"))
                            fechaContable = DateTime.Now.ToString("yyyyMMdd");

                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Identificacion"))
                        {
                            Identificacion = informacionTransaccion["Identificacion"].ToString();
                            IdentificacionFactura = Identificacion;
                            if (Identificacion.Length <= 10)
                                Identificacion = "C" + Codigo;
                            else
                                Identificacion = "R" + Codigo;
                            ReferenciaSecundaria = Identificacion;


                        }
                    }
                    if (transaccion == "CONSULTA_PACIFICO_SENESCYT" || transaccion == "REGISTRO_PACIFICO_SENESCYT" || transaccion == "REVERSO_PACIFICO_SENESCYT")
                    {
                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia_Adicional"))
                        {
                            ReferenciaComprobante = informacionTransaccion["Referencia_Adicional"].ToString();
                            //EventLog.WriteEntry("EasySwitch", "Para RefComp Senescytabajo: " + ReferenciaComprobante, EventLogEntryType.Information);
                        }
                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia"))
                        {
                            CodigoAdicional = informacionTransaccion["Referencia"].ToString();
                           // EventLog.WriteEntry("EasySwitch", "Para Referencia Senescytabajo: " + ReferenciaComprobante, EventLogEntryType.Information);
                        }

                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Codigo") && transaccion.Contains("CONSULTA"))
                            Codigo = informacionTransaccion["Codigo"].ToString();

                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Contrapartida")) { 
                            Identificacion = informacionTransaccion["Contrapartida"].ToString();
                     
                        if (Identificacion.Length <= 10)
                            Identificacion = "C" + Codigo;
                        else
                            Identificacion = "R" + Codigo;
                        }

                    }

                        if (transaccion == "CONSULTA_PACIFICO_TURISMO" || transaccion == "REGISTRO_PACIFICO_TURISMO" || transaccion == "REVERSO_PACIFICO_TURISMO")
                    {
                        fechaContable = DateTime.Now.ToString("yyyyMMdd");
                    }
                        traceInformation = "antes de la validacion del ordenante1";
                    //EventLog.WriteEntry("EasySwitch", "antes de la validacion del ordenante1");
                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Ordenante") && transaccion.Contains("REGISTRO"))
                    {
                        traceInformation = "Validacion de Ordenante para las facturas";
                        if (informacionTransaccion["Ordenante"].ToString().Contains("|"))
                        {
                            traceInformation = "Validacion que existe el | para realizar el split";

                            RucCedula = informacionTransaccion["Ordenante"].ToString().Split('|')[0];
                            NombreFactura = informacionTransaccion["Ordenante"].ToString().Split('|')[1];
                            traceInformation = "Luego de obtener los datos de orednante";
                            if (RucCedula.Length == 10)
                                RucCedula = "C" + RucCedula;
                            else
                                if (RucCedula.Length == 13)
                                RucCedula = "R" + RucCedula;
                            else
                                Identificacion = informacionTransaccion["TipoId_Cliente"].ToString() + informacionTransaccion["NumeroId_Cliente"].ToString();
                        }

                    }


                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("NumeroId_Cliente"))
                    {
                        strIdentificacion = informacionTransaccion["NumeroId_Cliente"].ToString();
                        Identificacion = informacionTransaccion["NumeroId_Cliente"].ToString();
                        if (informacionTransaccion["NumeroId_Cliente"].ToString().Length == 10)
                            Identificacion = "C" + informacionTransaccion["NumeroId_Cliente"].ToString();
                        else
                            if (informacionTransaccion["NumeroId_Cliente"].ToString().Length == 13)
                            Identificacion = "R" + informacionTransaccion["NumeroId_Cliente"].ToString();
                    }
                    //EventLog.WriteEntry("EasySwitch", "1 Identificacion:" + Identificacion);
                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("NombreContraPartida"))
                    {
                        ReferenciaOrdenante = informacionTransaccion["NombreContraPartida"].ToString();
                        FechaCaducidad = informacionTransaccion["NombreContraPartida"].ToString();
                    }
                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Moneda"))
                        CodigoMoneda = informacionTransaccion["Moneda"].ToString();
                    // EventLog.WriteEntry("EasySwitch", " trama enviar dsEntrada="+ dsEntrada.GetXml());
                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Valor"))
                    {
                        // EventLog.WriteEntry("EasySwitch", "1 Valor:" + informacionTransaccion["Valor"].ToString());
                        Valor = String.Format("{0:f}", Convert.ToDouble(informacionTransaccion["Valor"].ToString()));
                        valor = Convert.ToDouble(informacionTransaccion["Valor"].ToString());
                        Valor = NumeroSinPuntoDecimal(Valor).PadLeft(15, '0');
                        traceInformation = "El valor de la transacciones " + Valor;
                        // EventLog.WriteEntry("EasySwitch", "2 Valor:" + Valor);
                    }

                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Numero_Cuenta"))
                        NumeroCuenta = informacionTransaccion["Numero_Cuenta"].ToString(); //"0002739933";//
                    //NumeroCuenta = "0002739933";//
                    FormaPago = "CU";
                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Id_Item"))
                    {
                        idOrigen = informacionTransaccion["Id_Item"].ToString();
                        NumeroTransaccionReversar = informacionTransaccion["Id_Item"].ToString();
                        numeroTransaccion = informacionTransaccion["Id_Item"].ToString();
                    }

                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("NumeroTransaccionComision"))
                    {
                        NumeroTransaccionComision = informacionTransaccion["NumeroTransaccionComision"].ToString();
                    }
                    //if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("MotivoReverso") && dr["MotivoReverso"].ToString()!=string.Empty)
                    //    Motivo = dr["MotivoReverso"].ToString();
                    //EventLog.WriteEntry("EasySwitch","Antes de comision");
                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Comision"))
                    {

                        ValorComision = String.Format("{0:f}", Convert.ToDouble(informacionTransaccion["Comision"].ToString()));
                        if (Convert.ToDouble(informacionTransaccion["Comision"].ToString()) > 0)
                        {
                            bolTieneComision = true;

                            //por temas de regulacion el banco nos envia el valor de la comision sin el iva
                            //por lo que hay que calcular el 12 % del iva a este valor y la suma de estos dos valores enviar hacia el teller

                            //EventLog.WriteEntry("EasySwitch", "Convert.ToDouble(ValorComision)=" + Convert.ToDouble(ValorComision).ToString());
                            //EventLog.WriteEntry("EasySwitch", "(valorIva / 100)=" + (valorIva / 100));
                            //EventLog.WriteEntry("EasySwitch", "Math.Round(Convert.ToDouble(ValorComision) * (valorIva / 100),2))=" + string.Format("{0:0.00}" ,Convert.ToDouble(ValorComision) * (valorIva / 100)));
                            //EventLog.WriteEntry("EasySwitch", "Math.Round(Convert.ToDouble(ValorComision) * (valorIva / 100),2))=" + Math.Round(Convert.ToDouble(ValorComision) * (valorIva / 100), 3));
                            //EventLog.WriteEntry("EasySwitch", "Math.Round(Convert.ToDouble(ValorComision) * (valorIva / 100),2))=" + Math.Round(Convert.ToDouble(ValorComision) * (valorIva / 100), 2));
                            //EventLog.WriteEntry("EasySwitch", "ValorComision=" + ValorComision);

                            if (valorIva > 0)
                            {
                                //ValorComision = String.Format("{0:0.00}", Convert.ToDouble(ValorComision) - (Convert.ToDouble(ValorComision) * (valorIva / 100)));
                                //ValorComision = Math.Round((Convert.ToDouble(ValorComision) - (Convert.ToDouble(ValorComision) * (valorIva / 100))),2).ToString();
                                ValorComision = Math.Round(Convert.ToDouble(ValorComision) / (1 + (valorIva / 100)), 2).ToString();
                            }
                        }
                        ValorComision = NumeroSinPuntoDecimal(ValorComision).PadLeft(15, '0');
                        traceInformation = "El Valor de la comision es " + ValorComision;
                    }
                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Secuencial_Tercero"))
                    {
                        strSecuencial = informacionTransaccion["Secuencial_Tercero"].ToString();
                        traceInformation = "EL valor de Secuencial_tercero es " + strSecuencial;
                    }

                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Codigo_Tercero"))
                    {
                        //Codigo_Tercero = dr["Codigo_Tercero"].ToString().Split('!');                        
                        if (informacionTransaccion["Codigo_Tercero"].ToString().Contains("!"))
                        {
                            strOrdenBanco = informacionTransaccion["Codigo_Tercero"].ToString().Split('!')[0];
                            strSecuencial = informacionTransaccion["Codigo_Tercero"].ToString().Split('!')[1];
                        }
                        else
                        {
                            strOrdenBanco = informacionTransaccion["Codigo_Tercero"].ToString();
                        }

                        try
                        {
                            strOrdenBanco = Convert.ToInt32(strOrdenBanco).ToString();
                        }
                        catch (Exception ex)
                        {
                            strOrdenBanco = "";
                        }
                        traceInformation = "EL valor de strOrdenBanco es " + strOrdenBanco;
                    }

                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Direccion_Cliente"))
                        strDireccionCliente = informacionTransaccion["Direccion_Cliente"].ToString();
                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Telefono_Cliente"))
                        strTelefono = informacionTransaccion["Telefono_Cliente"].ToString();

                    traceInformation = "Despues de obtener datos de direcciones y antes de REGISTRO_PACIFICO_GLOBAL";

                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia_Adicional") && transaccion == "REGISTRO_PACIFICO_GLOBAL")
                    {
                        strFechaNacimiento = informacionTransaccion["Referencia_Adicional"].ToString().Split('|')[1];
                        strEstadoCivil = informacionTransaccion["Referencia_Adicional"].ToString().Split('|')[2];
                        strApellidoConyuge = informacionTransaccion["Referencia_Adicional"].ToString().Split('|')[3];
                    }

                    traceInformation = "Despues de obtener datos de REGISTRO_PACIFICO_GLOBAL";
                    //2019-07-18 ANT EN LINEA UNIFICADO
                    //EventLog.WriteEntry("EasySwitch", "0 CONSULTA_PACIFICO_ANTENLINEA ");
                    // EventLog.WriteEntry("EasySwitch", "0 CONSULTA_PACIFICO_ANTENLINEA transaccion=" + transaccion);
                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Numero_Documento") && transaccion == "CONSULTA_PACIFICO_ANTENLINEA")
                    {
                        Auxiliar = informacionTransaccion["Numero_Documento"].ToString();
                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia"))
                            CodigoAdicional = informacionTransaccion["Referencia"].ToString();

                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("NumeroId_Cliente"))
                            Codigo = informacionTransaccion["NumeroId_Cliente"].ToString();

                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Contrapartida"))
                            codigoJudicatura = informacionTransaccion["Contrapartida"].ToString();

                    }
                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Numero_Documento") &&
                        (transaccion == "CONSULTA_PACIFICO_ANTO" || transaccion == "CONSULTA_PACIFICO_ANTCO"))
                    {
                        Auxiliar = informacionTransaccion["Numero_Documento"].ToString();
                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia_Adicional"))
                            CodigoAdicional = informacionTransaccion["Referencia_Adicional"].ToString();

                        Codigo = informacionTransaccion["NumeroId_Cliente"].ToString();
                        //ANT CON CAMBIOS DEL UPGRADE 
                        codigoJudicatura = informacionTransaccion["Contrapartida"].ToString();
                        if (transaccion != "CONSULTA_PACIFICO_ANTCO")
                            //CodigoAdicional += informacionTransaccion["Contrapartida"].ToString();
                            CodigoAdicional += informacionTransaccion["Contrapartida"].ToString().PadLeft(10, '0');
                        else
                            CodigoAdicional += "0000000000";
                    }
                    traceInformation = "Despues de obtener datos de CONSULTA_PACIFICO_ANTO";

                    if (transaccion == "CONSULTA_PACIFICO_ANTON")
                    {
                        Auxiliar = informacionTransaccion["Numero_Documento"].ToString();

                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia_Adicional"))
                            CodigoAdicional = informacionTransaccion["Referencia_Adicional"].ToString();
                        else
                            CodigoAdicional += informacionTransaccion["Contrapartida"].ToString().PadLeft(10, '0');

                        Codigo = informacionTransaccion["ContraPartida"].ToString();
                    }
                    traceInformation = "Despues de obtener datos de CONSULTA_PACIFICO_ANTON";

                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia_Adicional") && (transaccion == "REGISTRO_PACIFICO_EMAPAI" || transaccion == "REGISTRO_PACIFICO_EMAPAA"))
                    {
                        traceInformation = "Despues de obtener datos de Referencia_Adicional:" + informacionTransaccion["Referencia_Adicional"].ToString();
                        Codigo = informacionTransaccion["Referencia_Adicional"].ToString().Split('!')[0];
                        traceInformation = "Despues de obtener datos de Referencia_Adicional[0]:" + informacionTransaccion["Referencia_Adicional"].ToString().Split('!')[0];
                        Identificacion = informacionTransaccion["Referencia_Adicional"].ToString().Split('!')[1];
                        traceInformation = "Despues de obtener datos de Referencia_Adicional[1]:" + informacionTransaccion["Referencia_Adicional"].ToString().Split('!')[1];
                        ReferenciaComprobante = Codigo.Substring(0, 10);

                    }

                    traceInformation = "Despues de obtener datos de REGISTRO_PACIFICO_EMAPAA";

                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia") && (transaccion == "REGISTRO_PACIFICO_MUNIAMBATO"))
                    {
                        Codigo = informacionTransaccion["Referencia"].ToString().Split('!')[0];
                        ReferenciaComprobante = informacionTransaccion["Referencia"].ToString().Split('!')[3] + informacionTransaccion["Referencia"].ToString().Split('!')[4];
                    }

                    traceInformation = "Despues de obtener datos de REGISTRO_PACIFICO_MUNIAMBATO";

                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia") && (transaccion == "REGISTRO_PACIFICO_UNIVISA"))
                    {
                        ReferenciaComprobante = informacionTransaccion["Referencia_Adicional"].ToString() + informacionTransaccion["Ciudad_Cliente"].ToString() + (informacionTransaccion["Referencia"].ToString().Length <= 8 ? informacionTransaccion["Referencia"].ToString().PadRight(8, ' ') : informacionTransaccion["Referencia"].ToString().Substring(0, 8));
                    }

                    traceInformation = "Despues de obtener datos de REGISTRO_PACIFICO_UNIVISA";

                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia") && (transaccion == "REGISTRO_PACIFICO_MUNIIBARRA"))
                    {
                        Codigo = informacionTransaccion["Referencia"].ToString().Split('!')[0];
                        Codigo += informacionTransaccion["Referencia"].ToString().Split('!')[1].Substring(34, 10);
                        ReferenciaComprobante = informacionTransaccion["Referencia"].ToString().Split('!')[1].Substring(0, 3) + informacionTransaccion["Referencia"].ToString().Split('!')[2];
                    }

                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("ContraPartida") && (transaccion == "REGISTRO_PACIFICO_RBCEDINERO"))
                    {
                        Codigo = informacionTransaccion["ContraPartida"].ToString();

                    }

                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("ContraPartida") && (transaccion == "REGISTRO_PACIFICO_DBCEDINERO"))
                    {
                        Codigo = informacionTransaccion["NombreContrapartida"].ToString();
                        ReferenciaComprobante = informacionTransaccion["ContraPartida"].ToString();

                    }

                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia_Adicional") && (transaccion == "REGISTRO_PACIFICO_GOBTUNGURAHU"))
                    {
                        Codigo = informacionTransaccion["Contrapartida"].ToString();
                        ReferenciaComprobante = informacionTransaccion["Referencia_Adicional"].ToString();
                        Identificacion = RucCedula;

                    }

                    traceInformation = "Despues de obtener datos de REGISTRO_PACIFICO_MUNIIBARRA";

                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia") && (transaccion == "REGISTRO_PACIFICO_CTG"))
                    {
                        Codigo = informacionTransaccion["Referencia"].ToString().Split('!')[0].Trim();
                        ReferenciaComprobante = informacionTransaccion["Referencia"].ToString().Split('!')[1].Trim();
                    }

                    traceInformation = "Despues de obtener datos de REGISTRO_PACIFICO_CTG";

                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia_Adicional") && (transaccion == "REGISTRO_PACIFICO_CNTTTSV"))
                    {
                        Codigo = informacionTransaccion["Referencia_Adicional"].ToString();
                        ReferenciaComprobante = string.Empty;
                        if (informacionTransaccion["Referencia"].ToString() != string.Empty)
                            ReferenciaComprobante = informacionTransaccion["Referencia"].ToString().PadRight(3, ' ');
                    }

                    traceInformation = "Despues de obtener datos de REGISTRO_PACIFICO_CNTTTSV";

                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("NombreContrapartida") && ((transaccion == "REGISTRO_PACIFICO_SRIMAT") || transaccion == "REGISTRO_PACIFICO_SRITDOM"))
                    {
                        int cantidadFinal = informacionTransaccion["NombreContrapartida"].ToString().Length - 30;
                        ReferenciaOrdenante = informacionTransaccion["NombreContrapartida"].ToString().Substring(0, 30);

                        if (transaccion == "REGISTRO_PACIFICO_SRIMAT")
                        {
                            ReferenciaComprobante = informacionTransaccion["NombreContrapartida"].ToString().Split('|')[1].ToString();
                        }
                        else
                        {
                            ReferenciaComprobante = informacionTransaccion["NombreContrapartida"].ToString().Substring(30, cantidadFinal);
                        }
                    }

                    traceInformation = "Despues de obtener datos de REGISTRO_PACIFICO_SRIMAT";

                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia_Adicional") && (transaccion == "REGISTRO_PACIFICO_SRIRISE"))
                    {
                        ReferenciaComprobante = informacionTransaccion["Referencia_Adicional"].ToString();
                    }

                    traceInformation = "Despues de obtener datos de REGISTRO_PACIFICO_SRIRISE";

                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia") && (transaccion == "REGISTRO_PACIFICO_MUNIQUITO"))
                    {
                        //Referencia 0,17 + nombrecontrapartida 44, 5, refere 17,3
                        traceInformation = "Obtiene Codigo para envio de muncipio de UIO";
                        Codigo = informacionTransaccion["Referencia"].ToString().Split('!')[0];
                        traceInformation = "Codigo:" + Codigo;
                        ReferenciaComprobante = informacionTransaccion["Referencia_Adicional"].ToString().Split('!')[1].ToString() + informacionTransaccion["Referencia"].ToString().Split('!')[1].Substring(0, 3) + informacionTransaccion["NombreContrapartida"].ToString().Substring(40, 4);
                        traceInformation = "ReferenciaComprobante:" + ReferenciaComprobante;
                        traceInformation = "Referencia[1]:" + informacionTransaccion["Referencia"].ToString().Split('!')[1];
                        strDescRubro1 = "IMPTO=" + informacionTransaccion["Referencia"].ToString().Split('!')[1].ToString().PadRight(50, ' ').Substring(3, 25);
                        traceInformation = "strDescRubro1:" + strDescRubro1;
                        strDescRubro2 = "LLAVE=" + informacionTransaccion["Contrapartida"].ToString();
                        traceInformation = "strDescRubro2:" + strDescRubro2;
                        ReferenciaOrdenante = informacionTransaccion["NombreContrapartida"].ToString().Substring(0, 40);
                        traceInformation = "ReferenciaOrdenante:" + ReferenciaOrdenante;
                    }

                    traceInformation = "Despues de obtener datos de REGISTRO_PACIFICO_MUNIQUITO";

                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia") && (transaccion == "REGISTRO_PACIFICO_MUNIQUITOEL"))
                    {
                        //Referencia 0,17 + nombrecontrapartida 44, 5, refere 17,3
                        traceInformation = "Obtiene Codigo para envio de muncipio de UIO";
                        string[] Referencia;
                        string[] NombreContrapartida;
                        string[] Contrapartida;

                        Referencia = informacionTransaccion["Referencia"].ToString().Split('!');
                        NombreContrapartida = informacionTransaccion["NombreContrapartida"].ToString().Split('!');
                        Contrapartida = informacionTransaccion["Contrapartida"].ToString().Split('!');

                        Codigo = Contrapartida[0] + Contrapartida[1] + Contrapartida[2] + Referencia[5].PadRight(5, ' ') + Contrapartida[3] + Contrapartida[4];

                        traceInformation = "Codigo:" + Codigo;

                        ReferenciaComprobante = NombreContrapartida[1] + Referencia[3] + Referencia[0] + Referencia[4];

                        traceInformation = "ReferenciaComprobante:" + ReferenciaComprobante;

                        strDescRubro1 = NombreContrapartida[0].Substring(0, 35);

                        traceInformation = "strDescRubro1:" + strDescRubro1;

                        strDescRubro2 = Referencia[2];

                        traceInformation = "strDescRubro2:" + strDescRubro2;

                        strDescRubro3 = Referencia[1];

                        traceInformation = "strDescRubro3:" + strDescRubro3;

                        ReferenciaOrdenante = NombreContrapartida[0].Substring(0, 25);

                        traceInformation = "ReferenciaOrdenante:" + ReferenciaOrdenante;

                        strDescRubro4 = NombreContrapartida[0].Substring(35, 8);

                        traceInformation = "strDescRubro4:" + strDescRubro4;
                    }

                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia") && (transaccion == "REGISTRO_PACIFICO_EEQOL"))
                    {
                        fechaemision = informacionTransaccion["Referencia"].ToString().Substring(0, 8);
                        fechavencimiento = informacionTransaccion["Referencia"].ToString().Substring(8, 8);
                        // EventLog.WriteEntry("easysoft", "REGISTRO_PACIFICO_EEQOL fechaemision=" + fechaemision + "==>fechavencimiento=" + fechavencimiento);
                    }
                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("NombreContrapartida") && (transaccion == "REGISTRO_PACIFICO_JUDICATURAPER"))
                    {
                        ReferenciaOrdenante = informacionTransaccion["NombreContrapartida"].ToString().Split('|')[0];
                        Nombre = informacionTransaccion["NombreContrapartida"].ToString().Split('|')[1];
                    }
                    if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia") && (transaccion == "REGISTRO_PACIFICO_JUDICATURAPER"))
                        ReferenciaComprobante = informacionTransaccion["Referencia"].ToString().Split('|')[0];


                    if (transaccion == "REGISTRO_PACIFICO_MASTER_1")
                    {
                        if (dsEntrada.Tables["Journal"].Columns.Contains("Valor"))
                        {
                            ValorTar = String.Format("{0:f}", Convert.ToDouble(dsEntrada.Tables["Journal"].Rows[0]["Valor"].ToString()));

                        }
                    }


                    if ((transaccion == "CONSULTA_PACIFICO_RET" || transaccion == "REGISTRO_PACIFICO_RET" || transaccion == "REGISTRO_PACIFICO_MASTER_1" || transaccion == "REGISTRO_PACIFICO_SALDOS"))
                    {
                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Valor"))
                        {
                            Valor = String.Format("{0:f}", Convert.ToDouble(informacionTransaccion["Valor"].ToString()));

                        }

                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("NumeroId_Cliente"))
                            Identificacion = (string)dsEntrada.Tables["DatosTransaccion"].Rows[0]["NumeroId_Cliente"];

                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("TipoId_Cliente"))
                        {
                            strTipoIDCliente = informacionTransaccion["TipoId_Cliente"].ToString();
                            if (strTipoIDCliente.Equals("C"))
                            {
                                strTipoIDCliente = "Cedula";
                            }
                            else if (strTipoIDCliente.Equals("E"))
                            {
                                strTipoIDCliente = "Exterior";
                            }
                            else if (strTipoIDCliente.Equals("EXP"))
                            {
                                strTipoIDCliente = "Expediente";
                            }
                            else if (strTipoIDCliente.Equals("P"))
                            {
                                strTipoIDCliente = "Pasaporte";
                            }
                            else if (strTipoIDCliente.Equals("R"))
                            {
                                strTipoIDCliente = "Ruc";
                            }
                            else if (strTipoIDCliente.Equals("V"))
                            {
                                strTipoIDCliente = "Visa";
                            }
                            else if (strTipoIDCliente.Equals("X"))
                            {
                                strTipoIDCliente = "Otro";
                            }


                        }
                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Ciudad_Cliente"))
                        {
                            TipoCuenta = (string)dsEntrada.Tables["DatosTransaccion"].Rows[0]["Ciudad_Cliente"];
                            if (TipoCuenta.Contains("|"))
                                TipoCuenta = TipoCuenta.Split('|')[1];

                            if (TipoCuenta.Contains("AHO"))
                                TipoCuenta = "Ahorros";//CuentaRetiro = "CA";
                            else if (TipoCuenta.Contains("CORR"))
                                TipoCuenta = "Corriente";//CuentaRetiro = "CC";
                            else if (TipoCuenta.Contains("EXTER"))
                                TipoCuenta = "Exterior";//CuentaRetiro = "CC";
                            else if (TipoCuenta.Contains("LIS"))
                                TipoCuenta = "Lista";//CuentaRetiro = "CC";
                            else
                                TipoCuenta = "NoDefinido";
                        }

                        if (dsEntrada.Tables["DatosUsuario"].Columns.Contains("Id_Agencia"))        //agencia
                        {
                            idAgencia = (string)dsEntrada.Tables["DatosUsuario"].Rows[0]["Id_Agencia"];
                            if (idAgencia.Contains("|"))
                                idAgencia = idAgencia.Split('|')[1];
                        }

                        if (dsEntrada.Tables["DatosUsuario"].Columns.Contains("Ciudad"))        //localidad
                        {
                            localidad = (string)dsEntrada.Tables["DatosUsuario"].Rows[0]["Ciudad"];
                            if (localidad.Contains("|"))
                                localidad = localidad.Split('|')[1];
                        }

                        if (CodigoAdicional.Equals("S"))
                        {
                            CodigoAdicional = "SMS";
                        }
                        else if (CodigoAdicional.Equals("M"))
                        {
                            CodigoAdicional = "mail";
                        }
                        else if (CodigoAdicional.Equals("P"))
                        {
                            CodigoAdicional = "PACIFICID";
                        }

                    }

                    if (transaccion == "REGISTRO_PACIFICO_RCIC")
                    {

                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("NumeroId_Cliente"))
                        {
                             Codigo = informacionTransaccion["NumeroId_Cliente"].ToString();
                            if (Codigo.Length <= 10)
                                Codigo = "C" + Codigo;
                            else
                                Codigo = "R" + Codigo;
                        }

                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Valor"))
                        {
  
                            Valor = String.Format("{0:f}", Convert.ToDouble(informacionTransaccion["Valor"].ToString()));
                            valor = Convert.ToDouble(informacionTransaccion["Valor"].ToString());
                            Valor = NumeroSinPuntoDecimal(Valor).PadLeft(15, '0');
                            traceInformation = "El valor de la transacciones " + Valor;

                        }


                        ValorComision = String.Format("{0:f}", Convert.ToDouble((0.51).ToString()));
                                ValorComision = NumeroSinPuntoDecimal(ValorComision).PadLeft(15, '0');

                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia"))
                            CodigoAdicional = informacionTransaccion["Referencia"].ToString();
                    }

                    if (transaccion == "CONSULTA_PACIFICO_CBRESPOCH" || transaccion == "REGISTRO_PACIFICO_CBRESPOCH" || transaccion == "REVERSO_PACIFICO_CBRESPOCH")
                    {                   
                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia_Adicional"))
                                ReferenciaComprobante = informacionTransaccion["Referencia_Adicional"].ToString();
                        
                        fechaContable = DateTime.Now.ToString("yyyyMMdd");

                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Contrapartida"))
                            Codigo = informacionTransaccion["Contrapartida"].ToString();

                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia"))
                            CodigoAdicional = informacionTransaccion["Referencia"].ToString();

                    }

                    if (transaccion == "REGISTRO_PACIFICO_TURISMO")
                    {
                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Identificacion"))
                           Identificacion =  informacionTransaccion["Identificacion"].ToString();
                    }

                    traceInformation = "Despues de obtener datos de Referencia Comprobante";
                    EventLog.WriteEntry("EasySwitch", "transaccion:" + transaccion);
                    #region Asignacion nivel 2
                    switch (transaccion)
                    {

                        case "REGISTRO_PACIFICO_ALIANZAPAIS":
                            Codigo = informacionTransaccion["Contrapartida"].ToString();
                            break;

                        case "REGISTRO_PACIFICO_RCIC":
                            // Codigo = informacionTransaccion["Contrapartida"].ToString();
                            Codigo = informacionTransaccion["NumeroId_Cliente"].ToString();
                            break;

                        case "REGISTRO_PACIFICO_PPSBONO":
                            Codigo = informacionTransaccion["Referencia"].ToString().Split('!')[0];
                            ReferenciaOrdenante = informacionTransaccion["NombreContrapartida"].ToString().PadRight(25, ' ').Substring(0, 25);
                            break;

                        case "REGISTRO_PACIFICO_CNTOL":
                            ReferenciaComprobante = informacionTransaccion["Referencia_Adicional"].ToString().Split('|')[0];
                            ReferenciaComprobante += informacionTransaccion["Referencia_Adicional"].ToString().Split('|')[1];
                            //agregado por luis.lopez (26/06/2014) (ojoooooooooo probar)
                            //por prueba  Identificacion = informacionTransaccion["NumeroId_Cliente"].ToString(); //<---
                            break;

                        case "REGISTRO_PACIFICO_ELEGYE":
                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia"))
                            {
                                Codigo = informacionTransaccion["Referencia"].ToString().Substring(16, 20);
                                strDescRubro2 = "FEMVE=" + informacionTransaccion["Referencia"].ToString().Substring(0, 16);
                            }
                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("NombreContrapartida"))
                                ReferenciaOrdenante = informacionTransaccion["NombreContrapartida"].ToString();
                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Contrapartida"))
                                ReferenciaComprobante = informacionTransaccion["Contrapartida"].ToString();

                            strDescRubro1 = "TPEND=Total Pendiente";
                            strValorRubro1 = Valor;


                            break;
                        case "REGISTRO_PACIFICO_BELECA":
                            //obtener el xml de plantilla para su remplazo
                            //TipoTransaccion = 0001 significa consulta

                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Telefono_Cliente"))
                                Codigo = informacionTransaccion["Telefono_Cliente"].ToString();
                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("TipoId_Cliente"))
                                TipoCodigo = informacionTransaccion["TipoId_Cliente"].ToString();
                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("NumeroId_Cliente"))
                                Identificacion = informacionTransaccion["NumeroId_Cliente"].ToString();

                            ReferenciaSecundaria = TipoCodigo + Identificacion;

                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("NombreContrapartida"))
                            {
                                strOperadora = informacionTransaccion["NombreContrapartida"].ToString();
                                switch (strOperadora)
                                {
                                    case "1":
                                        strOperadora = "A";
                                        break;
                                    case "2":
                                        strOperadora = "C";
                                        break;
                                    case "3":
                                        strOperadora = "M";
                                        break;
                                    default:
                                        break;
                                }
                            }

                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia"))
                                strNombre1 = informacionTransaccion["Referencia"].ToString().Split('|')[0];

                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia"))
                                strNombre2 = informacionTransaccion["Referencia"].ToString().Split('|')[1];

                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia"))
                                strApellido1 = informacionTransaccion["Referencia"].ToString().Split('|')[2];

                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia"))
                                strApellido2 = informacionTransaccion["Referencia"].ToString().Split('|')[3];

                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia"))
                                strFechaNacimiento = informacionTransaccion["Referencia"].ToString().Split('|')[4];

                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia"))
                                strProvincia = informacionTransaccion["Referencia"].ToString().Split('|')[5];

                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia"))
                                strCanton = informacionTransaccion["Referencia"].ToString().Split('|')[6];

                            ReferenciaOrdenante = strNombre1 + " " + strNombre2 + " " + strApellido1 + " " + strApellido2;
                            ReferenciaComprobante = Convert.ToDateTime(strFechaNacimiento).ToString("ddMMyyyy") + strOperadora + strProvincia + strCanton;

                            break;
                        case "REGISTRO_PACIFICO_BELECD":
                            //obtener el xml de plantilla para su remplazo
                            //TipoTransaccion = 0001 significa consulta

                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Telefono_Cliente"))
                                Codigo = informacionTransaccion["Telefono_Cliente"].ToString();
                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("TipoId_Cliente"))
                                TipoCodigo = informacionTransaccion["TipoId_Cliente"].ToString();
                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("NumeroId_Cliente"))
                                Identificacion = informacionTransaccion["NumeroId_Cliente"].ToString();

                            ReferenciaSecundaria = TipoCodigo + Identificacion;

                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("NombreContrapartida"))
                                ReferenciaOrdenante = informacionTransaccion["NombreContrapartida"].ToString();

                            break;
                        case "REGISTRO_PACIFICO_BELECR":
                            //obtener el xml de plantilla para su remplazo
                            //TipoTransaccion = 0001 significa consulta

                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Telefono_Cliente"))
                                Codigo = informacionTransaccion["Telefono_Cliente"].ToString();
                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("TipoId_Cliente"))
                                TipoCodigo = informacionTransaccion["TipoId_Cliente"].ToString();
                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("NumeroId_Cliente"))
                                Identificacion = informacionTransaccion["NumeroId_Cliente"].ToString();

                            ReferenciaSecundaria = TipoCodigo + Identificacion;

                            break;


                        case "REGISTRO_PACIFICO_AMAGUA":
                        case "REGISTRO_PACIFICO_AGUAPEN":
                        case "REGISTRO_PACIFICO_EMAPAP":
                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Contrapartida"))
                                Codigo = informacionTransaccion["Contrapartida"].ToString();
                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia_Adicional"))
                                ReferenciaComprobante = informacionTransaccion["Referencia_Adicional"].ToString();
                            break;


                        case "REGISTRO_PACIFICO_CNELGYELR":
                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia") && dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia_Adicional"))
                                Codigo = informacionTransaccion["Referencia"].ToString().Substring(16, 18) + "  " + informacionTransaccion["Referencia_Adicional"].ToString();
                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Contrapartida"))
                                ReferenciaComprobante = informacionTransaccion["Contrapartida"].ToString();
                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia"))
                                strDescRubro2 = informacionTransaccion["Referencia"].ToString().Substring(0, 16);
                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia"))
                                strValorRubro3 = informacionTransaccion["Referencia"].ToString().Substring(34, 8);
                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia"))
                                strValorRubro4 = informacionTransaccion["Referencia"].ToString().Substring(42, 7);
                            break;
                        case "REGISTRO_PACIFICO_CLARO":

                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("NombreContrapartida"))
                            {
                                Codigo = informacionTransaccion["NombreContrapartida"].ToString().Split('|')[1];
                            }
                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("NombreContrapartida"))
                                ReferenciaOrdenante = informacionTransaccion["NombreContrapartida"].ToString().Split('|')[0];
                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("TipoId_Cliente") && dsEntrada.Tables["DatosTransaccion"].Columns.Contains("NumeroId_Cliente"))
                                Identificacion = informacionTransaccion["TipoId_Cliente"].ToString() + informacionTransaccion["NumeroId_Cliente"].ToString();
                            break;
                        case "REGISTRO_PACIFICO_CAE":
                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("NombreContrapartida"))
                            {
                                ReferenciaOrdenante = informacionTransaccion["NombreContrapartida"].ToString();
                            }

                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia"))
                            {
                                ReferenciaComprobante = informacionTransaccion["Referencia"].ToString().Substring(0, 3);
                                ReferenciaSecundaria = informacionTransaccion["Referencia"].ToString().Substring(3, informacionTransaccion["Referencia"].ToString().Length - 3);
                            }
                            break;
                        case "REGISTRO_PACIFICO_CFN":
                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("TipoId_Cliente"))
                                ReferenciaSecundaria = informacionTransaccion["TipoId_Cliente"].ToString();
                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("NumeroId_Cliente"))
                            {
                                ReferenciaSecundaria += informacionTransaccion["NumeroId_Cliente"].ToString();
                                Codigo = ReferenciaSecundaria; //informacionTransaccion["NumeroId_Cliente"].ToString();
                            }
                            //ReferenciaSecundaria = TipoCodigo + Identificacion;
                            break;
                        case "REGISTRO_PACIFICO_ETAPA":
                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia"))
                            {
                                Codigo = informacionTransaccion["Referencia"].ToString().PadRight(100, ' ').Substring(26, 20);
                                ReferenciaSecundaria = informacionTransaccion["Contrapartida"].ToString();
                                ReferenciaComprobante = informacionTransaccion["Referencia"].ToString().PadRight(100, ' ').Substring(0, 15);
                            }
                            break;
                        case "REGISTRO_PACIFICO_IFTH":
                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Codigo"))
                            {
                                Codigo = informacionTransaccion["Codigo"].ToString();
                            }
                            string strReferencia = "";
                            strReferencia = informacionTransaccion["Referencia"].ToString().PadRight(100, ' ');
                            ReferenciaComprobante = "C" + strReferencia.Substring(0, 3) + strReferencia.Substring(3, 10);
                            strDescRubro1 = strReferencia.Substring(14, 35);
                            strDescRubro2 = informacionTransaccion["Nombre"].ToString().Length >= 35 ? informacionTransaccion["Nombre"].ToString().Substring(0, 35) : informacionTransaccion["Nombre"].ToString().PadRight(35, ' ');
                            break;
                        case "REGISTRO_PACIFICO_COORPFATIMA":
                        case "REGISTRO_PACIFICO_EMAPARIO":
                        case "REGISTRO_PACIFICO_MUNIMILAGRO":
                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Codigo"))
                            {
                                Codigo = informacionTransaccion["Codigo"].ToString();
                            }
                            if (informacionTransaccion["Referencia"].ToString() != "")
                                ReferenciaComprobante = informacionTransaccion["Referencia"].ToString().Substring(0, 15);
                            break;
                        case "REGISTRO_PACIFICO_UNACH":
                            if (informacionTransaccion["Referencia"].ToString() != "")
                                ReferenciaComprobante = informacionTransaccion["Referencia"].ToString().Substring(0, 15);
                            break;
                        case "CONSULTA_PACIFICO_MUNIGYE":
                            if (informacionTransaccion["Referencia_Adicional"].ToString() != "")
                            {
                                TipoCodigo = informacionTransaccion["Referencia_Adicional"].ToString().Split('|')[0];

                                if (TipoCodigo == "1")
                                    TipoCodigo = "P";
                                else
                                    TipoCodigo = "S";

                                Auxiliar = informacionTransaccion["Referencia_Adicional"].ToString().Split('|')[1];
                            }
                            break;

                        case "REGISTRO_PACIFICO_MUNIGYE":
                            ReferenciaComprobante = informacionTransaccion["Referencia_Adicional"].ToString().Split('|')[1];
                            ReferenciaComprobante += informacionTransaccion["Referencia"].ToString().Substring(0, 4);
                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Contrapartida"))
                                Codigo = informacionTransaccion["Contrapartida"].ToString();
                            if (Identificacion == "")
                                Identificacion = "C0000000000";

                            break;
                        case "REGISTRO_PACIFICO_UTPL":

                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Contrapartida"))
                                Codigo = informacionTransaccion["Contrapartida"].ToString();
                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia_Adicional"))
                                ReferenciaComprobante = informacionTransaccion["Referencia_Adicional"].ToString();
                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia"))
                            {
                                string strRef = informacionTransaccion["Referencia"].ToString().PadRight(100, ' ');
                                strDescRubro1 = "REF=" + strRef.Substring(0, 15);
                                strDescRubro2 = "REFAUX=" + strRef.Substring(15, 35);
                                strValorRubro1 = "1";
                                strValorRubro2 = "1";
                            }
                            break;
                        case "REGISTRO_PACIFICO_PINALEGRO":

                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Ordenante"))
                            {
                                ReferenciaSecundaria = informacionTransaccion["Ordenante"].ToString();
                                ReferenciaSecundaria = ReferenciaSecundaria.PadLeft(3, ' ');
                                ReferenciaSecundaria += "01";

                            }
                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Contrapartida"))
                            {
                                Codigo = informacionTransaccion["Contrapartida"].ToString();
                                if (Codigo.Length <= 12)
                                    Codigo = "C" + Codigo;
                                else
                                    Codigo = "R" + Codigo;
                            }
                            break;
                        case "REGISTRO_PACIFICO_ANTCO":
                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Numero_Documento"))
                            {
                                ReferenciaComprobante = informacionTransaccion["Numero_Documento"].ToString();
                                ReferenciaComprobante += informacionTransaccion["Referencia_Adicional"].ToString();
                                Codigo = "00000000000000000000";
                            }
                            break;
                        case "REGISTRO_PACIFICO_ANTO":
                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Numero_Documento"))
                            {
                                ReferenciaComprobante = informacionTransaccion["Numero_Documento"].ToString();
                                ////Aumento por cambio ANT upgrade
                                //if (dsEntrada.Tables.Contains("ComboDescripcion"))
                                //{
                                //    string tipoConsulta = string.Empty;
                                //    string tipoServicio = string.Empty;
                                //    if (dsEntrada.Tables["ComboDescripcion"].Columns.Contains("Tipo_Documento"))
                                //    {
                                //        tipoConsulta = dsEntrada.Tables["ComboDescripcion"].Rows[0]["Tipo_Documento"].ToString();
                                //    }
                                //    if (dsEntrada.Tables["ComboDescripcion"].Columns.Contains("Referencia_Adicional"))
                                //    {
                                //        tipoServicio = dsEntrada.Tables["ComboDescripcion"].Rows[0]["Referencia_Adicional"].ToString();
                                //    }
                                //    EventLog.WriteEntry("EasySwitch", "TransformarTramaEnvio - tipoConsulta: " + tipoConsulta, EventLogEntryType.Warning);
                                //    switch (tipoConsulta.ToUpper())
                                //    {
                                //        case "PLACA":
                                //            switch (tipoServicio.ToUpper())
                                //            {
                                //                case "CITACIONES":
                                //                    ReferenciaComprobante += "CPL";
                                //                    break;
                                //                default:
                                ReferenciaComprobante += informacionTransaccion["Referencia_Adicional"].ToString();
                                //                    break;
                                //            }
                                //            break;
                                //        case "SOLICITUD":
                                //            ReferenciaComprobante += "SOL";
                                //            break;
                                //        default:
                                //            ReferenciaComprobante += informacionTransaccion["Referencia_Adicional"].ToString();
                                //            break;
                                //    }
                                //}
                                //EventLog.WriteEntry("EasySwitch", "TransformarTramaEnvio - ReferenciaComprobante: " + ReferenciaComprobante, EventLogEntryType.Warning);
                                //comento por Cambio ANT upgrade
                                Codigo = informacionTransaccion["Contrapartida"].ToString().PadLeft(10, '0');
                                //Codigo = informacionTransaccion["Contrapartida"].ToString();
                            }
                            break;
                        case "REGISTRO_PACIFICO_TVCABLEOL":

                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia"))
                            {
                                Empresa = informacionTransaccion["Referencia"].ToString().Split('!')[0];
                                ReferenciaComprobante = informacionTransaccion["Referencia"].ToString().Split('!')[1];
                                Codigo = informacionTransaccion["Contrapartida"].ToString();
                                ReferenciaSecundaria = informacionTransaccion["TipoId_Cliente"].ToString() + informacionTransaccion["NumeroId_Cliente"].ToString();
                            }
                            break;

                        case "REGISTRO_PACIFICO_ESPOCH":
                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("TipoId_Cliente") && dsEntrada.Tables["DatosTransaccion"].Columns.Contains("NumeroId_Cliente"))
                            {
                                //strIdentificacion = informacionTransaccion["NumeroId_Cliente"].ToString();
                                if (informacionTransaccion["Contrapartida"].ToString() == string.Empty)
                                    Identificacion = "C0000000000";
                                else
                                    if (informacionTransaccion["Contrapartida"].ToString().Length == 10)
                                    Identificacion = "C" + informacionTransaccion["Contrapartida"].ToString();
                                else
                                        if (informacionTransaccion["Contrapartida"].ToString().Length == 13)
                                    Identificacion = "R" + informacionTransaccion["Contrapartida"].ToString();
                                else
                                    Identificacion = informacionTransaccion["TipoId_Cliente"].ToString() + informacionTransaccion["NumeroId_Cliente"].ToString();
                            }
                            break;
                        //Asignar nuevos valores a MRLRCM agregado por luis.lopez(11/08/2014)
                        case "REGISTRO_PACIFICO_MRLRCM":
                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia")) // Referencia-> Consulta Response
                            {
                                Int32 Longitud = informacionTransaccion["Referencia"].ToString().Trim().Length;
                                if (Longitud > 13)
                                {
                                    ReferenciaSecundaria = informacionTransaccion["Referencia"].ToString().Substring(0, 15); //ReferenciaSecundaria
                                }
                            }
                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia")) //Referencia -> Consulta Response
                            {
                                Int32 Longitud = informacionTransaccion["Referencia"].ToString().Trim().Length;
                                if (Longitud > 16)
                                {
                                    strNombresEmpleado = informacionTransaccion["Referencia"].ToString().Substring(15, (Longitud - 15)); //Nombre de Empleado
                                }
                            }
                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("NombreContrapartida")) //Nombre -> Consulta Response 
                            {
                                Int32 Longitud = informacionTransaccion["NombreContrapartida"].ToString().Trim().Length;
                                if (Longitud > 23)
                                {
                                    ReferenciaOrdenante = informacionTransaccion["NombreContrapartida"].ToString().Substring(0, 25); //ReferenciaOrdenante
                                }
                            }
                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("NombreContrapartida")) //Nombre -> Consulta Response 
                            {
                                Int32 Longitud = informacionTransaccion["NombreContrapartida"].ToString().Trim().Length;
                                if (Longitud > 30)
                                {
                                    strConcepto = informacionTransaccion["NombreContrapartida"].ToString().Substring(25, (Longitud - 25)); //Concepto
                                }
                            }
                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Genera_XML"))
                            {
                                if (informacionTransaccion["Genera_XML"].ToString().Length > 0)
                                {
                                    valorSubTotal = informacionTransaccion["Genera_XML"].ToString(); //ValorCapital (Subtotal) -> Consulta Response
                                }
                            }
                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia_Swift"))
                            {
                                if (informacionTransaccion["Referencia_Swift"].ToString().Length > 0)
                                {
                                    valorInteres = informacionTransaccion["Referencia_Swift"].ToString(); //ValorInteres -> Consulta Response
                                }
                            }
                            break;

                        case "REGISTRO_PACIFICO_STACATALINA":
                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("TipoId_Cliente"))
                                TipoCodigo = informacionTransaccion["TipoId_Cliente"].ToString();
                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("NumeroId_Cliente"))
                                Identificacion = informacionTransaccion["NumeroId_Cliente"].ToString();
                            ReferenciaSecundaria = TipoCodigo + Identificacion;
                            break;
                        case "CONSULTA_PACIFICO_MUNIRIO":
                            Auxiliar = (string)informacionTransaccion["Referencia"];
                            break;
                        case "CONSULTA_PACIFICO_ANTOCITAC":
                        case "CONSULTA_PACIFICO_ANTOCONV":
                        case "CONSULTA_PACIFICO_ANTOSOLIC":
                            Auxiliar = (string)informacionTransaccion["Numero_Documento"];
                            break;
                        case "REGISTRO_PACIFICO_ANTOCITAC":
                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Numero_Documento"))
                            {
                                ReferenciaComprobante = string.Format("{0}CIT", (string)informacionTransaccion["Numero_Documento"]);
                            }
                            break;
                        case "REGISTRO_PACIFICO_ANTOCONV":
                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Numero_Documento"))
                            {
                                ReferenciaComprobante = string.Format("{0}CDP", (string)informacionTransaccion["Numero_Documento"]);
                            }
                            break;
                        case "REGISTRO_PACIFICO_ANTOSOLIC":
                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Numero_Documento"))
                            {
                                ReferenciaComprobante = string.Format("{0}SOL", (string)informacionTransaccion["Numero_Documento"]);
                            }
                            break;
                    }
                    #endregion
                }

                foreach (DataRow dr in dsEntrada.Tables["DatosUsuario"].Rows)
                {
                    UsuarioCajero = dr["NombreCorto"].ToString();
                    OficinaCPT = dr["CodigoAlterno"].ToString();//dr["CodigoAlterno"].ToString() + dr["Oficina_Banco"].ToString();
                    CodigoOficina = dr["Oficina_Banco"].ToString();
                }
                Object[] Parametros;
                UserWS = "bPacifico";
                //PasswordWS = "bp17052010";//PRODUCCION
                //obtener password de base de datos                 
                //PasswordWS = "bp14042010";//DESARROLLO
                PasswordWS = adm.ObtenerPassword();
                horaTransaccion = DateTime.Now.ToString("HHmmss");
                fechaTransaccion = DateTime.Now.ToString("yyyyMMdd");

                //Revisar
                if (dsEntrada.Tables.Contains("Journal"))
                    if (dsEntrada.Tables["Journal"].Columns.Contains("FechaValor"))
                        fechaContable = dsEntrada.Tables["Journal"].Rows[0]["FechaValor"].ToString();

                //Temporal  hasta que cambien la gente de Pacifico el error de comision
                //Lenin Quezada: 2017-01-24
                traceInformation = "Antes de simplificar numeroTransaccion:" + numeroTransaccion;
                string AuxNumTrx = string.Empty;
                if (numeroTransaccion.Length >= 7)
                {
                    traceInformation = "El valor de numeroTransaccion.Length:" + numeroTransaccion.Length.ToString();
                    AuxNumTrx = numeroTransaccion.Substring(numeroTransaccion.Length - 7, 7);
                    traceInformation = "Despues de asignar AuxNumTrx:" + AuxNumTrx;
                    AuxNumTrx = Convert.ToString(Convert.ToInt32(AuxNumTrx.Substring(0, 1).ToString()) + 1) + AuxNumTrx.Substring(1, (AuxNumTrx.Length - 1));
                }
                else
                {
                    AuxNumTrx = numeroTransaccion;
                }
                EventLog.WriteEntry("EasySwitch", string.Format("Simplificacion de codigo numeroTransaccion:{0}  AuxNumTrx:{1}", numeroTransaccion, AuxNumTrx));
                traceInformation = "Depues de simplificar numeroTransaccion:" + AuxNumTrx;
                //Esto es lo que hay que cambiar cuando se pase a produccion el cambio del banco de la comision.
                ////////NumeroTransaccionEnviar += Convert.ToInt64(numeroTransaccion);
                ////////NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);

                switch (transaccion)
                {
                    #region BARCELONA
                    case "REGISTRO_PACIFICO_BSC":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";

                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;

                        Parametros = new object[] { numeroTransaccion,
                                        "BARCELONA",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,Identificacion,ReferenciaOrdenante,
                                        CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,ValorComision,NumeroTransaccionEnviar, RucCedula,NombreFactura};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_BSC":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "SP";
                        Parametros = new object[] { numeroTransaccion,
                                        "BARCELONA",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region MUNICIPIO BABAHOYO TRANSVIAL EP                        
                    case "CONSULTA_PACIFICO_BABAHOYOEP":
                        if (CodigoAdicional == "CIT")
                            Identificacion = "";
                        EventLog.WriteEntry("EasySwitch", "CONSULTA_PACIFICO_BABAHOYOEP Codigo= " + Codigo);
                        numeroTransaccion = DateTime.Now.ToString("HHmmss");
                        Parametros = new object[] { numeroTransaccion,
                                        fechaTransaccion,
                                        fechaContable,horaTransaccion,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,Identificacion,CodigoAdicional };
                        strResultado = String.Format(plantillaXml, Parametros);
                        EventLog.WriteEntry("EasySwitch", "CONSULTA_PACIFICO_BABAHOYOEP strResultado=" + strResultado);
                        break;
                    case "REGISTRO_PACIFICO_BABAHOYOEP":
                        EventLog.WriteEntry("EasySwitch", "REGISTRO_PACIFICO_BABAHOYOEP Codigo= " + Codigo + " " + CodigoAdicional);
                        if (CodigoAdicional == "CIT")
                            Identificacion = "";

                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                     //   NumeroCuenta = "13459015"; //Por pedido del Bco para pruebas
                        Parametros = new object[] { numeroTransaccion,fechaTransaccion,fechaContable,
                            horaTransaccion,UserWS,PasswordWS,UsuarioCajero,OficinaCPT,Codigo,
                            ReferenciaOrdenante,Identificacion,ReferenciaComprobante,
                            Valor,NumeroCuenta,ValorComision
                            ,NumeroTransaccionEnviar,RucCedula,NombreFactura};
                        strResultado = String.Format(plantillaXml, Parametros);
                        EventLog.WriteEntry("EasySwitch", "REGISTRO_PACIFICO_BABAHOYOEP strResultado=" + strResultado);
                        break;

                    case "REVERSO_PACIFICO_BABAHOYOEP":
                        EventLog.WriteEntry("EasySwitch", "REVERSO_PACIFICO_BABAHOYOEP Codigo= " + Codigo);
                        Parametros = new object[] { numeroTransaccion,
                                      fechaTransaccion,fechaContable,horaTransaccion,
                                        UserWS,PasswordWS,UsuarioCajero,OficinaCPT,
                                        NumeroTransaccionReversar,Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        EventLog.WriteEntry("EasySwitch", "REVERSO_PACIFICO_BABAHOYOEP strResultado=" + strResultado);
                        break;
                    #endregion

                    #region DMT  MANTA                       
                    case "CONSULTA_PACIFICO_DMTMANTA":
                        EventLog.WriteEntry("EasySwitch", "CONSULTA_PACIFICO_DMTMANTA Codigo= " + Codigo);
                        if (CodigoAdicional == "CIT")
                            Identificacion = "";
                        numeroTransaccion = DateTime.Now.ToString("HHmmss");
                        Parametros = new object[] { numeroTransaccion, fechaTransaccion, fechaContable, horaTransaccion, UserWS,
                                        PasswordWS, UsuarioCajero, OficinaCPT, Codigo, Identificacion, CodigoAdicional };
                        strResultado = String.Format(plantillaXml, Parametros);
                        EventLog.WriteEntry("EasySwitch", "CONSULTA_PACIFICO_DMTMANTA strResultado=" + strResultado);
                        break;
                    case "REGISTRO_PACIFICO_DMTMANTA":
                        EventLog.WriteEntry("EasySwitch", "REGISTRO_PACIFICO_DMTMANTA Codigo= " + Codigo);
                        if (CodigoAdicional == "CIT")
                            Identificacion = "";
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;

                        Parametros = new object[] { numeroTransaccion,fechaTransaccion,fechaContable,
                            horaTransaccion,UserWS,PasswordWS,UsuarioCajero,OficinaCPT,Codigo,
                            ReferenciaOrdenante,Identificacion,ReferenciaComprobante,
                            Valor,NumeroCuenta,ValorComision
                            ,NumeroTransaccionEnviar,RucCedula,NombreFactura };

                        strResultado = String.Format(plantillaXml, Parametros);
                        EventLog.WriteEntry("EasySwitch", "REGISTRO_PACIFICO_DMTMANTA strResultado=" + strResultado);
                        break;

                    case "REVERSO_PACIFICO_DMTMANTA":
                        EventLog.WriteEntry("EasySwitch", "REGISTRO_PACIFICO_DMTMANTA Codigo= " + Codigo);
                        Parametros = new object[] { numeroTransaccion,
                                      fechaTransaccion,fechaContable,horaTransaccion,
                                        UserWS,PasswordWS,UsuarioCajero,OficinaCPT,
                                        NumeroTransaccionReversar,Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        EventLog.WriteEntry("EasySwitch", "REGISTRO_PACIFICO_DMTMANTA strResultado2=" + strResultado);
                        break;
                    #endregion               

                    #region CONTRALORIA
                    case "CONSULTA_PACIFICO_CONTRALORIA":


                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                                        fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,Identificacion };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_CONTRALORIA":
                        //EventLog.WriteEntry("EasySoft", " CONSULTA_PACIFICO_CONTRALORIA strOrdenBanco=" + strOrdenBanco);
                        //EventLog.WriteEntry("EasySoft", " CONSULTA_PACIFICO_CONTRALORIA strSecuencial=" + strSecuencial);

                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        Parametros = new object[] { numeroTransaccion,
                                        fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,strOrdenBanco,strSecuencial,
                                        CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,ValorComision,NumeroTransaccionEnviar, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);

                        break;
                    case "REVERSO_PACIFICO_CONTRALORIA":
                        Parametros = new object[] { numeroTransaccion,
                                        fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion Contraloria
                    #region CFN (CORPORACIÓN FINANCIERA NACIONAL)

                    case "CONSULTA_PACIFICO_CFN":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                                        "CFN",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_CFN":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";

                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        Parametros = new object[] { numeroTransaccion,
                                        "CFN",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,ReferenciaSecundaria,
                                        ReferenciaOrdenante,ReferenciaComprobante,
                                        CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,ValorComision,NumeroTransaccionEnviar, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_CFN":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";
                        Parametros = new object[] { numeroTransaccion,
                                        "CFN",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region COORP FATIMA
                    case "CONSULTA_PACIFICO_COORPFATIMA":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";

                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                                        "CORP.FATIMA",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_COORPFATIMA":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";

                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;

                        Parametros = new object[] { numeroTransaccion,
                                        "CORP.FATIMA",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo, Identificacion,
                                        ReferenciaOrdenante,ReferenciaComprobante,
                                        CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,ValorComision, NumeroTransaccionEnviar, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_COORPFATIMA":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";
                        Parametros = new object[] { numeroTransaccion,
                                        "CORP.FATIMA",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region EMAPA RIOBAMB
                    case "CONSULTA_PACIFICO_EMAPARIO":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "AU";

                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                                        "EMAPA RIOBAM",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo.PadLeft(10,'0'),TipoCodigo };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_EMAPARIO":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "AU";


                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;


                        Parametros = new object[] { numeroTransaccion,
                                        "EMAPA RIOBAM",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,
                                        Identificacion,
                                        ReferenciaOrdenante,ReferenciaComprobante,
                                        CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,ValorComision,NumeroTransaccionEnviar, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_EMAPARIO":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "AU";
                        Parametros = new object[] { numeroTransaccion,
                                        "EMAPA RIOBAM",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region ETAPA
                    case "CONSULTA_PACIFICO_ETAPA":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                                        "ETAPA",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_ETAPA":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";

                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        Parametros = new object[] { numeroTransaccion,
                                        "ETAPA",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,ReferenciaSecundaria,Codigo,
                                        ReferenciaOrdenante,ReferenciaComprobante,
                                        CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,ValorComision,NumeroTransaccionEnviar, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_ETAPA":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";
                        Parametros = new object[] { numeroTransaccion,
                                        "ETAPA",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region IFTH
                    case "CONSULTA_PACIFICO_IFTH":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Codigo = "C" + Codigo;
                        Parametros = new object[] { numeroTransaccion,
                                        "IFTH",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo,"C" };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_IFTH":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";

                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        ReferenciaSecundaria = Identificacion;
                        Parametros = new object[] { numeroTransaccion,
                                        "IFTH",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo, ReferenciaSecundaria,
                                        ReferenciaOrdenante,ReferenciaComprobante,
                                        CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,strOrdenBanco,strSecuencial,ValorComision,NumeroTransaccionEnviar,"001",strDescRubro1,"1","001",strDescRubro2,"1", RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_IFTH":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";
                        Parametros = new object[] { numeroTransaccion,
                                        "IFTH",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region IECE (INSTITUTO ECUATORIANO DE CREDITO EDUCATIVO Y BECAS)
                    case "REGISTRO_PACIFICO_IECE":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";

                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        ReferenciaSecundaria = Identificacion;
                        Parametros = new object[] { numeroTransaccion,
                                        "IECE",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo, ReferenciaSecundaria,
                                        ReferenciaOrdenante,ReferenciaComprobante,
                                        CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,strOrdenBanco,strSecuencial,ValorComision,NumeroTransaccionEnviar,"001",strDescRubro1,"1","001",strDescRubro2,"1", RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region IECEOL (INSTITUTO ECUATORIANO DE CREDITO EDUCATIVO Y BECAS - ONLINE)
                    case "CONSULTA_PACIFICO_IECEOL":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "CA";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Codigo = "C" + Codigo;
                        Parametros = new object[] {
                            numeroTransaccion,
                            "BPE ESTUDIOS",
                            producto,
                            servicio,
                            "0001",
                            fechaTransaccion,
                            fechaContable,
                            horaTransaccion,
                            canalProceso,
                            UserWS,
                            PasswordWS,
                            UsuarioCajero,
                            OficinaCPT,
                            TipoCodigo,
                            Codigo
                        };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_IECEOL":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "CA";
                        ReferenciaSecundaria = Identificacion;
                        Parametros = new object[]
                        {
                            numeroTransaccion,
                            "BPE ESTUDIOS",
                            producto,
                            servicio,
                            "0003",
                            fechaTransaccion,
                            fechaContable,
                            horaTransaccion,
                            canalProceso,
                            UserWS,
                            PasswordWS,
                            UsuarioCajero,
                            OficinaCPT,
                            Codigo,
                            ReferenciaOrdenante,
                            ReferenciaSecundaria,
                            CodigoMoneda,
                            Valor,
                            FormaPago,
                            NumeroCuenta, RucCedula,NombreFactura
                        };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_IECEOL":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "CA";
                        Parametros = new object[]
                        {
                            numeroTransaccion,
                            "BPE ESTUDIOS",
                            producto,
                            servicio,
                            "0005",
                            fechaTransaccion,
                            fechaContable,
                            horaTransaccion,
                            canalProceso,
                            UserWS,
                            PasswordWS,
                            UsuarioCajero,
                            OficinaCPT,
                            NumeroTransaccionReversar,
                            Motivo
                        };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region MUNICIPIO DE MILAGRO
                    case "CONSULTA_PACIFICO_MUNIMILAGRO":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";

                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                                        "MUNICIPIOMIL",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_MUNIMILAGRO":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";

                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        Parametros = new object[] { numeroTransaccion,
                                        "MUNICIPIOMIL",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo, Identificacion,
                                        ReferenciaOrdenante,ReferenciaComprobante,
                                        CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,ValorComision,NumeroTransaccionEnviar, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_MUNIMILAGRO":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";
                        Parametros = new object[] { numeroTransaccion,
                                        "MUNICIPIOMIL",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region JUDICIAL IBARRA
                    case "CONSULTA_PACIFICO_JUDIBARRA":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";

                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                                        "JUD IBARRA",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_JUDIBARRA":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";
                        Codigo = ReferenciaSecundaria;
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        Parametros = new object[] { numeroTransaccion,
                                        "JUD IBARRA",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,strOrdenBanco,strSecuencial,
                                        CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,ValorComision,NumeroTransaccionEnviar, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_JUDIBARRA":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";
                        Parametros = new object[] { numeroTransaccion,
                                        "JUD IBARRA",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region CNT
                    case "CONSULTA_PACIFICO_CNT":
                        //obtener el xml de plantilla para su remplazo
                        //TipoTransaccion = 0001 significa consulta
                        Auxiliar = "ABF";
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "AP";
                        Codigo = Codigo.Substring(0, 2) + "   " + Codigo.Substring(2, 7).PadLeft(10, '0');
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                                        "EMETEL",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo,
                                        Auxiliar };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_CNT":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "AP";
                        //Codigo = Codigo.PadLeft(10, '0');
                        Codigo = Codigo.Substring(0, 2) + "   " + Codigo.Substring(2, 7).PadLeft(10, '0');
                        string strReferenciaComprobante = ReferenciaComprobante;
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        Parametros = new object[] { numeroTransaccion,
                                        "EMETEL",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,Identificacion,strReferenciaComprobante,
                                        ReferenciaOrdenante,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,strOrdenBanco,strSecuencial,ValorComision,NumeroTransaccionEnviar, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_CNT":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "AP";
                        Parametros = new object[] { numeroTransaccion,
                                        "EMETEL",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion

                    //consulta de saldos
                    case "CONSULTA_PACIFICO_SALDOS":
                    //Mastercard 2020-05-11
                    case "CONSULTA_PACIFICO_MASTER_1":
                    #region RETIRO DE EFECTIVO PACIFICO
                    case "CONSULTA_PACIFICO_RET":
                        EventLog.WriteEntry("EasySwitch", "Transformar trama Enviar -- CONSULTA_PACIFICO_RET dsEntrada:" + dsEntrada.GetXml());
                        //obtener el xml de plantilla para su remplazo
                        //TipoTransaccion = 0001 significa consulta
                        producto = "3";
                        servicio = "RT";


                        numeroTransaccion = DateTime.Now.ToString("yyyyMMddHHmmss");//Identificador único
                        string localidad_provincia = adm.ConsultaLocalidadAgencia(localidad);
                        idMensaje = canalProceso + numeroTransaccion;

                        //Fecha de caducidad tarjeta
                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("NombreContraPartida"))
                            fecha_caducidad = (string)dsEntrada.Tables["DatosTransaccion"].Rows[0]["NombreContraPartida"];
                        //fechaTransaccion = Convert.ToDateTime(informacionTransaccion["FechaProceso"].ToString()).ToString("yyyyMMdd");
                        //IP-HOST Y MAC DEL CLIENTE
                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("ip_maquina"))
                            ip_maquina = (string)dsEntrada.Tables["DatosTransaccion"].Rows[0]["ip_maquina"];
                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("host_maquina"))
                            host_maquina = (string)dsEntrada.Tables["DatosTransaccion"].Rows[0]["host_maquina"];
                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("mac_maquina"))
                            mac_maquina = (string)dsEntrada.Tables["DatosTransaccion"].Rows[0]["mac_maquina"];


                        //CodigoAdicional=Medio OTP;Codigo=#Tarjeta;CuentaRetiro=TipoCuenta

                        Parametros = new object[] {idAgencia,canalProceso,DateTime.Now.ToString(),host_maquina,idMensaje,UserWS,ip_maquina,localidad_provincia,
                                                    mac_maquina,PasswordWS,fecha_caducidad,DateTime.Now.ToString(),Identificacion,UsuarioCajero,
                                                    CodigoAdicional.ToUpper(),Codigo,OficinaCPT,TipoCuenta,strTipoIDCliente };


                        strResultado = String.Format(plantillaXml, Parametros);

                        break;
                    //MASTER  agregar los datos //cambie 1 xq esto es el nuevo
                    case "REGISTRO_PACIFICO_MASTER_1":
                        EventLog.WriteEntry("EasySwitch", "Transformar trama Enviar -- REGISTRO_PACIFICO_master dsEntrada:" + dsEntrada.GetXml());
                        numeroTransaccion = DateTime.Now.ToString("yyyyMMddHHmmss");//Identificador único
                        localidad_provincia = adm.ConsultaLocalidadAgencia(localidad);
                        idMensaje = canalProceso + numeroTransaccion;
                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("NombreContraPartida"))
                            Nombre = dsEntrada.Tables["DatosTransaccion"].Rows[0]["NombreContraPartida"].ToString();
                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("ContraPartida"))
                            NumeroCuenta = dsEntrada.Tables["DatosTransaccion"].Rows[0]["ContraPartida"].ToString();
                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia"))
                            ReferenciaSecundaria = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Referencia"].ToString();
                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia_Adicional"))
                            TipoCuenta = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Referencia_Adicional"].ToString();


                        Parametros = new object[] {idAgencia,canalProceso,DateTime.Now.ToString(),host_maquina,idMensaje,UserWS,ip_maquina,localidad_provincia,
                                                    mac_maquina,PasswordWS,CodigoMoneda,DateTime.Now.ToString(),Identificacion,UsuarioCajero,
                                                    Nombre,ReferenciaSecundaria,"",NumeroCuenta,OficinaCPT,TipoCuenta,strTipoIDCliente,ValorTar};

                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_SALDOS":
                    case "REGISTRO_PACIFICO_RET":
                        EventLog.WriteEntry("EasySwitch", string.Format("Transformar trama Enviar -- REGISTRO_PACIFICO_transaccion={0} - dsEntrada:{1}", transaccion, dsEntrada.GetXml()));
                        //obtener el xml de plantilla para su remplazo
                        producto = "3";
                        servicio = "RT";
                        numeroTransaccion = DateTime.Now.ToString("yyyyMMddHHmmss");//Identificador único
                        localidad_provincia = adm.ConsultaLocalidadAgencia(localidad);
                        idMensaje = canalProceso + numeroTransaccion;
                        NumeroCuentaRed = adm.ConsultaCuentaRed("Retiro de Efectivo");
                        string strMedioOTP = string.Empty;
                        string valMedioOTP = string.Empty;
                        string CuentaCliente = string.Empty;

                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia_Adicional"))
                            valMedioOTP = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Referencia_Adicional"].ToString();
                        if (dsEntrada.Tables["ComboDescripcion"].Columns.Contains("Referencia_Adicional"))
                            strMedioOTP = dsEntrada.Tables["ComboDescripcion"].Rows[0]["Referencia_Adicional"].ToString();
                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("NombreContraPartida"))
                            Nombre = dsEntrada.Tables["DatosTransaccion"].Rows[0]["NombreContraPartida"].ToString();
                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("ContraPartida"))
                            NumeroCuenta = dsEntrada.Tables["DatosTransaccion"].Rows[0]["ContraPartida"].ToString();

                        //Medio OTP
                        if (strMedioOTP.Contains("SMS"))
                            strMedioOTP = "SMS";
                        else if (strMedioOTP.Contains("MAIL"))
                            strMedioOTP = "MAIL";
                        else if (strMedioOTP.Contains("PACIFIC"))
                            strMedioOTP = "PACIFICID";

                        Parametros = new object[] {idAgencia,canalProceso,DateTime.Now.ToString(),host_maquina,idMensaje,UserWS,ip_maquina,localidad_provincia,
                                                    mac_maquina,PasswordWS,CodigoMoneda,valMedioOTP,DateTime.Now.ToString(),Identificacion,UsuarioCajero,
                                                    strMedioOTP,Nombre,NumeroCuentaRed,"",NumeroCuenta,OficinaCPT,TipoCuenta,strTipoIDCliente,Valor};

                        strResultado = String.Format(plantillaXml, Parametros);
                        break;

                    case "REVERSO_PACIFICO_RET":
                        //obtener el xml de plantilla para su remplazo
                        producto = "3";
                        servicio = "RT";

                        idMensaje = canalProceso + numeroTransaccion;
                        localidad_provincia = adm.ConsultaLocalidadAgencia(localidad);

                        Parametros = new object[] {idAgencia,canalProceso,fechaTransaccion,host_maquina,idMensaje,UserWS,ip_maquina,localidad,
                                                    mac_maquina,PasswordWS,fechaContable,UsuarioCajero,Motivo,
                                                    NumeroTransaccionReversar,OficinaCPT};
                        //End Roger NewWS
                        break;
                    #endregion
                    #region CNTOL
                    case "CONSULTA_PACIFICO_CNTOL":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = ReferenciaSecundaria;
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] {numeroTransaccion, "CNT", producto, servicio,
                            "0001", fechaTransaccion, fechaContable, horaTransaccion, canalProceso,
                            UserWS, PasswordWS, UsuarioCajero, OficinaCPT, Codigo, TipoCodigo
                        };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_CNTOL":

                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";

                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;

                        servicio = ReferenciaSecundaria;

                        // agregado por luis.lopez (26/06/2014) <<al final: RucCedula, NombreFactura>>
                        Parametros = new object[] {
                            numeroTransaccion,"CNT",producto,servicio,"0003",fechaTransaccion,fechaContable,
                            horaTransaccion,canalProceso,UserWS,PasswordWS,UsuarioCajero,OficinaCPT,Codigo,
                            Identificacion,ReferenciaComprobante,ReferenciaOrdenante,CodigoMoneda,
                            Valor,FormaPago,NumeroCuenta,strOrdenBanco,strSecuencial,ValorComision,NumeroTransaccionEnviar, RucCedula, NombreFactura  //<--
                        };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_CNTOL":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";

                        if (string.IsNullOrEmpty(servicio))
                            if (string.IsNullOrEmpty(servicio1))
                                servicio = "AP";
                            else
                                servicio = servicio1;
                        else
                            if (servicio == "BC")
                            servicio = "BA";

                        Parametros = new object[] {
                            numeroTransaccion,
                            "CNT",
                            producto,
                            servicio,
                            "0005",
                            fechaTransaccion,
                            fechaContable,
                            horaTransaccion,
                            canalProceso,
                            UserWS,
                            PasswordWS,
                            UsuarioCajero,
                            OficinaCPT,
                            NumeroTransaccionReversar,
                            Motivo,
                            NumeroTransaccionComision
                        };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region EEQOnline
                    case "CONSULTA_PACIFICO_EEQOL":

                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "LV";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                                        "E.E.Q",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo,
                                        };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_EEQOL":
                        string descripcionRubroTPEND = "TPEND=Total Pendiente'";

                        string descripcionRubroFEMVE = "FEMVE=" + fechaemision + fechavencimiento;
                        double ValorRubroTPEND = valor, ValorRubroFEMVE = 0;
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        producto = "4";
                        servicio = "LV";
                        string cantRubros = "2";
                        Parametros = new object[] {numeroTransaccion,
                                                    "E.E.Q",
                                                    producto,
                                                    servicio,
                                                    "0003",
                                                    fechaTransaccion,
                                                    fechaContable,
                                                    horaTransaccion,
                                                    canalProceso,
                                                    UserWS,
                                                    PasswordWS,
                                                    UsuarioCajero,
                                                    OficinaCPT,
                                                    Codigo,
                                                    ReferenciaSecundaria,
                                                    ReferenciaOrdenante,
                                                    CodigoMoneda,
                                                    Valor,
                                                    FormaPago,
                                                    NumeroCuenta,
                                                    ValorComision,
                                                    NumeroTransaccionEnviar,
                                                    ReferenciaComprobante,
                                                    RucCedula,
                                                    NombreFactura,
                                                    cantRubros,
                                                    "001",
                                                    descripcionRubroTPEND,
                                                    ValorRubroTPEND,
                                                    "002",
                                                    descripcionRubroFEMVE,
                                                    ValorRubroFEMVE
                                                  };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_EEQOL":

                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "LV";

                        Parametros = new object[] { numeroTransaccion,
                                        "E.E.Q",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region EMELEC
                    case "CONSULTA_PACIFICO_EMELEC":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                                        "EMELEC SOCIO",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,TipoCodigo,Identificacion,Codigo
                                        };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_EMELEC":
                        producto = "4";
                        servicio = "OC";
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        Parametros = new object[] {numeroTransaccion,
                                                    "EMELEC SOCIO",
                                                    producto,
                                                    servicio,
                                                    "0003",
                                                    fechaTransaccion,
                                                    fechaContable,
                                                    horaTransaccion,
                                                    canalProceso,
                                                    UserWS,
                                                    PasswordWS,
                                                    UsuarioCajero,
                                                    OficinaCPT,
                                                    Codigo,
                                                    ReferenciaOrdenante,
                                                    Identificacion,
                                                    ReferenciaComprobante,
                                                    CodigoMoneda,
                                                    Valor,
                                                    FormaPago,
                                                    NumeroCuenta
                                                     };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;

                    case "REVERSO_PACIFICO_EMELEC":

                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";
                        Parametros = new object[] { numeroTransaccion,
                                        "EMELEC SOCIO",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region TUAYUDACUENTA
                    case "REGISTRO_PACIFICO_TUAYUDAC":
                        producto = "4";
                        servicio = "ZF";
                        ReferenciaSecundaria = TipoCodigo + Identificacion;
                        Parametros = new object[] {numeroTransaccion,
                                                    "PACIFI AYUDA",
                                                    producto,
                                                    servicio,
                                                    "0003",
                                                    fechaTransaccion,
                                                    fechaContable,
                                                    horaTransaccion,
                                                    canalProceso,
                                                    UserWS,
                                                    PasswordWS,
                                                    UsuarioCajero,
                                                    OficinaCPT,
                                                    ReferenciaOrdenante,
                                                    ReferenciaSecundaria,
                                                    CodigoMoneda,
                                                    Valor,
                                                    FormaPago,
                                                    NumeroCuenta
                                                     };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;

                    case "REVERSO_PACIFICO_TUAYUDAC":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "ZF";
                        Parametros = new object[] { numeroTransaccion,
                                        "PACIFI AYUDA",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region SUPERCIAS
                    case "CONSULTA_PACIFICO_SCIAS":
                        //obtener el xml de plantilla para su remplazo
                        //TipoTransaccion = 0001 significa consulta
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "LV";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        //Codigo = Codigo.PadLeft(8, '0');
                        Parametros = new object[] { numeroTransaccion,
                                        "SUPERCIAS",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo,
                                        tipoIdentificacion,
                                        };
                        strResultado = String.Format(plantillaXml, Parametros);

                        break;
                    case "REGISTRO_PACIFICO_SCIAS":
                        //EventLog.WriteEntry("easysoft", "EEQOL dsEntrada=" + dsEntrada.GetXml());
                        string descripcionRubro = ReferenciaSecundaria.Substring(16, 35);

                        decimal ValorRubro = 1;

                        producto = "4";
                        servicio = "OC"; //Consignaciones/Multas
                        numeroTransaccion = DateTime.Now.ToString("HHmmss");
                        //string cantRubros = "1";
                        Parametros = new object[] {
                                                    numeroTransaccion,
                                                    "SUPERCIAS",
                                                    producto,
                                                    servicio,
                                                    "0003",
                                                    fechaTransaccion,
                                                    fechaContable,
                                                    horaTransaccion,
                                                    canalProceso,
                                                    UserWS,
                                                    PasswordWS,
                                                    UsuarioCajero,
                                                    OficinaCPT,
                                                    Codigo,
                                                    ReferenciaComprobante,
                                                    ReferenciaOrdenante,
                                                    CodigoMoneda,
                                                    Valor,
                                                    FormaPago,
                                                    NumeroCuenta,
                                                    ValorComision,
                                                    NumeroTransaccionComision,
                                                    ReferenciaSecundaria,
                                                    RucCedula,
                                                    NombreFactura,
                                                    "001",
                                                    descripcionRubro,
                                                    ValorRubro,
                                                  };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_SCIAS":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "LV";

                        Parametros = new object[] { numeroTransaccion,
                                        "SUPERCIAS",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region EEQ (EMPRESA ELÉCTRICA QUITO)
                    case "CONSULTA_PACIFICO_EEQ":
                        //obtener el xml de plantilla para su remplazo
                        //TipoTransaccion = 0001 significa consulta
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "LU";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Codigo = Codigo.PadLeft(8, '0');
                        Parametros = new object[] { numeroTransaccion,
                                        "E.E.Q",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo,
                                        };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_EEQ":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "LU";
                        fechaTransaccion = DateTime.Now.ToString("yyyyMMdd");
                        fechaContable = DateTime.Now.ToString("yyyyMMdd");
                        Codigo = Codigo.PadLeft(8, '0');
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        ReferenciaComprobante = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Referencia_Adicional"].ToString();
                        Parametros = new object[] { numeroTransaccion,
                                        "E.E.Q",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,ReferenciaSecundaria,
                                        ReferenciaOrdenante,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,ValorComision,strOrdenBanco,strSecuencial,NumeroTransaccionEnviar,ReferenciaComprobante, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_EEQ":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "LU";

                        Parametros = new object[] { numeroTransaccion,
                                        "E.E.Q",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region EMAAP (EMPRESA METROPOLITANA DE AGUA POTABLE Y ALCANTARILLADO QUITO)
                    case "CONSULTA_PACIFICO_EMAAP":
                        //obtener el xml de plantilla para su remplazo
                        //TipoTransaccion = 0001 significa consulta
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "AU";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Codigo = Codigo.PadLeft(11, '0');
                        Parametros = new object[] { numeroTransaccion,
                                        "EMAAP QUITO",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo,
                                        };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_EMAAP":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "AU";
                        Codigo = Codigo.PadLeft(11, '0');
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        Parametros = new object[] { numeroTransaccion,
                                        "EMAAP QUITO",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,ReferenciaComprobante,
                                        ReferenciaOrdenante,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,strOrdenBanco,strSecuencial,ValorComision,NumeroTransaccionEnviar, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_EMAAP":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "AU";

                        Parametros = new object[] { numeroTransaccion,
                                        "EMAAP QUITO",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region EPAEP
                    case "CONSULTA_PACIFICO_EPAEP":
                        //obtener el xml de plantilla para su remplazo
                        //TipoTransaccion = 0001 significa consulta
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "ZG";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        //Codigo = Codigo.PadLeft(11, '0');
                        Parametros = new object[] { numeroTransaccion,
                                        "EPA EP",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo,
                                        };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_EPAEP":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "ZG";
                        //Codigo = Codigo.PadLeft(11, '0');
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;

                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Codigo_Tercero"))
                        {
                            strOrdenBanco = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Codigo_Tercero"].ToString().Split('!')[0];
                            strSecuencial = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Codigo_Tercero"].ToString().Split('!')[1];
                        }

                        Parametros = new object[] { numeroTransaccion,
                                        "EPA EP",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,strOrdenBanco,strSecuencial,CodigoMoneda,Valor,
                                        FormaPago,NumeroCuenta,ValorComision,NumeroTransaccionEnviar,
                                        RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_EPAEP":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "ZG";

                        Parametros = new object[] { numeroTransaccion,
                                        "EPA EP",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region EPMAPS
                    case "CONSULTA_PACIFICO_EPMAPS":
                        //obtener el xml de plantilla para su remplazo
                        //TipoTransaccion = 0001 significa consulta
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "AU";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] {numeroTransaccion, "EPMAPS", producto, servicio,
                            "0001", fechaTransaccion, fechaContable, horaTransaccion, canalProceso,
                            UserWS, PasswordWS, UsuarioCajero, OficinaCPT, TipoCodigo, Codigo
                        };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_EPMAPS":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "AU";
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        Parametros = new object[] {numeroTransaccion, "EPMAPS", producto, servicio,
                            "0003", fechaTransaccion, fechaContable, horaTransaccion, canalProceso,
                            UserWS, PasswordWS, UsuarioCajero, OficinaCPT, Codigo,
                            RucCedula , ReferenciaOrdenante, ReferenciaComprobante,//ReferenciaSecundaria --> RucCedula
                            CodigoMoneda, Valor, ValorComision, FormaPago, NumeroCuenta,
                            NumeroTransaccionEnviar, RucCedula, NombreFactura
                        };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_EPMAPS":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "AU";
                        Parametros = new object[] {numeroTransaccion, "EPMAPS", producto, servicio,
                            "0005", fechaTransaccion, fechaContable, horaTransaccion, canalProceso,
                            UserWS, PasswordWS, UsuarioCajero, OficinaCPT, NumeroTransaccionReversar,
                            Motivo,NumeroTransaccionComision
                        };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region GLOBAL
                    case "CONSULTA_PACIFICO_GLOBAL":
                        //obtener el xml de plantilla para su remplazo
                        //TipoTransaccion = 0001 significa consulta
                        TipoCodigo = "P";
                        producto = "3";
                        servicio = "GV";
                        numeroTransaccion = DateTime.Now.ToString("HHmmss");
                        Parametros = new object[] { numeroTransaccion,
                                        "GLOBALENVIOS",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo,
                                        };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_GLOBAL":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "3";
                        servicio = "GV";
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Codigo_Tercero"))
                        {
                            strOrdenBanco = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Codigo_Tercero"].ToString().Split('!')[0];
                            strSecuencial = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Codigo_Tercero"].ToString().Split('!')[1];
                        }
                        Parametros = new object[] { numeroTransaccion,
                                        "GLOBALENVIOS",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT, strOrdenBanco,strSecuencial,Codigo,
                                        Identificacion,CodigoMoneda, Valor,FormaPago,NumeroCuenta,
                                        strDireccionCliente,strTelefono,strFechaNacimiento,strEstadoCivil,strApellidoConyuge,strOrdenBanco,strSecuencial,ValorComision,NumeroTransaccionEnviar, RucCedula,NombreFactura
                                         };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_GLOBAL":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "3";
                        servicio = "GV";
                        Parametros = new object[] { numeroTransaccion,
                                        "GLOBALENVIOS",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region BONO
                    case "REGISTRO_PACIFICO_BONO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "SP";
                        Codigo = "C" + dsEntrada.Tables["DatosTransaccion"].Rows[0]["Contrapartida"].ToString();//Codigo.PadLeft(10, ' ');
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        ReferenciaComprobante = string.Empty;
                        ReferenciaOrdenante = string.Empty;
                        Valor = "000";
                        string CantidadRubros = "0";
                        Parametros = new object[] { numeroTransaccion,
                                        "PACIFICO EC",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,"S",ReferenciaComprobante,
                                        ReferenciaOrdenante,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,CantidadRubros, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_BONO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "SP";
                        Parametros = new object[] { numeroTransaccion,
                                        "PACIFICO EC",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region REGISTRO CIVIL
                    case "REGISTRO_PACIFICO_RCIVIL":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "ZF";
                        Codigo = OficinaCPT.Substring(0, 4) + numeroTransaccion.PadLeft(6, '0');
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;

                        CantidadRubros = "0";
                        DataSet ds = new DataSet();
                        ds = adm.Obtener_Servicios_Transaccion(dsEntrada.Tables["DatosTransaccion"].Rows[0]["Id_Contrato"].ToString());
                        CantidadRubros = ds.Tables["Servicios_Transaccion"].Rows.Count.ToString();
                        string strTipoPersona = "N";
                        if (dsEntrada.Tables["DatosTransaccion"].Rows[0]["Contrapartida"].ToString().Split('|')[1] == "True")
                        {
                            strTipoPersona = "V";
                        }


                        ReferenciaComprobante = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Contrapartida"].ToString().Split('|')[0] + strTipoPersona;
                        ReferenciaOrdenante = string.Empty;
                        Parametros = new object[] { numeroTransaccion,
                                        "REG CIVIL",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,string.Empty,ReferenciaComprobante,
                                        ReferenciaOrdenante,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,CantidadRubros, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        //buscar los parametros de entrada segun el contrato
                        XmlDocument xml = new XmlDocument();
                        XmlDocument xmlEntrada = new XmlDocument();
                        xmlEntrada.LoadXml(dsEntrada.GetXml());
                        xml.LoadXml(strResultado);

                        XmlNode dtRubro = xml.CreateElement("Rubro");
                        string strNombre = string.Empty;
                        string strCampoHomologado = string.Empty;
                        string strNombreApellido = string.Empty;
                        int cont = 0;
                        foreach (DataRow dr in ds.Tables["Servicios_Transaccion"].Rows)
                        {
                            strNombre = dr["Campo_Asociado"].ToString();
                            if (!dr.IsNull("Campo_Asociado"))
                            {
                                strCampoHomologado = dr["Campo_Asociado_Homologado"].ToString();
                            }

                            if (strCampoHomologado != string.Empty)
                            {
                                XmlNode datos = xml.CreateElement("CodigoRubro"); datos.InnerText = strCampoHomologado; dtRubro.AppendChild(datos);
                                datos = xml.CreateElement("ValorRubro"); datos.InnerText = "000"; dtRubro.AppendChild(datos);
                                //buscar dentro de datos transaccion que coincide el nombre para agregar el Dato
                                string[] lstLista;
                                string strDato = string.Empty;
                                int pos = 0;
                                XmlNodeList xmlDs = xmlEntrada.GetElementsByTagName("XMLEntrada");
                                XmlNodeList xmlRowsTablas = ((XmlElement)xmlDs[0]).GetElementsByTagName("DatosTransaccion");
                                foreach (XmlElement Columnas in xmlRowsTablas)
                                {
                                    lstLista = strNombre.Split('-');
                                    if (lstLista.Length > 1)
                                    {
                                        strNombre = lstLista[0];
                                        pos = Convert.ToInt32(lstLista[1].ToString()) - 1;
                                        strDato = Columnas.GetElementsByTagName(strNombre).Item(0).InnerText.Split('|')[pos];
                                    }
                                    else
                                    {
                                        strDato = Columnas.GetElementsByTagName(strNombre).Item(0).InnerText;
                                    }

                                    if (strDato != string.Empty)
                                    {
                                        string[] lstFecha;
                                        if (strCampoHomologado.StartsWith("FECNAC"))
                                        {
                                            lstFecha = strDato.Split('/');
                                            if (lstFecha.Length > 1)
                                            {
                                                strDato = lstFecha[2].ToString() + lstFecha[1].ToString() + lstFecha[0].ToString();
                                            }
                                        }
                                        datos = xml.CreateElement("DescripcionRubro"); datos.InnerText = strDato; dtRubro.AppendChild(datos);
                                        if (strCampoHomologado.StartsWith("NOMBRE") || strCampoHomologado.StartsWith("APELLIDO"))
                                        {
                                            strNombreApellido += Columnas.GetElementsByTagName(strNombre).Item(0).InnerText + " ";
                                        }
                                        break;
                                    }
                                }
                                cont++;
                            }
                        }
                        xml.DocumentElement.AppendChild(dtRubro);
                        strResultado = xml.InnerXml;
                        string strCampo = "<CantidadRubros>" + CantidadRubros + "</CantidadRubros>";
                        string strCampo2 = "<CantidadRubros>" + cont + "</CantidadRubros>";
                        strResultado = strResultado.Replace(strCampo, strCampo2);
                        strCampo = "<ReferenciaOrdenante></ReferenciaOrdenante>";
                        strCampo2 = "<ReferenciaOrdenante>" + strNombreApellido + "</ReferenciaOrdenante>";
                        strResultado = strResultado.Replace(strCampo, strCampo2);
                        break;

                    case "REVERSO_PACIFICO_RCIVIL":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "ZF";
                        Parametros = new object[] { numeroTransaccion,
                                        "REG CIVIL",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar
                                        };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region EEASA (EMPRESA ELÉCTRICA AMBATO REGIONAL CENTRO NORTE SA)
                    case "CONSULTA_PACIFICO_EEASA":
                        //obtener el xml de plantilla para su remplazo
                        //TipoTransaccion = 0001 significa consulta
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "LU";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        //codigo = Codigo;
                        Parametros = new object[] { numeroTransaccion,
                                        "EEASA",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo
                                        };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_EEASA":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "LU";
                        //codigo = Codigo;
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;

                        ReferenciaComprobante = ReferenciaComprobante.Substring(16, 2);
                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Codigo_Tercero"))
                        {
                            strOrdenBanco = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Codigo_Tercero"].ToString().Split('!')[0];
                            strSecuencial = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Codigo_Tercero"].ToString().Split('!')[1];
                        }
                        Parametros = new object[] { numeroTransaccion,
                                        "EEASA",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,ReferenciaComprobante,
                                        ReferenciaOrdenante,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,strOrdenBanco,strSecuencial,ValorComision,NumeroTransaccionEnviar, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_EEASA":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "LU";

                        Parametros = new object[] { numeroTransaccion,
                                        "EEASA",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region EMAPA AMBATO
                    case "CONSULTA_PACIFICO_EMAPAA":
                        //obtener el xml de plantilla para su remplazo
                        //TipoTransaccion = 0001 significa consulta
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "A1";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Codigo = Codigo.PadLeft(10, '0');
                        Parametros = new object[] { numeroTransaccion,
                                        "EMAPA AMBATO",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo
                                        };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_EMAPAA":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "A1";

                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        if (ReferenciaComprobante.Length < 15)
                            ReferenciaComprobante = ReferenciaComprobante.PadRight(15, ' ');
                        ReferenciaComprobante = ReferenciaComprobante.Substring(0, 15);

                        traceInformation = "Despues de obtener datos de ReferenciaComprobante" + ReferenciaComprobante;

                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Codigo_Tercero"))
                        {
                            traceInformation = "antes de obtener datos de Codigo_Tercero" + dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Codigo_Tercero");
                            strOrdenBanco = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Codigo_Tercero"].ToString().Split('!')[0];
                            strSecuencial = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Codigo_Tercero"].ToString().Split('!')[1];
                        }

                        traceInformation = "Despues de obtener datos de Codigo_Tercero" + dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Codigo_Tercero");

                        Parametros = new object[] { numeroTransaccion,
                                        "EMAPA AMBATO",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,ReferenciaComprobante,
                                        ReferenciaOrdenante,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,strOrdenBanco,strSecuencial,ValorComision,NumeroTransaccionEnviar,Identificacion, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_EMAPAA":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "A1";

                        Parametros = new object[] { numeroTransaccion,
                                        "EMAPA AMBATO",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region BCE DINERO ELECTRONICO
                    case "REGISTRO_PACIFICO_RBCEDINERO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "DC";
                        Codigo = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Contrapartida"].ToString();
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        ReferenciaComprobante = string.Empty;
                        ReferenciaOrdenante = string.Empty;
                        ReferenciaSecundaria = "C" + dsEntrada.Tables["DatosTransaccion"].Rows[0]["NumeroId_Cliente"].ToString();
                        CantidadRubros = "0";
                        Parametros = new object[] { numeroTransaccion,
                                        "BCE DINERO",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,ReferenciaSecundaria,
                                     ReferenciaOrdenante,ReferenciaComprobante,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,CantidadRubros};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_RBCEDINERO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "DC";
                        Parametros = new object[] { numeroTransaccion,
                                        "BCE DINERO",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_DBCEDINERO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "DD";
                        //Codigo = "C" + dsEntrada.Tables["DatosTransaccion"].Rows[0]["NumeroId_Cliente"].ToString();//Codigo.PadLeft(10, ' ');
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;

                        ReferenciaOrdenante = string.Empty;
                        ReferenciaSecundaria = "C" + dsEntrada.Tables["DatosTransaccion"].Rows[0]["NumeroId_Cliente"].ToString();
                        CantidadRubros = "0";
                        Parametros = new object[] { numeroTransaccion,
                                        "BCE DINERO",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,ReferenciaSecundaria,ReferenciaOrdenante,
                                        ReferenciaComprobante,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,CantidadRubros};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_DBCEDINERO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "3";
                        servicio = "DD";
                        Parametros = new object[] { numeroTransaccion,
                                        "BCE DINERO",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region EMAPA IBARRA
                    case "CONSULTA_PACIFICO_EMAPAI":
                        //obtener el xml de plantilla para su remplazo
                        //TipoTransaccion = 0001 significa consulta
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "A1";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Codigo = Codigo.PadLeft(10, '0');
                        Parametros = new object[] { numeroTransaccion,
                                        "EMAPA09",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo
                                        };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_EMAPAI":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "A1";

                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;


                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Codigo_Tercero"))
                        {
                            strOrdenBanco = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Codigo_Tercero"].ToString().Split('!')[0];
                            strSecuencial = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Codigo_Tercero"].ToString().Split('!')[1];
                        }
                        Parametros = new object[] { numeroTransaccion,
                                        "EMAPA09",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,ReferenciaComprobante,
                                        ReferenciaOrdenante,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,strOrdenBanco,strSecuencial,ValorComision,NumeroTransaccionEnviar,Identificacion, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_EMAPAI":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "A1";

                        Parametros = new object[] { numeroTransaccion,
                                        "EMAPA09",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region EMELNORTE

                    case "CONSULTA_PACIFICO_ENORTEOL":
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Codigo = Codigo.PadLeft(8, '0');
                        Parametros = new object[] { numeroTransaccion,
                                        fechaTransaccion,
                                        fechaContable,horaTransaccion,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo
                                        };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;

                    case "REGISTRO_PACIFICO_ENORTEOL":
                        //obtener el xml de plantilla para su remplazo
                        // EventLog.WriteEntry("EasySwitch", "REGISTRO_PACIFICO_ENORTEOL Codigo=" + Codigo);
                        Codigo = Codigo.PadLeft(8, '0');
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        //EventLog.WriteEntry("EasySwitch", "REGISTRO_PACIFICO_ENORTEOL NumeroTransaccionEnviar=" + NumeroTransaccionEnviar);
                        //EventLog.WriteEntry("EasySwitch", "REGISTRO_PACIFICO_ENORTEOL ReferenciaComprobante=" + ReferenciaComprobante);
                        //string strRCOL = ReferenciaComprobante.Substring(9, 10);
                        //ReferenciaSecundaria = ReferenciaComprobante.Substring(0, 8);

                        //if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Codigo_Tercero"))
                        //{
                        //    try
                        //    {
                        //        traceInformation = "Antes de Codigo tercero";
                        //        if (dsEntrada.Tables["DatosTransaccion"].Rows[0]["Codigo_Tercero"].ToString().Contains("!"))
                        //        {
                        //            traceInformation = "despues de Codigo tercero";
                        //            strOrdenBanco = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Codigo_Tercero"].ToString().Split('!')[0];
                        //            traceInformation = "Si encontro la posicion 0";
                        //            strSecuencial = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Codigo_Tercero"].ToString().Split('!')[1];
                        //            traceInformation = "Si encontro la posicion 1";
                        //        }
                        //        else
                        //        {
                        //            strOrdenBanco = "00000000";
                        //            strSecuencial = "00000000";
                        //        }
                        //    }
                        //    catch (Exception)
                        //    {
                        //        EventLog.WriteEntry("EasySwitch", "traceInformation:" + traceInformation);
                        //        strOrdenBanco = "00000000";
                        //        strSecuencial = "00000000";
                        //        EventLog.WriteEntry("EasySwitch", "Seguimos con el proceso");
                        //    }

                        //}

                        Parametros = new object[] { numeroTransaccion,
                                        fechaTransaccion,
                                        fechaContable,horaTransaccion
                                        ,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT
                                        ,Codigo,Identificacion,
                                        ReferenciaOrdenante,CodigoMoneda,Valor,ValorComision,FormaPago,
                                        NumeroCuenta,NumeroTransaccionEnviar, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        //EventLog.WriteEntry("EasySwitch", "REGISTRO_PACIFICO_ENORTEOL strResultado=" + strResultado);

                        break;
                    case "REVERSO_PACIFICO_ENORTEOL":
                        //obtener el xml de plantilla para su remplazo

                        Parametros = new object[] { numeroTransaccion,
                                        fechaTransaccion,
                                        fechaContable,horaTransaccion,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;

                    case "CONSULTA_PACIFICO_ENORTE":
                        //obtener el xml de plantilla para su remplazo
                        //TipoTransaccion = 0001 significa consulta
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "LU";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Codigo = Codigo.PadLeft(8, '0');
                        Parametros = new object[] { numeroTransaccion,
                                        "EMELNORTE",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo
                                        };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_ENORTE":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "LU";
                        Codigo = Codigo.PadLeft(8, '0');
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        string strRC = ReferenciaComprobante.Substring(9, 10);
                        ReferenciaSecundaria = ReferenciaComprobante.Substring(0, 8);

                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Codigo_Tercero"))
                        {
                            try
                            {
                                traceInformation = "Antes de Codigo tercero";
                                if (dsEntrada.Tables["DatosTransaccion"].Rows[0]["Codigo_Tercero"].ToString().Contains("!"))
                                {
                                    traceInformation = "despues de Codigo tercero";
                                    strOrdenBanco = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Codigo_Tercero"].ToString().Split('!')[0];
                                    traceInformation = "Si encontro la posicion 0";
                                    strSecuencial = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Codigo_Tercero"].ToString().Split('!')[1];
                                    traceInformation = "Si encontro la posicion 1";
                                }
                                else
                                {
                                    strOrdenBanco = "00000000";
                                    strSecuencial = "00000000";
                                }
                            }
                            catch (Exception)
                            {
                                EventLog.WriteEntry("EasySwitch", "traceInformation:" + traceInformation);
                                strOrdenBanco = "00000000";
                                strSecuencial = "00000000";
                                EventLog.WriteEntry("EasySwitch", "Seguimos con el proceso");
                            }

                        }

                        Parametros = new object[] { numeroTransaccion,
                                        "EMELNORTE",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,strRC,
                                        ReferenciaOrdenante,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,strOrdenBanco,strSecuencial,ValorComision,NumeroTransaccionEnviar,ReferenciaSecundaria, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_ENORTE":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "LU";

                        Parametros = new object[] { numeroTransaccion,
                                        "EMELNORTE",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region MATERCARD
                    case "REGISTRO_PACIFICO_MASTER":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "PT";
                        Codigo = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Contrapartida"].ToString();
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        ReferenciaComprobante = string.Empty;
                        ReferenciaOrdenante = string.Empty;
                        ReferenciaSecundaria = numeroTransaccion.PadLeft(7, '0'); //dsEntrada.Tables["DatosTransaccion"].Rows[0]["Ordenante"].ToString();
                        CantidadRubros = "0";
                        Parametros = new object[] { numeroTransaccion,
                                        "MASTERCARD",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,ReferenciaSecundaria,ReferenciaComprobante,
                                        ReferenciaOrdenante,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,CantidadRubros, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_MASTER":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "PT";
                        Parametros = new object[] { numeroTransaccion,
                                        "MASTERCARD",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region MOVISTAR
                    case "REGISTRO_PACIFICO_MOVI":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "VT";
                        Codigo = Convert.ToString(dsEntrada.Tables["DatosTransaccion"].Rows[0]["Contrapartida"]);
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        ReferenciaComprobante = string.Empty;
                        if (!string.IsNullOrEmpty((string)dsEntrada.Tables["DatosTransaccion"].Rows[0]["Referencia_Adicional"]))
                        {
                            ReferenciaComprobante = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Referencia_Adicional"].ToString();
                            if (ReferenciaComprobante.Equals("MOVISTAR")) ReferenciaComprobante = "M"; else if (ReferenciaComprobante.Equals("TUENTI")) ReferenciaComprobante = "T";
                        }
                        ReferenciaOrdenante = string.Empty;
                        ReferenciaSecundaria = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Contrapartida"].ToString();
                        CantidadRubros = "0";
                        Parametros = new object[] { numeroTransaccion,
                                        "BROADNET",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,ReferenciaSecundaria,ReferenciaComprobante,
                                        ReferenciaOrdenante,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,CantidadRubros, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_MOVI":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "VT";
                        Parametros = new object[] { numeroTransaccion,
                                        "BROADNET",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;

                    #endregion
                    #region VISA CASH
                    case "REGISTRO_PACIFICO_VISAC":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "VH";

                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        ReferenciaComprobante = string.Empty;
                        ReferenciaOrdenante = string.Empty;
                        ReferenciaSecundaria = numeroTransaccion.PadLeft(7, '0');//dsEntrada.Tables["DatosTransaccion"].Rows[0]["Ordenante"].ToString();
                        CantidadRubros = "0";
                        Parametros = new object[] { numeroTransaccion,
                                        "VISA CASH",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,ReferenciaSecundaria,ReferenciaComprobante,
                                        ReferenciaOrdenante,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,CantidadRubros, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_VISAC":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "VH";
                        Parametros = new object[] { numeroTransaccion,
                                        "VISA CASH",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region MUNICIPIO AMBATO
                    case "CONSULTA_PACIFICO_MUNIAMBATO":
                        //obtener el xml de plantilla para su remplazo
                        //TipoTransaccion = 0001 significa consulta                        
                        producto = "4";
                        servicio = "OC";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");

                        Parametros = new object[] { numeroTransaccion,
                                        "MUNICIPIOAMB",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo,Auxiliar
                                        };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_MUNIAMBATO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";
                        //strCodigo = Codigo.PadLeft(11, '0');
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;

                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Codigo_Tercero"))
                        {
                            strOrdenBanco = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Codigo_Tercero"].ToString().Split('!')[0];
                            strSecuencial = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Codigo_Tercero"].ToString().Split('!')[1];
                        }

                        Parametros = new object[] { numeroTransaccion,
                                        "MUNICIPIOAMB",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,Identificacion,ReferenciaOrdenante,ReferenciaComprobante,CodigoMoneda,
                                        Valor,FormaPago,NumeroCuenta,ValorComision,strOrdenBanco,strSecuencial,NumeroTransaccionEnviar, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_MUNIAMBATO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";

                        Parametros = new object[] { numeroTransaccion,
                                        "MUNICIPIOAMB",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region MUNICIPIO IBARRA
                    case "CONSULTA_PACIFICO_MUNIIBARRA":
                        //obtener el xml de plantilla para su remplazo
                        //TipoTransaccion = 0001 significa consulta                                                                        
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                                        "MUNICIPIOIBA","4","OC","0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,"P"};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_MUNIIBARRA":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";
                        Codigo = Codigo.PadLeft(20, '0');
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;

                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Codigo_Tercero"))
                        {
                            strOrdenBanco = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Codigo_Tercero"].ToString().Split('!')[0];
                            strSecuencial = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Codigo_Tercero"].ToString().Split('!')[1];
                        }

                        Parametros = new object[] { numeroTransaccion,
                                        "MUNICIPIOIBA",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,Identificacion,ReferenciaOrdenante,ReferenciaComprobante,CodigoMoneda,
                                        Valor,FormaPago,NumeroCuenta,ValorComision,strOrdenBanco,strSecuencial,NumeroTransaccionEnviar, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_MUNIIBARRA":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";

                        Parametros = new object[] { numeroTransaccion,
                                        "MUNICIPIOIBA",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region CTG (COMISIÓN NACIONAL DE TRÁNSITO)
                    case "CONSULTA_PACIFICO_CTG":
                        //obtener el xml de plantilla para su remplazo
                        //TipoTransaccion = 0001 significa consulta                        
                        producto = "4";
                        servicio = "Z1";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        if (Auxiliar == "001")
                        {
                            Identificacion = string.Empty;
                            strCodigo = Codigo.PadLeft(12, '0');
                        }
                        else
                        {
                            strCodigo = string.Empty;
                            Identificacion = "C" + Codigo;
                        }
                        Parametros = new object[] { numeroTransaccion,
                                        "CTG",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,strCodigo,"P",Auxiliar,Identificacion
                                        };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_CTG":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "Z1";
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;

                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Codigo_Tercero"))
                        {
                            strOrdenBanco = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Codigo_Tercero"].ToString().Split('!')[0];
                            strSecuencial = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Codigo_Tercero"].ToString().Split('!')[1];
                        }

                        Parametros = new object[] { numeroTransaccion,
                                        "CTG",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,Identificacion,ReferenciaOrdenante,ReferenciaComprobante,CodigoMoneda,
                                        Valor,FormaPago,NumeroCuenta,ValorComision,strOrdenBanco,strSecuencial,NumeroTransaccionEnviar, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_CTG":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "Z1";

                        Parametros = new object[] { numeroTransaccion,
                                        "CTG",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region CNTTTSV
                    case "CONSULTA_PACIFICO_CNTTTSV":
                        //obtener el xml de plantilla para su remplazo
                        //TipoTransaccion = 0001 significa consulta                        
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        if (Auxiliar == "002")
                        {
                            Codigo = string.Empty;
                            Identificacion = "C" + Codigo;
                        }
                        else
                        {
                            Identificacion = string.Empty;
                            Codigo = Codigo.PadRight(12, '0');
                        }
                        Parametros = new object[] { numeroTransaccion,
                                        "CNTTTSV",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo,Auxiliar,Identificacion
                                        };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_CNTTTSV":
                        //obtener el xml de plantilla para su remplazo                        
                        producto = "4";
                        servicio = "OC";

                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;

                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Codigo_Tercero"))
                        {
                            strOrdenBanco = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Codigo_Tercero"].ToString().Split('!')[0];
                            strSecuencial = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Codigo_Tercero"].ToString().Split('!')[1];
                        }


                        Parametros = new object[] { numeroTransaccion,
                                        "CNTTTSV",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,Identificacion, ReferenciaOrdenante,ReferenciaComprobante,CodigoMoneda,
                                        Valor,FormaPago,NumeroCuenta,ValorComision,strOrdenBanco,strSecuencial,NumeroTransaccionEnviar, RucCedula,NombreFactura};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_CNTTTSV":
                        //obtener el xml de plantilla para su remplazo                        
                        producto = "4";
                        servicio = "OC";

                        Parametros = new object[] { numeroTransaccion,
                                        "CNTTTSV",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region SRI-Matriculación
                    case "CONSULTA_PACIFICO_SRIMAT":
                        //obtener el xml de plantilla para su remplazo
                        //TipoTransaccion = 0001 significa consulta
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "MS";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Codigo = "P" + Codigo;
                        Parametros = new object[] { numeroTransaccion,
                                        "SRI",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo,
                                        };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_SRIMAT":
                        //obtener el xml de plantilla para su remplazo                        
                        producto = "4";
                        servicio = "MS";
                        //Codigo = Codigo;
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;

                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Codigo_Tercero"))
                        {
                            strOrdenBanco = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Codigo_Tercero"].ToString().Split('!')[0];
                            strSecuencial = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Codigo_Tercero"].ToString().Split('!')[1];
                        }

                        Parametros = new object[] { numeroTransaccion,
                                        "SRI",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,Identificacion,ReferenciaOrdenante,ReferenciaComprobante,
                                        CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,ValorComision,strOrdenBanco,strSecuencial,NumeroTransaccionEnviar, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_SRIMAT":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "MS";

                        Parametros = new object[] { numeroTransaccion,
                                        "SRI",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region SRI-RISE
                    case "CONSULTA_PACIFICO_SRIRISE":
                        //obtener el xml de plantilla para su remplazo
                        //TipoTransaccion = 0001 significa consulta                        
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "RI";
                        if (Codigo.Length < 11)
                            Codigo = "C" + Codigo + "001";
                        else
                            Codigo = "R" + Codigo;

                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                                        "SRI",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo
                                        };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_SRIRISE":
                        //obtener el xml de plantilla para su remplazo                        
                        producto = "4";
                        servicio = "RI";
                        //codigo = Codigo;
                        //VALIDAR ESTO QUE NO ESTA CLARO
                        //strReferenciaComprobante

                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;

                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Codigo_Tercero"))
                        {
                            strOrdenBanco = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Codigo_Tercero"].ToString().Split('!')[0];
                            strSecuencial = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Codigo_Tercero"].ToString().Split('!')[1];
                        }

                        Parametros = new object[] { numeroTransaccion,
                                        "SRI",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,Identificacion,ReferenciaOrdenante,
                                        ReferenciaComprobante,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,ValorComision,strOrdenBanco,strSecuencial,NumeroTransaccionEnviar, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_SRIRISE":
                        //obtener el xml de plantilla para su remplazo                        
                        producto = "4";
                        servicio = "RI";
                        Parametros = new object[] { numeroTransaccion,
                                        "SRI",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region SRI-Transferencias de Dominio
                    case "CONSULTA_PACIFICO_SRITDOM":
                        //obtener el xml de plantilla para su remplazo
                        //TipoTransaccion = 0001 significa consulta
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "T6";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        //codigo = Codigo;
                        Parametros = new object[] { numeroTransaccion,
                                        "SRI",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo,
                                        };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_SRITDOM":
                        //obtener el xml de plantilla para su remplazo                        
                        producto = "4";
                        servicio = "T6";
                        //codigo = Codigo;
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Codigo_Tercero"))
                        {
                            strOrdenBanco = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Codigo_Tercero"].ToString().Split('!')[0];
                            strSecuencial = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Codigo_Tercero"].ToString().Split('!')[1];
                        }
                        Parametros = new object[] { numeroTransaccion,
                                        "SRI",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo, Identificacion,ReferenciaOrdenante,ReferenciaComprobante,
                                        CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,ValorComision,strOrdenBanco,strSecuencial,NumeroTransaccionEnviar, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_SRITDOM":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "T6";

                        Parametros = new object[] { numeroTransaccion,
                                        "SRI",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region SRI-CEP Comprobantes Electrónicos para Pago
                    case "CONSULTA_PACIFICO_SRICEP":
                        //obtener el xml de plantilla para su remplazo
                        //TipoTransaccion = 0001 significa consulta
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "CE";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");

                        Parametros = new object[] { numeroTransaccion,
                                        "SRI",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        //PasswordWS,UsuarioCajero,OficinaCPT,strCodigo,TipoCodigo,"R"+Auxiliar,Codigo
                                        PasswordWS,UsuarioCajero,OficinaCPT,TipoCodigo,Codigo
                                        };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_SRICEP":
                        //obtener el xml de plantilla para su remplazo                        
                        producto = "4";
                        servicio = "CE";
                        //codigo = Codigo;
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Codigo_Tercero"))
                        {
                            strOrdenBanco = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Codigo_Tercero"].ToString().Split('!')[0];
                            strSecuencial = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Codigo_Tercero"].ToString().Split('!')[1];
                        }

                        int startIndex = Convert.ToInt32(string.IsNullOrEmpty(ConfigurationManager.AppSettings["valorInicial"]) ? "20" : ConfigurationManager.AppSettings["valorInicial"]);
                        string str103 = string.Empty;
                        int length = ReferenciaComprobante.Length - startIndex;
                        if (ReferenciaComprobante.Length >= startIndex)
                            str103 = ReferenciaComprobante.Substring(startIndex, length);

                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia"))
                        {
                            ReferenciaComprobante = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Referencia"].ToString().Split('|')[0];
                        }

                        Parametros = new object[] { numeroTransaccion,
                                        "SRI",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo, strIdentificacion,ReferenciaOrdenante,str103,
                                        CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,ValorComision,strOrdenBanco,strSecuencial,NumeroTransaccionEnviar, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_SRICEP":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "CE";

                        Parametros = new object[] { numeroTransaccion,
                                        "SRI",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region FARMA
                    case "CONSULTA_FARMA_RIFA":
                        //obtener el xml de plantilla para su remplazo
                        //TipoTransaccion = 0001 significa consulta
                        strResultado = dsEntrada.GetXml();
                        break;
                    case "REGISTRO_FARMA_RIFA":
                        //obtener el xml de plantilla para su remplazo                        
                        strResultado = Auxiliar;
                        break;
                    case "REGISTRO_FARMA_CARPETA":
                        //obtener el xml de plantilla para su remplazo                        
                        strResultado = dsEntrada.GetXml();
                        break;
                    case "REVERSO_FARMA_RIFA":
                        //buscar los items de C_Movimientos segun multiplereferencia y luego con esos items
                        //sacar de cada item el campo referencia adicional y reversar cada itemasivos
                        //Id_Origen
                        string strBoletos = adm.ObtnerBoletosPorMultipleReferencia(idOrigen);
                        strResultado = strBoletos;

                        break;
                    #endregion
                    #region AVON
                    case "CONSULTA_PACIFICO_AVON":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";

                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                                        "AVON",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo.PadLeft(11,'0'),TipoCodigo };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_AVON":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;

                        Parametros = new object[] { numeroTransaccion,
                                        "AVON",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,ReferenciaOrdenante,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,ValorComision,NumeroTransaccionEnviar, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_AVON":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";
                        Parametros = new object[] { numeroTransaccion,
                                        "AVON",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region CONECELL
                    case "CONSULTA_PACIFICO_CONECELL":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "O2";

                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                                        "CONECELL",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_CONECELL":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "O2";
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        if (ReferenciaComprobante.Length > 15)
                            ReferenciaComprobante = ReferenciaComprobante.Substring(0, 15);
                        else
                            ReferenciaComprobante = ReferenciaComprobante.PadLeft(15, '0');

                        Parametros = new object[] { numeroTransaccion,
                                        "CONECELL",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,ReferenciaOrdenante,ReferenciaComprobante,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,ValorComision,NumeroTransaccionEnviar, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_CONECELL":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "O2";
                        Parametros = new object[] { numeroTransaccion,
                                        "CONECELL",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region CREDIMETRICA
                    case "CONSULTA_PACIFICO_CREDIMETRICA":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";

                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                                        "CREDIRECTO",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_CREDIMETRICA":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";


                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;

                        Parametros = new object[] { numeroTransaccion,
                                        "CREDIRECTO",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,strOrdenBanco,strSecuencial,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,ValorComision,NumeroTransaccionEnviar, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_CREDIMETRICA":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";
                        Parametros = new object[] { numeroTransaccion,
                                        "CREDIRECTO",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region CREDITRUCK
                    case "CONSULTA_PACIFICO_CREDITRUCK":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";

                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                                        "CREDITRUCK",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_CREDITRUCK":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";


                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;

                        Parametros = new object[] { numeroTransaccion,
                                        "CREDITRUCK",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,strOrdenBanco,strSecuencial,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,ValorComision,NumeroTransaccionEnviar, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_CREDITRUCK":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";
                        Parametros = new object[] { numeroTransaccion,
                                        "CREDITRUCK",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region EERSA (EMPRESA ELECTRICA RIOBAMBA SA)
                    case "CONSULTA_PACIFICO_EERSA":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "LU";

                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                                        "EERSA",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_EERSA":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "LU";


                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;

                        if (ReferenciaComprobante.Length > 15)
                            ReferenciaComprobante = ReferenciaComprobante.Substring(0, 15);

                        Parametros = new object[] { numeroTransaccion,
                                        "EERSA",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,Identificacion,ReferenciaOrdenante,ReferenciaComprobante,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,ValorComision,NumeroTransaccionEnviar, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_EERSA":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "LU";
                        Parametros = new object[] { numeroTransaccion,
                                        "EERSA",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region EERCS (EMPRESA ELÉCTRICA REGIONAL CENTROSUR C.A.)
                    case "CONSULTA_PACIFICO_EERCS":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "LV";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] {
                            numeroTransaccion,
                            "EERCS CUENCA",
                            producto,
                            servicio,
                            "0001",
                            fechaTransaccion,
                            fechaContable,
                            horaTransaccion,
                            canalProceso,
                            UserWS,
                            PasswordWS,
                            UsuarioCajero,
                            OficinaCPT,
                            TipoCodigo,
                            Codigo
                        };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_EERCS":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "LV";
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        Parametros = new object[] {
                            numeroTransaccion,
                            "EERCS CUENCA",
                            producto,
                            servicio,
                            "0003",
                            fechaTransaccion,
                            fechaContable,
                            horaTransaccion,
                            canalProceso,
                            UserWS,
                            PasswordWS,
                            UsuarioCajero,
                            OficinaCPT,
                            Codigo,
                            Identificacion, //<-- agregado por luis.lopez(10/07/2014)
                            ReferenciaComprobante, //<-- agregado por luis.lopez(10/07/2014)
                            ReferenciaOrdenante,
                            ReferenciaSecundaria,
                            CodigoMoneda,
                            Valor,
                            FormaPago,
                            NumeroCuenta,
                            strOrdenBanco, //<-- agregado por luis.lopez(10/07/2014)
                            strSecuencial, //<-- agregado por luis.lopez(10/07/2014)
                            ValorComision, //<-- agregado por luis.lopez(10/07/2014)
                            NumeroTransaccionEnviar,
                            RucCedula, //<-- agregado por luis.lopez(10/07/2014)
                            NombreFactura //<-- agregado por luis.lopez(10/07/2014)
                        };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_EERCS":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "LV";
                        Parametros = new object[] {
                            numeroTransaccion,
                            "EERCS CUENCA",
                            producto,
                            servicio,
                            "0005",
                            fechaTransaccion,
                            fechaContable,
                            horaTransaccion,
                            canalProceso,
                            UserWS,
                            PasswordWS,
                            UsuarioCajero,
                            OficinaCPT,
                            NumeroTransaccionReversar,
                            Motivo,
                            NumeroTransaccionComision
                        };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region LEONISA

                    case "REGISTRO_PACIFICO_LEONISA":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";


                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;

                        Parametros = new object[] { numeroTransaccion,
                                        "LEONISA",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Identificacion,ReferenciaOrdenante,ReferenciaComprobante,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,ValorComision,NumeroTransaccionEnviar, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_LEONISA":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";
                        Parametros = new object[] { numeroTransaccion,
                                        "LEONISA",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region OTECEL
                    case "CONSULTA_PACIFICO_OTECEL":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "BA";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                                        "OTECEL",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_OTECEL":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "BA";

                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;

                        if (ReferenciaComprobante.Length > 15)
                            ReferenciaComprobante = ReferenciaComprobante.Substring(0, 15);


                        Parametros = new object[] { numeroTransaccion,
                                        "OTECEL",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,Identificacion,ReferenciaOrdenante,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta, ValorComision,NumeroTransaccionEnviar,RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_OTECEL":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "BA";
                        Parametros = new object[] { numeroTransaccion,
                                        "OTECEL",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    //CONSULTA DE TRANSACCIONES QUE SE LA REALIZAN POR CONTRAPRTIDA
                    #region CNEL MILAGRO
                    case "CONSULTA_PACIFICO_CNELMILA":
                        //obtener el xml de plantilla para su remplazo
                        //TipoTransaccion = 0001 significa consulta

                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "LU";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");

                        Parametros = new object[] { numeroTransaccion,
                                        "CNEL MILAGRO",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo
                                        };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_CNELMILA":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "LU";

                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;

                        if (ReferenciaComprobante.Length < 15)
                            ReferenciaComprobante = ReferenciaComprobante.PadRight(15, ' ');
                        ReferenciaComprobante = ReferenciaComprobante.Substring(0, 15);

                        Parametros = new object[] { numeroTransaccion,
                                        "CNEL MILAGRO",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,Identificacion,
                                        ReferenciaOrdenante, ReferenciaComprobante,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,strOrdenBanco,strSecuencial,ValorComision,NumeroTransaccionEnviar, RucCedula,NombreFactura};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_CNELMILA":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "LU";

                        Parametros = new object[] { numeroTransaccion,
                                        "CNEL MILAGRO",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region CNEL EL ORO
                    case "CONSULTA_PACIFICO_CNELORO":
                        //obtener el xml de plantilla para su remplazo
                        //TipoTransaccion = 0001 significa consulta

                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "LU";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");

                        Parametros = new object[] { numeroTransaccion,
                                        "CNEL EL ORO",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo
                                        };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_CNELORO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "LU";

                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;

                        if (ReferenciaComprobante.Length < 15)
                            ReferenciaComprobante = ReferenciaComprobante.PadRight(15, ' ');
                        ReferenciaComprobante = ReferenciaComprobante.Substring(0, 15);

                        Parametros = new object[] { numeroTransaccion,
                                        "CNEL EL ORO",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,Identificacion,
                                        ReferenciaOrdenante, ReferenciaComprobante,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,strOrdenBanco,strSecuencial,ValorComision,NumeroTransaccionEnviar, RucCedula,NombreFactura};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_CNELORO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "LU";

                        Parametros = new object[] { numeroTransaccion,
                                        "CNEL EL ORO",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region INTERAGUA
                    case "CONSULTA_PACIFICO_INTERAGUA":
                        //obtener el xml de plantilla para su remplazo
                        //TipoTransaccion = 0001 significa consulta

                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "AU";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        //Codigo = Codigo.PadLeft(7, '0');
                        Parametros = new object[] { numeroTransaccion,
                                        "INTERAGUA",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo
                                        };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_INTERAGUA":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "AU";

                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;

                        if (ReferenciaComprobante.Length < 15)
                            ReferenciaComprobante = ReferenciaComprobante.PadRight(15, ' ');
                        ReferenciaComprobante = ReferenciaComprobante.Substring(0, 15);

                        Parametros = new object[] { numeroTransaccion,
                                        "INTERAGUA",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,Identificacion,
                                        ReferenciaOrdenante, ReferenciaComprobante,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,strOrdenBanco,strSecuencial,ValorComision,NumeroTransaccionEnviar, RucCedula,NombreFactura};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_INTERAGUA":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "AU";

                        Parametros = new object[] { numeroTransaccion,
                                        "INTERAGUA",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region INTERAGUAOL
                    case "CONSULTA_PACIFICO_INTERAGUAOL":
                        //obtener el xml de plantilla para su remplazo
                        //TipoTransaccion = 0001 significa consulta
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "A1";
                        Auxiliar = "02";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                                        "INTERAGUA",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo,Auxiliar
                                        };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_INTERAGUAOL":
                        producto = "4";
                        servicio = "A1";
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        Parametros = new object[] { numeroTransaccion,
                                        "INTERAGUA",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,Identificacion,
                                        ReferenciaOrdenante,ReferenciaComprobante,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,NumeroTransaccionEnviar,RucCedula,NombreFactura,ValorComision}; //
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_INTERAGUAOL":
                        producto = "4";
                        servicio = "A1";
                        Parametros = new object[] { numeroTransaccion,
                                        "INTERAGUA",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region TVCABLE GYE
                    case "CONSULTA_PACIFICO_TVCABLE":
                        //obtener el xml de plantilla para su remplazo
                        //TipoTransaccion = 0001 significa consulta       

                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "TO";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                                        "TV CABLE",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo,
                                        CodigoAdicional };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_TVCABLE":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "TO";
                        strReferenciaComprobante = ReferenciaComprobante;
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        Parametros = new object[] { numeroTransaccion,
                                        "TV CABLE",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,CodigoAdicional,Codigo,
                                        ReferenciaOrdenante,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,strOrdenBanco,strSecuencial,ValorComision,NumeroTransaccionEnviar, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_TVCABLE":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "TO";
                        Parametros = new object[] { numeroTransaccion,
                                        "TV CABLE",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region TVCABLE UIO
                    case "CONSULTA_PACIFICO_TVCABLEUIO":
                        //obtener el xml de plantilla para su remplazo
                        //TipoTransaccion = 0001 significa consulta       

                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "TO";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                                        "TVCABLE UIO",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo,
                                        CodigoAdicional };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_TVCABLEUIO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "TO";
                        strReferenciaComprobante = ReferenciaComprobante;
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        Parametros = new object[] { numeroTransaccion,
                                        "TVCABLE UIO",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,CodigoAdicional,Codigo,
                                        ReferenciaOrdenante,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,strOrdenBanco,strSecuencial,ValorComision,NumeroTransaccionEnviar, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_TVCABLEUIO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "TO";
                        Parametros = new object[] { numeroTransaccion,
                                        "TVCABLE UIO",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region MUNICIPIO QUITO
                    case "CONSULTA_PACIFICO_MUNIQUITO":
                        //obtener el xml de plantilla para su remplazo
                        //TipoTransaccion = 0001 significa consulta                        
                        producto = "4";
                        servicio = "ZG";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");

                        Parametros = new object[] { numeroTransaccion,
                                        "MUNICIPIOQUI",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo,Auxiliar
                                        };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_MUNIQUITO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "ZG";
                        //strCodigo = Codigo.PadLeft(11, '0');
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;

                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Codigo_Tercero"))
                        {
                            strOrdenBanco = "0";
                            strSecuencial = "0";
                        }


                        Parametros = new object[] { numeroTransaccion,
                                        "MUNICIPIOQUI",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,Identificacion,ReferenciaComprobante,ReferenciaOrdenante,CodigoMoneda,
                                        Valor,FormaPago,NumeroCuenta,strOrdenBanco,strSecuencial,ValorComision,NumeroTransaccionEnviar,"2","001",strDescRubro1,"1","001",strDescRubro2,"1", RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_MUNIQUITO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "ZG";

                        Parametros = new object[] { numeroTransaccion,
                                        "MUNICIPIOQUI",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region UNIVISA
                    case "CONSULTA_PACIFICO_UNIVISA":
                        //obtener el xml de plantilla para su remplazo
                        //TipoTransaccion = 0001 significa consulta                            
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "TP";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                                        "UNIVISA",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo,
                                        Auxiliar,CodigoAdicional };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_UNIVISA":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "TP";
                        strReferenciaComprobante = ReferenciaComprobante;
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        Parametros = new object[] { numeroTransaccion,
                                        "UNIVISA",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,Identificacion,strReferenciaComprobante,
                                        ReferenciaOrdenante,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,strOrdenBanco,strSecuencial,ValorComision,NumeroTransaccionEnviar, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_UNIVISA":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "TP";
                        Parametros = new object[] { numeroTransaccion,
                                        "UNIVISA",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region ELECTRICA DE GYE
                    case "CONSULTA_PACIFICO_ELEGYE":
                        //obtener el xml de plantilla para su remplazo
                        //TipoTransaccion = 0001 significa consulta

                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "LV";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");

                        Parametros = new object[] { numeroTransaccion,
                                        "EEE",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo
                                        };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_ELEGYE":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "LV";

                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;

                        if (ReferenciaComprobante.Length < 15)
                            ReferenciaComprobante = ReferenciaComprobante.PadRight(15, ' ');
                        ReferenciaComprobante = ReferenciaComprobante.Substring(0, 15);

                        Parametros = new object[] { numeroTransaccion,
                                        "EEE",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,Identificacion,
                                        ReferenciaOrdenante, ReferenciaComprobante.Trim(),CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,strOrdenBanco,strSecuencial,ValorComision,NumeroTransaccionEnviar,"001",strDescRubro1,strValorRubro1,"001",strDescRubro2,strValorRubro2, RucCedula,NombreFactura};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_ELEGYE":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "LV";

                        Parametros = new object[] { numeroTransaccion,
                                        "EEE",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region BILLETERA ELECTRONICA
                    case "REGISTRO_PACIFICO_BELECA":
                        //obtener el xml de plantilla para su remplazo
                        //TipoTransaccion = 0001 significa consulta


                        producto = "4";
                        servicio = "B3";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");

                        Parametros = new object[] { numeroTransaccion,
                                        "BILLETERABCE",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,ReferenciaSecundaria,ReferenciaOrdenante,ReferenciaComprobante,
                            CodigoMoneda,Valor,FormaPago,NumeroCuenta,4,"001",strNombre1,1,
                            "001",strNombre2,1,"001",strApellido1,1,"001",strApellido2,1};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_BELECD":
                        //obtener el xml de plantilla para su remplazo
                        //TipoTransaccion = 0001 significa consulta


                        producto = "4";
                        servicio = "B1";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");

                        Parametros = new object[] { numeroTransaccion,
                                        "BILLETERABCE",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,ReferenciaSecundaria,ReferenciaOrdenante,CodigoMoneda,Valor,FormaPago,NumeroCuenta};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_BELECR":
                        //obtener el xml de plantilla para su remplazo
                        //TipoTransaccion = 0001 significa consulta


                        producto = "4";
                        servicio = "B2";
                        numeroTransaccion = DateTime.Now.ToString("HHmmss");

                        Parametros = new object[] { numeroTransaccion,
                                        "BILLETERABCE",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,ReferenciaSecundaria,CodigoMoneda,Valor,FormaPago,NumeroCuenta};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;

                    #endregion
                    #region CLARO
                    case "REGISTRO_PACIFICO_CLARO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "AH";
                        //codigo = Codigo;
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        CantidadRubros = "0";

                        Parametros = new object[] { numeroTransaccion,
                                        "CONECELL",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,string.Empty,ReferenciaOrdenante,Identificacion,
                                        CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,CantidadRubros, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);

                        break;
                    case "REVERSO_PACIFICO_CLARO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "AH";

                        Parametros = new object[] { numeroTransaccion,
                                        "CONECELL",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;

                    #endregion
                    #region AGUAPEN (EMPRESA PUBLICA MUNICIAPL MANCOMUNADA)
                    case "CONSULTA_PACIFICO_AGUAPEN":
                        //obtener el xml de plantilla para su remplazo
                        //TipoTransaccion = 0001 significa consulta
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "AU";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Codigo = Codigo.PadLeft(7, '0');
                        Parametros = new object[] { numeroTransaccion,
                                        "AGUAPEN",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo,
                                        };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_AGUAPEN":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "AU";
                        Codigo = Codigo.PadLeft(7, '0');
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        Parametros = new object[] { numeroTransaccion,
                                        "AGUAPEN",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,Identificacion,ReferenciaComprobante,
                                        ReferenciaOrdenante,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,strOrdenBanco,strSecuencial,ValorComision,NumeroTransaccionEnviar, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_AGUAPEN":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "AU";

                        Parametros = new object[] { numeroTransaccion,
                                        "AGUAPEN",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region AMAGUA (AGUAS DE SAMBORONDÓN AMAGUA C.E.M)
                    case "CONSULTA_PACIFICO_AMAGUA":
                        //obtener el xml de plantilla para su remplazo
                        //TipoTransaccion = 0001 significa consulta
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "AU";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        //codigo = Codigo;
                        Parametros = new object[] { numeroTransaccion,
                                        "AMAGUA",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo,
                                        };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_AMAGUA":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "AU";
                        //codigo = Codigo;
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        Parametros = new object[] { numeroTransaccion,
                                        "AMAGUA",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,Identificacion,ReferenciaComprobante,ReferenciaOrdenante
                                        ,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,strOrdenBanco,strSecuencial,ValorComision,NumeroTransaccionEnviar, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_AMAGUA":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "AU";

                        Parametros = new object[] { numeroTransaccion,
                                        "AMAGUA",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region EMAPAP (LA EMPRESA PÚBLICA MUNICIPAL DE AGUA POTABLE Y ALCANTARILLADO DE PORTOVIEJO)
                    case "CONSULTA_PACIFICO_EMAPAP":
                        //obtener el xml de plantilla para su remplazo
                        //TipoTransaccion = 0001 significa consulta
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "AU";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        //codigo = Codigo;
                        Parametros = new object[] { numeroTransaccion,
                                        "PORTOAGUAS",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo,
                                        };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_EMAPAP":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "AU";
                        //codigo = Codigo;
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        Parametros = new object[] { numeroTransaccion,
                                        "PORTOAGUAS",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,Identificacion, ReferenciaComprobante,
                                        ReferenciaOrdenante,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,strOrdenBanco,strSecuencial,ValorComision,NumeroTransaccionEnviar, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_EMAPAP":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "AU";

                        Parametros = new object[] { numeroTransaccion,
                                        "PORTOAGUAS",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region TRIPLEORO
                    case "CONSULTA_PACIFICO_TRIPLEORO":
                        //obtener el xml de plantilla para su remplazo
                        //TipoTransaccion = 0001 significa consulta
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "AU";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        //codigo = Codigo;
                        Parametros = new object[] { numeroTransaccion,
                                        "TRIPLEORO",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo,
                                        };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_TRIPLEORO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "AU";
                        //codigo = Codigo;
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        Parametros = new object[] { numeroTransaccion,
                                        "TRIPLEORO",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,string.Empty,string.Empty,
                                        ReferenciaOrdenante,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,"0000","0000",ValorComision,NumeroTransaccionEnviar, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_TRIPLEORO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "AU";

                        Parametros = new object[] { numeroTransaccion,
                                        "TRIPLEORO",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region CNEL GUAYAS-LOS RIOS
                    case "CONSULTA_PACIFICO_CNELGYELR":
                        //obtener el xml de plantilla para su remplazo
                        //TipoTransaccion = 0001 significa consulta

                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "LV";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");

                        Parametros = new object[] { numeroTransaccion,
                                        "CNEL",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo,Auxiliar
                                        };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_CNELGYELR":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "LV";

                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;

                        if (ReferenciaComprobante.Length < 15)
                            ReferenciaComprobante = ReferenciaComprobante.PadRight(15, ' ');
                        ReferenciaComprobante = ReferenciaComprobante.Substring(0, 15);

                        Parametros = new object[] { numeroTransaccion,
                                        "CNEL",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,Identificacion,ReferenciaComprobante,
                                        ReferenciaOrdenante, CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,strOrdenBanco,strSecuencial,ValorComision,NumeroTransaccionEnviar,"4","001","TPEND=Total Pendiente",Valor,"002","FEMVE="+strDescRubro2,
                                        "1","003","VBASE=Base Imponible",strValorRubro3,"004","VRETE=Valor Retención",strValorRubro4, RucCedula,NombreFactura};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_CNELGYELR":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "LV";

                        Parametros = new object[] { numeroTransaccion,
                                        "CNEL",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region CAE (COLEGIO DE ARQUITECTOS DEL ECUADOR)
                    case "CONSULTA_PACIFICO_CAE":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "DX";

                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                                        "CAE",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,TipoCodigo,Codigo };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_CAE":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "DX";


                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;

                        Parametros = new object[] { numeroTransaccion,
                                        "CAE",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,Identificacion,ReferenciaOrdenante,ReferenciaComprobante,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,"01","001",ReferenciaSecundaria,"1",strOrdenBanco,strSecuencial,ValorComision,NumeroTransaccionEnviar, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_CAE":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "DX";
                        Parametros = new object[] { numeroTransaccion,
                                        "CAE",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region MUNICIPIO DE GUAYAQUIL
                    case "CONSULTA_PACIFICO_MUNIGYE":
                        //obtener el xml de plantilla para su remplazo
                        //TipoTransaccion = 0001 significa consulta                        
                        producto = "4";
                        servicio = "OC";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");

                        Parametros = new object[] { numeroTransaccion,
                                        "MUNICIPIOGYE",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo,Auxiliar
                                        };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_MUNIGYE":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";
                        //strCodigo = Codigo.PadLeft(11, '0');
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;

                        Parametros = new object[] { numeroTransaccion,
                                        "MUNICIPIOGYE",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,ReferenciaOrdenante, Identificacion,ReferenciaComprobante,CodigoMoneda,
                                        Valor,FormaPago,NumeroCuenta,ValorComision,NumeroTransaccionEnviar, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_MUNIGYE":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";

                        Parametros = new object[] { numeroTransaccion,
                                        "MUNICIPIOGYE",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    //Recaudacion de Universidades
                    #region UNACH
                    case "CONSULTA_PACIFICO_UNACH":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                                        "UNACH",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_UNACH":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";

                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        Parametros = new object[] { numeroTransaccion,
                                        "UNACH",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,ReferenciaOrdenante,Identificacion, ReferenciaComprobante,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,ValorComision,NumeroTransaccionEnviar, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_UNACH":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";
                        Parametros = new object[] { numeroTransaccion,
                                        "UNACH",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region ESPOCH
                    case "CONSULTA_PACIFICO_ESPOCH":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "ZG";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                                        "ESPOCH",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_ESPOCH":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "ZG";

                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        Parametros = new object[] { numeroTransaccion,
                                        "ESPOCH",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,Identificacion,ReferenciaOrdenante,ReferenciaComprobante,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,ValorComision,NumeroTransaccionEnviar, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_ESPOCH":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "ZG";
                        Parametros = new object[] { numeroTransaccion,
                                        "ESPOCH",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region COBESPOCH
                    case "CONSULTA_PACIFICO_CBRESPOCH":
                        //TipoCodigo = "P";
                        //producto = "4";
                        //servicio = "ZG";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                                        fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,CodigoAdicional};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_CBRESPOCH":

                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        Parametros = new object[] { numeroTransaccion,fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,
                            ReferenciaComprobante,ReferenciaOrdenante,Identificacion,Valor,
                                        NumeroCuenta,ValorComision,NumeroTransaccionEnviar,RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_CBRESPOCH":
                        //obtener el xml de plantilla para su remplazo
                        //TipoCodigo = "P";
                        //producto = "4";
                        //servicio = "ZG";
                        Parametros = new object[] { numeroTransaccion,
                                       fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region UIVERSIDAD MANABI
                    case "CONSULTA_PACIFICO_UMANABI":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                                        "U MANABI",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_UMANABI":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";

                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        Parametros = new object[] { numeroTransaccion,
                                        "U MANABI",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,strOrdenBanco,strSecuencial,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,ValorComision,NumeroTransaccionEnviar, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_UMANABI":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";
                        Parametros = new object[] { numeroTransaccion,
                                        "U MANABI",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    //estoy hay que eliminar ya que sirve para la presentacion no mas
                    #region MONEYGRAM

                    case "REGISTRO_PACIFICO_MONEY":

                        break;
                    case "REVERSO_PACIFICO_MONEY":
                        //obtener el xml de plantilla para su remplazo

                        break;
                    #endregion
                    #region CITACIONES (ANT)
                    case "CONSULTA_PACIFICO_ANTC":
                        //obtener el xml de plantilla para su remplazo
                        //TipoTransaccion = 0001 significa consulta
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "Z1";

                        if (Codigo.Length == 10)
                            Codigo = "C" + Codigo;
                        else
                            if (Codigo.Length == 13)
                            Codigo = "R" + Codigo;

                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                            "ANT",producto,servicio,"0001",fechaTransaccion,
                             fechaContable,horaTransaccion,canalProceso,UserWS,
                             PasswordWS,UsuarioCajero,OficinaCPT,Identificacion,TipoCodigo,Codigo,
                            RefernciaNumero_Documento };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #region TRÁMITES (ANT)
                    case "CONSULTA_PACIFICO_ANTT":
                        //obtener el xml de plantilla para su remplazo
                        //TipoTransaccion = 0001 significa consulta

                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "Z1";

                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                                        "ANT",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo,Identificacion,
                                        RefernciaNumero_Documento };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion




                    //ERIKA ANT PONEMOS ESTAS LINEAS PARA LAS PRUEBAS EN TEST A CAMBIO DE LO QUE ESTA EN PRODUCCION
                    //ANT CON CAMBIOS DEL UPGRADE
                    //#region TRÁMITES (ANT) EN LÍNEA & CONVENIOS (ANT) EN LÍNEA
                    //case "CONSULTA_PACIFICO_ANTO":
                    //    //obtener el xml de plantilla para su remplazo
                    //    //TipoTransaccion = 0001 significa consulta

                    //    traceInformation = "ANT-->ReferenciaSecundaria:" + ReferenciaSecundaria;
                    //    TipoCodigo = "P";
                    //    producto = "4";
                    //    servicio = "AN";
                    //    //si es convenio de pago el servicio es AT
                    //    if (ReferenciaSecundaria == "CON")
                    //        servicio = "AT";

                    //    traceInformation = "ANT-->tipoDocumento:" + tipoDocumento;

                    //    string auxIdentificacion = string.Empty;
                    //    switch (tipoDocumento)
                    //    {
                    //        case "CI":
                    //        case "RUC":
                    //            if (codigoJudicatura.ToString().Length == 10) { codigoJudicatura = "C" + codigoJudicatura; }
                    //            else
                    //            {
                    //                if (codigoJudicatura.Length == 13)
                    //                    codigoJudicatura = "R" + codigoJudicatura;
                    //            }
                    //            auxIdentificacion = string.Empty;
                    //            switch (ReferenciaSecundaria)
                    //            {
                    //                case "CIT":
                    //                    CodigoAdicional = "CIT0000000000";
                    //                    break;
                    //            }
                    //            break;
                    //        case "PLA":
                    //            auxIdentificacion = codigoJudicatura;
                    //            switch (ReferenciaSecundaria)
                    //            {
                    //                case "CIT":
                    //                    codigoJudicatura = string.Empty;
                    //                    CodigoAdicional = "CPL0000000000";
                    //                    break;
                    //                case "SOL":
                    //                case "CDP":
                    //                    codigoJudicatura = string.Empty;
                    //                    break;
                    //            }
                    //            break;
                    //        case "SOL":
                    //            codigoJudicatura = string.Empty;
                    //            if (codigoJudicatura.Length < 10)
                    //                codigoJudicatura = codigoJudicatura.PadLeft(10 - codigoJudicatura.Length, '0');
                    //            CodigoAdicional += codigoJudicatura;
                    //            break;
                    //    }

                    //    numeroTransaccion = DateTime.Now.ToString("HHmmss");
                    //    Parametros = new object[] { numeroTransaccion,
                    //                    "ANT",producto,servicio,"0001",fechaTransaccion,
                    //                    fechaContable,horaTransaccion,canalProceso,UserWS,
                    //                                   PasswordWS,UsuarioCajero,OficinaCPT,
                    //                                   TipoCodigo,auxIdentificacion,codigoJudicatura,Auxiliar,CodigoAdicional };
                    //    strResultado = String.Format(plantillaXml, Parametros);
                    //    break;
                    //case "CONSULTA_PACIFICO_ANTCO":
                    //    //obtener el xml de plantilla para su remplazo
                    //    //TipoTransaccion = 0001 significa consulta

                    //    TipoCodigo = "P";
                    //    producto = "4";
                    //    servicio = "AN";
                    //    //si es convenio de pago el servicio es AT
                    //    if (ReferenciaSecundaria == "CON")
                    //        servicio = "AT";

                    //    if (Codigo.ToString().Length == 10)
                    //        Codigo = "C" + Codigo;
                    //    else
                    //        if (Codigo.Length == 13)
                    //        Codigo = "R" + Codigo;

                    //    numeroTransaccion = DateTime.Now.ToString("HHmmss");
                    //    Parametros = new object[] { numeroTransaccion,
                    //                    "ANT",producto,servicio,"0001",fechaTransaccion,
                    //                    fechaContable,horaTransaccion,canalProceso,UserWS,
                    //                    PasswordWS,UsuarioCajero,OficinaCPT,TipoCodigo,Codigo,
                    //                    Auxiliar, CodigoAdicional };
                    //    strResultado = String.Format(plantillaXml, Parametros);
                    //    break;
                    //#endregion


                    //ERIKA ANT COMENTAMOS ESTAS LINEAS QUE ESTAN EN PRODUCCION PARA HACER LAS PRUEBAS EN TEST
                    #region TRÁMITES (ANT) EN LÍNEA & CONVENIOS (ANT) EN LÍNEA
                    case "CONSULTA_PACIFICO_ANTCO":
                    case "CONSULTA_PACIFICO_ANTO":
                        //obtener el xml de plantilla para su remplazo
                        //TipoTransaccion = 0001 significa consulta

                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "AN";
                        //si es convenio de pago el servicio es AT
                        if (ReferenciaSecundaria == "CON")
                            servicio = "AT";

                        if (Codigo.ToString().Length == 10)
                            Codigo = "C" + Codigo;
                        else
                            if (Codigo.Length == 13)
                            Codigo = "R" + Codigo;

                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                                        "ANT",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,TipoCodigo,Codigo,
                                        Auxiliar, CodigoAdicional };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region ANT CONVENIOS DE PAGOS
                    case "CONSULTA_PACIFICO_ANTON":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "AT";
                        if (Codigo.ToString().Length == 10)
                            Codigo = "C" + Codigo;
                        else
                            if (Codigo.Length == 13)
                            Codigo = "R" + Codigo;
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                                        "ANT",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,TipoCodigo,Codigo,
                                        Identificacion,Auxiliar,"CDP"};//CodigoAdicional
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_ANTON":
                        //obtener el xml de plantilla para su remplazo
                        producto = "4";
                        servicio = "AT";
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        if (Identificacion.ToString().Length == 10)
                            Identificacion = "C" + Identificacion;
                        else
                            if (Identificacion.Length == 13)
                            Identificacion = "R" + Identificacion;
                        Parametros = new object[] { numeroTransaccion,
                                        "ANT",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,
                                        Codigo,ReferenciaOrdenante,Identificacion,ReferenciaComprobante,
                                        CodigoMoneda,Valor,FormaPago,NumeroCuenta,ValorComision,NumeroTransaccionComision};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region TRÁMITES (ANT) SIN INFORMACIÓN
                    case "REGISTRO_PACIFICO_ANT":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Ordenante"))
                        {
                            ReferenciaOrdenante = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Ordenante"].ToString().Split('|')[1].ToString();
                            RefernciaNumero_Documento = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Ordenante"].ToString().Split('|')[0].ToString();
                            if (RefernciaNumero_Documento.ToString().Length == 10)
                                RefernciaNumero_Documento = "C" + RefernciaNumero_Documento;
                            else
                                if (ReferenciaSecundaria.Length == 13)
                                RefernciaNumero_Documento = "R" + RefernciaNumero_Documento;
                        }
                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia_Adicional"))
                            Codigo = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Referencia_Adicional"].ToString();

                        Parametros = new object[] { numeroTransaccion,
                                        "ANT",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,ReferenciaOrdenante,
                                        RefernciaNumero_Documento,strTelefono,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,ValorComision,NumeroTransaccionEnviar, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    case "REGISTRO_PACIFICO_ANTT":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "Z1";
                        ReferenciaComprobante = Codigo.Substring(0, 12);
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;

                        Parametros = new object[] { numeroTransaccion,
                                        "ANT",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,ReferenciaOrdenante,
                                        Identificacion,ReferenciaComprobante,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,ValorComision,NumeroTransaccionEnviar, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_ANTC":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "Z1";

                        ReferenciaComprobante = Codigo;

                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;


                        if (Identificacion.ToString().Length == 10)
                            Identificacion = "C" + Identificacion;
                        else
                            if (Identificacion.Length == 13)
                            Identificacion = "R" + Identificacion;


                        Parametros = new object[] { numeroTransaccion,
                                        "ANT",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,ReferenciaOrdenante,
                                        Identificacion,ReferenciaComprobante,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,ValorComision,NumeroTransaccionEnviar, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_ANTCO":
                    case "REGISTRO_PACIFICO_ANTO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "AN";
                        //si es convenio de pago el servicio es AT
                        if (Auxiliar == "CDP")
                            servicio = "AT";

                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;


                        if (Identificacion.ToString().Length == 10)
                            Identificacion = "C" + Identificacion;
                        else
                            if (Identificacion.Length == 13)
                            Identificacion = "R" + Identificacion;


                        Parametros = new object[] { numeroTransaccion,
                                        "ANT",producto,servicio,"0003",fechaTransaccion,fechaContable,horaTransaccion,canalProceso,
                                        UserWS,PasswordWS,UsuarioCajero,OficinaCPT,
                                        Codigo,ReferenciaOrdenante,Identificacion,ReferenciaComprobante,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,ValorComision,NumeroTransaccionEnviar, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_ANT":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";
                        Parametros = new object[] { numeroTransaccion,
                                        "ANT",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_ANTC":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "Z1";
                        Parametros = new object[] { numeroTransaccion,
                                        "ANT",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_ANTT":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "Z1";
                        Parametros = new object[] { numeroTransaccion,
                                        "ANT",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_ANTCO":
                    case "REVERSO_PACIFICO_ANTON":
                    case "REVERSO_PACIFICO_ANTO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "AN";
                        //si es convenio de pago el servicio es AT
                        if (transaccion == "REVERSO_PACIFICO_ANTCO")
                            servicio = "AT";

                        Parametros = new object[] { numeroTransaccion,
                                        "ANT",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region PPSBONO
                    case "CONSULTA_PACIFICO_PPSBONO":
                        //obtener el xml de plantilla para su remplazo
                        //TipoTransaccion = 0001 significa consulta
                        TipoCodigo = "P";
                        producto = "3";
                        servicio = "SP";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        //codigo = Codigo;



                        if (Codigo.Length == 10)
                            Codigo = "C" + Codigo.ToString();
                        else
                            if (Codigo.Length == 13)
                            Codigo = "R" + Codigo.ToString();


                        Parametros = new object[] { numeroTransaccion,
                                        "PPSBONO",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo,
                                        };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_PPSBONO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "SP";
                        //codigo = Codigo;
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        Parametros = new object[] { numeroTransaccion,
                                        "PPSBONO",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,Identificacion,ReferenciaOrdenante
                                        ,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,strOrdenBanco,strSecuencial,ValorComision,NumeroTransaccionEnviar, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_PPSBONO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "SP";

                        Parametros = new object[] { numeroTransaccion,
                                        "PPSBONO",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region BARCETON

                    case "REGISTRO_RAPIPAGOS_BARCETON":
                        EventLog.WriteEntry("EasySwitch", "plantillaXml:" + plantillaXml + " valor:" + Valor + " OficinaCPT" + OficinaCPT, EventLogEntryType.Information);
                        Parametros = new object[] { Valor, "", "", numeroTransaccion, OficinaCPT };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;

                    #endregion
                    #region UNIVERSIDAD UTPL
                    case "CONSULTA_PACIFICO_UTPL":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "SC";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                                        "UTPL",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo,Auxiliar};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_UTPL":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "SC";

                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        Parametros = new object[] { numeroTransaccion,
                                        "UTPL",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,Identificacion,ReferenciaOrdenante,ReferenciaComprobante,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,"2","001",strDescRubro1,strValorRubro1,"001",strDescRubro2,strValorRubro2,ValorComision,NumeroTransaccionEnviar, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_UTPL":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "SC";
                        Parametros = new object[] { numeroTransaccion,
                                        "UTPL",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region DPRATI
                    case "CONSULTA_PACIFICO_DPRATI":
                        //obtener el xml de plantilla para su remplazo
                        //TipoTransaccion = 0001 significa consulta
                        Auxiliar = "ABF";
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");

                        Parametros = new object[] { numeroTransaccion,
                                        "DEPRATI",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo
                        };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_DPRATI":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";
                        //Codigo = Codigo.PadLeft(10, '0');

                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        Parametros = new object[] {
                                                    numeroTransaccion,
                                                    "DEPRATI",
                                                    producto,
                                                    servicio,
                                                    "0003",
                                                    fechaTransaccion,
                                                    fechaContable,
                                                    horaTransaccion,
                                                    canalProceso,
                                                    UserWS,
                                                    PasswordWS,
                                                    UsuarioCajero,
                                                    OficinaCPT,
                                                    Codigo,
                                                    Identificacion,
                                                    ReferenciaComprobante,
                                                    ReferenciaOrdenante,
                                                    CodigoMoneda,
                                                    Valor,
                                                    FormaPago,
                                                    NumeroCuenta,
                                                    ValorComision,
                                                    NumeroTransaccionEnviar,
                                                    RucCedula, //<-- agregado por luis.lopez(11/07/2014)
                                                    NombreFactura //<-- agregado por luis.lopez(11/07/2014)
                        };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_DPRATI":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";
                        Parametros = new object[] { numeroTransaccion,
                                        "DEPRATI",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region ALEGRO
                    case "REGISTRO_PACIFICO_PINALEGRO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "VP";

                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        ReferenciaComprobante = string.Empty;
                        ReferenciaOrdenante = string.Empty;


                        Parametros = new object[] { numeroTransaccion,
                                        "BROADNET ALE",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo, ReferenciaSecundaria,"",
                                        "",CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,"0", RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_PINALEGRO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "VP";
                        Parametros = new object[] { numeroTransaccion,
                                        "BROADNET ALE",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region PRONACA
                    case "REGISTRO_PACIFICO_PRONACA":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";

                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;


                        Parametros = new object[] { numeroTransaccion,
                                        "PRONACA",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,ReferenciaOrdenante,Codigo,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta, NumeroTransaccionEnviar, ValorComision, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_PRONACA":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";
                        Parametros = new object[] { numeroTransaccion,
                                        "PRONACA",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region AGROCALIDAD (AGENCIA ECUATORIANA DE ASEGURAMIENTO DE LA CALIDAD DEL AGRO)
                    case "REGISTRO_PACIFICO_AGROCALIDAD":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";
                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Ordenante"))
                        {
                            ReferenciaOrdenante = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Ordenante"].ToString().Split('|')[1].ToString();
                            Identificacion = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Ordenante"].ToString().Split('|')[0].ToString();
                            if (Identificacion.ToString().Length == 10)
                                Identificacion = "C" + Identificacion;
                        }
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;


                        Parametros = new object[] { numeroTransaccion,
                                        "AGROCALIDAD",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,ReferenciaOrdenante,Identificacion,strTelefono,Codigo,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta, ValorComision,NumeroTransaccionEnviar, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_AGROCALIDAD":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";
                        Parametros = new object[] { numeroTransaccion,
                                        "AGROCALIDAD",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region SENATEL
                    case "CONSULTA_PACIFICO_SENATEL":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                                        "SENATEL",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_SENATEL":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";

                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;


                        Parametros = new object[] { numeroTransaccion,
                                        "SENATEL",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,strOrdenBanco,strSecuencial,
                                        CodigoMoneda,Valor,FormaPago,NumeroCuenta, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_SENATEL":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";
                        Parametros = new object[] { numeroTransaccion,
                                        "SENATEL",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;

                    #endregion
                    #region UNIVERSIDAD UTN
                    case "CONSULTA_PACIFICO_UTN":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "ZG";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                                        "UTN",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,
                                       TipoCodigo, Codigo};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_UTN":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "ZG";
                        ReferenciaComprobante = Codigo.Substring(0, 10);
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;


                        Parametros = new object[] { numeroTransaccion,
                                        "UTN",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,ReferenciaOrdenante,ReferenciaSecundaria,ReferenciaComprobante,CodigoMoneda
                                        ,Valor,FormaPago,NumeroCuenta, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_UTN":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "ZG";
                        Parametros = new object[] { numeroTransaccion,
                                        "UTN",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region BANCO AMAZONAS

                    case "CONSULTA_PACIFICO_BCOAMAZONAS":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "ZG";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                                        "BCO AMAZONAS",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,
                                        Codigo,TipoCodigo,Identificacion};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_BCOAMAZONAS":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "ZG";
                        ReferenciaComprobante = Codigo.Substring(0, 10);
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;


                        Parametros = new object[] { numeroTransaccion,
                                        "BCO AMAZONAS",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,strOrdenBanco,strSecuencial,CodigoMoneda,
                                        Valor,FormaPago,NumeroCuenta, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_BCOAMAZONAS":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "ZG";
                        Parametros = new object[] { numeroTransaccion,
                                        "BCO AMAZONAS",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;

                    #endregion
                    #region BANCO DMIRO

                    case "CONSULTA_PACIFICO_BCOMIRO":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "ZG";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                                        "BCO D MIRO",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,
                                        Codigo,TipoCodigo,Identificacion};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_BCOMIRO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "ZG";
                        ReferenciaComprobante = Codigo.Substring(0, 10);
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;


                        Parametros = new object[] { numeroTransaccion,
                                        "BCO D MIRO",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,strOrdenBanco,strSecuencial,CodigoMoneda,
                                        Valor,FormaPago,NumeroCuenta, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_BCOMIRO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "ZG";
                        Parametros = new object[] { numeroTransaccion,
                                        "BCO D MIRO",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;

                    #endregion
                    #region MUNICIPIO QUITO ONLINE
                    case "CONSULTA_PACIFICO_MUNIQUITOEL":
                        //obtener el xml de plantilla para su remplazo
                        //TipoTransaccion = 0001 significa consulta
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "MU";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");

                        Parametros = new object[] { numeroTransaccion,
                                        "MUNICIPIOQUI",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo,Auxiliar, ReferenciaOrdenante
                                        };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_MUNIQUITOEL":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "MU";
                        //strCodigo = Codigo.PadLeft(11, '0');
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;

                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Codigo_Tercero"))
                        {
                            strOrdenBanco = "0";
                            strSecuencial = "0";
                        }


                        Parametros = new object[] { numeroTransaccion,
                                        "MUNICIPIOQUI",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,Identificacion,ReferenciaComprobante,ReferenciaOrdenante,CodigoMoneda,
                                        Valor,FormaPago,NumeroCuenta,strOrdenBanco,strSecuencial,ValorComision,NumeroTransaccionEnviar,"4","001",strDescRubro1,"1","001",strDescRubro2,"1","001",strDescRubro3,"1","001",strDescRubro4,"1", RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_MUNIQUITOEL":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "MU";

                        Parametros = new object[] { numeroTransaccion,
                                        "MUNICIPIOQUI",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region TVCABLE EN LINEA
                    case "CONSULTA_PACIFICO_TVCABLEOL":
                        //obtener el xml de plantilla para su remplazo
                        //TipoTransaccion = 0001 significa consulta       

                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "TP";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                                        "TV CABLE",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,TipoCodigo,Codigo
                                        };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_TVCABLEOL":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "TP";
                        strReferenciaComprobante = ReferenciaComprobante;
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        Parametros = new object[] { numeroTransaccion,
                                        Empresa,producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,ReferenciaOrdenante,ReferenciaSecundaria,
                                        ReferenciaComprobante,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,ValorComision,NumeroTransaccionEnviar, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_TVCABLEOL":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "TP";
                        Parametros = new object[] { numeroTransaccion,
                                        "TV CABLE",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region MRLRCM
                    //Recaudación de Servicio del MRL para Consignaciones y Multas, consulta, registro y reverso.
                    //agregado por luis.lopez(11/08/2014).
                    case "CONSULTA_PACIFICO_MRLRCM":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "MA"; //Consignaciones/Multas                        
                        numeroTransaccion = DateTime.Now.ToString("HHmmss");
                        Parametros = new object[] {
                                                    numeroTransaccion,
                                                    "MIN LABORALE",
                                                    producto,
                                                    servicio,
                                                    "0001",
                                                    fechaTransaccion,
                                                    fechaContable,
                                                    horaTransaccion,
                                                    canalProceso,
                                                    UserWS,
                                                    PasswordWS,
                                                    UsuarioCajero,
                                                    OficinaCPT,
                                                    TipoCodigo, //Es "P"
                                                    Identificacion, //Toma del Campo NumeroId_Cliente
                                                    Codigo //Toma del Campo ContraPartida
                                                  };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_MRLRCM":
                        producto = "4";
                        servicio = "MA"; //Consignaciones/Multas
                        numeroTransaccion = DateTime.Now.ToString("HHmmss");

                        Parametros = new object[] {
                                                    numeroTransaccion,
                                                    "MIN LABORALE",
                                                    producto,
                                                    servicio,
                                                    "0003",
                                                    fechaTransaccion,
                                                    fechaContable,
                                                    horaTransaccion,
                                                    canalProceso,
                                                    UserWS,
                                                    PasswordWS,
                                                    UsuarioCajero,
                                                    OficinaCPT,
                                                    Codigo,
                                                    ReferenciaOrdenante,
                                                    ReferenciaSecundaria,
                                                    CodigoMoneda,
                                                    Valor,
                                                    FormaPago,
                                                    NumeroCuenta,
                                                    NumeroTransaccionComision,
                                                    04,
                                                    "001",
                                                    strNombresEmpleado,
                                                    1,
                                                    "002",
                                                    strConcepto,
                                                    1,
                                                    "003",
                                                    "VSUBT",
                                                    valorSubTotal,
                                                    "004",
                                                    "VINTER",
                                                    valorInteres, RucCedula,NombreFactura
                                                  };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_MRLRCM":
                        //obtener el xml de plantilla para su remplazo
                        producto = "4";
                        servicio = "MA"; //Consignacion/Multas

                        Parametros = new object[] {
                                                    numeroTransaccion,
                                                    "MIN LABORALE",
                                                    producto,
                                                    servicio,
                                                    "0005",
                                                    fechaTransaccion,
                                                    fechaContable,
                                                    horaTransaccion,
                                                    canalProceso,
                                                    UserWS,
                                                    PasswordWS,
                                                    UsuarioCajero,
                                                    OficinaCPT,
                                                    NumeroTransaccionReversar,
                                                    Motivo,
                                                    NumeroTransaccionComision
                                                  };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region MRL
                    //Recaudación de Servicio del MRL para Compra de Pines (Especies Valoradas) para el registro y reverso.
                    //agregado por luis.lopez(12/08/2014).
                    case "REGISTRO_PACIFICO_MRLREV":
                        producto = "4";
                        servicio = "MB"; //Compra de Pines (Especies Valoradas)
                        numeroTransaccion = DateTime.Now.ToString("HHmmss");
                        string srtCodDoc = string.Empty;
                        string srtCodTipoPin = string.Empty;
                        string[] lstCodigos;
                        lstCodigos = Codigo.Split('|');
                        srtCodDoc = lstCodigos[0].ToString();
                        srtCodTipoPin = lstCodigos[1].ToString();
                        Parametros = new object[] {
                                                    numeroTransaccion,
                                                    "MIN LABORALE",
                                                    producto,
                                                    servicio,
                                                    "0003",
                                                    fechaTransaccion,
                                                    fechaContable,
                                                    horaTransaccion,
                                                    canalProceso,
                                                    UserWS,
                                                    PasswordWS,
                                                    UsuarioCajero,
                                                    OficinaCPT,
                                                    srtCodDoc, //Como Código
                                                    srtCodTipoPin, //Como ReferenciaComprobante
                                                    CodigoMoneda,
                                                    Valor,
                                                    FormaPago,
                                                    NumeroCuenta, RucCedula,NombreFactura
                                                  };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_MRLREV":
                        //obtener el xml de plantilla para su remplazo
                        producto = "4";
                        servicio = "MB"; //Compra de Pines (Especies Valoradas)

                        Parametros = new object[] {
                                                    numeroTransaccion,
                                                    "MIN LABORALE",
                                                    producto,
                                                    servicio,
                                                    "0005",
                                                    fechaTransaccion,
                                                    fechaContable,
                                                    horaTransaccion,
                                                    canalProceso,
                                                    UserWS,
                                                    PasswordWS,
                                                    UsuarioCajero,
                                                    OficinaCPT,
                                                    NumeroTransaccionReversar,
                                                    Motivo,
                                                    NumeroTransaccionComision
                                                  };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region AMT (AGENCIA METROPOLITANA DE TRÁNSITO)
                    case "CONSULTA_PACIFICO_AMT":
                        //obtener el xml de plantilla para su remplazo
                        //TipoTransaccion = 0001 significa consulta
                        //Auxiliar = "ABF";
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "AN";
                        //System.Diagnostics.EventLog.WriteEntry("easysoft", "Antes del codigo- Codigo=" + Codigo);
                        //Codigo = Codigo.Substring(0, 2) + "   " + Codigo.Substring(2, 7).PadLeft(10, '0');
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                                        "METROPRO TRA",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,Codigo,TipoCodigo,
                                        Auxiliar };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;

                    case "REVERSO_PACIFICO_AMT":
                        //EventLog.WriteEntry("easysoft", "Reverso plantillaXml=" + plantillaXml);
                        //EventLog.WriteEntry("easysoft", "Reverso numeroTransaccion=" + numeroTransaccion + "==>NumeroTransaccionReversar=" + NumeroTransaccionReversar + "==>Motivo=" + Motivo + "==>NumeroTransaccionComision=" + NumeroTransaccionComision);
                        ////obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "AN";
                        Parametros = new object[] { numeroTransaccion,
                                        "METROPRO TRA",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        //EventLog.WriteEntry("easysoft", "Reverso strResultado=" + strResultado);
                        break;

                    case "REGISTRO_PACIFICO_AMT":
                        IdentificacionFactura = Identificacion;
                        //Falta obtener estos valores que devuelve la consulta

                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "AN";
                        //Codigo = Codigo.PadLeft(10, '0');
                        //Codigo = Codigo.Substring(0, 2) + "   " + Codigo.Substring(2, 7).PadLeft(10, '0');
                        string strReferenciaComprobanteAMT = ReferenciaComprobante + Identificacion + "    ";
                        //EventLog.WriteEntry("easysoft", "strReferenciaComprobanteAMT=" + strReferenciaComprobanteAMT);
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        Parametros = new object[] { numeroTransaccion,
                                        "METROPRO TRA",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,Identificacion,strReferenciaComprobanteAMT,
                                        ReferenciaOrdenante,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,strOrdenBanco,strSecuencial,ValorComision,NumeroTransaccionEnviar,ReferenciaSecundaria,IdentificacionFactura,RucCedula,NombreFactura};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;



                    #endregion
                    #region GOBIERNO TUNGURAHUA
                    case "REGISTRO_PACIFICO_GOBTUNGURAHU":
                        IdentificacionFactura = Identificacion;
                        //Falta obtener estos valores que devuelve la consulta

                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "ZF";
                        //NombreFactura = ReferenciaOrdenante;


                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else

                            NumeroTransaccionEnviar = 0;

                        // EventLog.WriteEntry("EasySwitch", "Gobtungu ReferenciaSecundaria=" + ReferenciaSecundaria);
                        var codigoGob = Codigo.PadRight(15) + ReferenciaSecundaria.PadRight(8);

                        EventLog.WriteEntry("EasySwitch", "Gobtungu codigoGob=" + codigoGob);
                        EventLog.WriteEntry("EasySwitch", "Gobtungu codigoGob=" + strTelefono);
                        int CantRubros = 1;


                        Parametros = new object[] { numeroTransaccion,
                                        "GOBTUNGURAHU",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,codigoGob,Identificacion,ReferenciaComprobante,
                                        ReferenciaOrdenante,CodigoMoneda,Valor,ValorComision,FormaPago,
                                        NumeroCuenta,NumeroTransaccionEnviar,IdentificacionFactura,NombreFactura,CantRubros,strTelefono};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;

                    case "REVERSO_PACIFICO_GOBTUNGURAHU":
                        //EventLog.WriteEntry("easysoft", "Reverso plantillaXml=" + plantillaXml);
                        //EventLog.WriteEntry("easysoft", "Reverso numeroTransaccion=" + numeroTransaccion + "==>NumeroTransaccionReversar=" + NumeroTransaccionReversar + "==>Motivo=" + Motivo + "==>NumeroTransaccionComision=" + NumeroTransaccionComision);
                        ////obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "ZF";
                        Parametros = new object[] { numeroTransaccion,
                                        "GOBTUNGURAHU",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region SEGSCURE
                    case "REGISTRO_PACIFICO_SEGSUCRE":
                        IdentificacionFactura = Identificacion;
                        //Falta obtener estos valores que devuelve la consulta
                        //ReferenciaComprobante = ReferenciaComprobante;
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "SO";
                        //Codigo = Codigo.PadLeft(10, '0');
                        //Codigo = Codigo.Substring(0, 2) + "   " + Codigo.Substring(2, 7).PadLeft(10, '0');
                        //string strReferenciaComprobanteSS = ReferenciaComprobante + Identificacion + "    ";
                        //EventLog.WriteEntry("easysoft", "strReferenciaComprobanteAMT=" + strReferenciaComprobanteAMT);
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        Parametros = new object[] { numeroTransaccion,
                                        "SEG SUCRE",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,Identificacion,ReferenciaOrdenante,
                                        CodigoMoneda,ReferenciaComprobante,Valor,FormaPago,
                                        NumeroCuenta,IdentificacionFactura,RucCedula,NombreFactura};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_SEGSUCRE":
                        //EventLog.WriteEntry("easysoft", "Reverso plantillaXml=" + plantillaXml);
                        //EventLog.WriteEntry("easysoft", "Reverso numeroTransaccion=" + numeroTransaccion + "==>NumeroTransaccionReversar=" + NumeroTransaccionReversar + "==>Motivo=" + Motivo + "==>NumeroTransaccionComision=" + NumeroTransaccionComision);
                        ////obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "SO";
                        Parametros = new object[] { numeroTransaccion,
                                        "SEG SUCRE",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo };
                        strResultado = String.Format(plantillaXml, Parametros);
                        //EventLog.WriteEntry("easysoft", "Reverso strResultado=" + strResultado);
                        break;
                    //
                    #endregion
                    #region ALIANZA PAIS
                    case "REGISTRO_PACIFICO_ALIANZAPAIS":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";

                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        //string strEmpresa =  "ALAINZ"
                        Parametros = new object[] { numeroTransaccion,
                                        ReferenciaSecundaria,producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,ReferenciaOrdenante,
                                        CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;

                    case "REVERSO_PACIFICO_ALIANZAPAIS":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";
                        Parametros = new object[] { numeroTransaccion,
                                        ReferenciaSecundaria,producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region REGISTRO CIVIL                     
                    case "REGISTRO_PACIFICO_RCIC":
                     
                        IdentificacionFactura = Identificacion;
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                  
                        Parametros = new object[] { numeroTransaccion,
                           
                            fechaTransaccion,fechaContable,horaTransaccion,
                            UserWS,PasswordWS,UsuarioCajero,OficinaCPT,
                            Identificacion,ReferenciaOrdenante,
                            //CodigoMoneda,
                            Valor,
                            ValorComision,
                            NumeroTransaccionEnviar,//Ver valor
                            NumeroCuenta,IdentificacionFactura,NombreFactura,CodigoAdicional};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;

                    case "REVERSO_PACIFICO_RCIC":
                        //obtener el xml de plantilla para su remplazo
                        //TipoCodigo = "P";
                        //producto = "4";
                        //servicio = "OC";
                        Parametros = new object[] { numeroTransaccion,
                            //ReferenciaSecundaria,producto,servicio,"0005",
                            fechaTransaccion,
                                        fechaContable,
                            horaTransaccion,//canalProceso,
                            UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        NumeroTransaccionComision,
                                        Motivo };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region JUDICATURA EMPRESAS
                    case "CONSULTA_PACIFICO_JUDICATURAEMP":
                        //obtener el xml de plantilla para su remplazo
                        //TipoTransaccion = 0001 significa consulta
                        //Auxiliar = "ABF";
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "PF";
                        //System.Diagnostics.EventLog.WriteEntry("easysoft", "Antes del codigo- Codigo=" + Codigo);
                        //Codigo = Codigo.Substring(0, 2) + "   " + Codigo.Substring(2, 7).PadLeft(10, '0');
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        CodigoAdicional = "605000" + CodigoAdicional;
                        Parametros = new object[] { numeroTransaccion,
                                        "JUDICATURA",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,TipoCodigo,Identificacion,Codigo,CodigoAdicional
                                        };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_JUDICATURAEMP":
                        IdentificacionFactura = Identificacion;
                        //Falta obtener estos valores que devuelve la consulta

                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "PF";

                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        Parametros = new object[] { numeroTransaccion,
                                        "JUDICATURA",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,Identificacion,
                                        ReferenciaOrdenante,ReferenciaComprobante,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,ValorComision,NumeroTransaccionEnviar,IdentificacionFactura,NombreFactura};
                        //EventLog.WriteEntry("easysoft", "plantillaXml=" + plantillaXml + "==>ReferenciaComprobante=" + ReferenciaComprobante);
                        strResultado = String.Format(plantillaXml, Parametros);

                        break;
                    case "REVERSO_PACIFICO_JUDICATURAEMP":
                        //EventLog.WriteEntry("easysoft", "Reverso plantillaXml=" + plantillaXml);
                        //EventLog.WriteEntry("easysoft", "Reverso numeroTransaccion=" + numeroTransaccion + "==>NumeroTransaccionReversar=" + NumeroTransaccionReversar + "==>Motivo=" + Motivo + "==>NumeroTransaccionComision=" + NumeroTransaccionComision);
                        ////obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "PF";
                        Parametros = new object[] { numeroTransaccion,
                                        "JUDICATURA",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        //EventLog.WriteEntry("easysoft", "Reverso strResultado=" + strResultado);
                        break;
                    #endregion
                    #region JUDICATURA PERSONAS
                    case "CONSULTA_PACIFICO_JUDICATURAPER":
                        //obtener el xml de plantilla para su remplazo
                        //TipoTransaccion = 0001 significa consulta
                        //Auxiliar = "ABF";
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "PF";
                        //System.Diagnostics.EventLog.WriteEntry("easysoft", "Antes del codigo- Codigo=" + Codigo);
                        //Codigo = Codigo.Substring(0, 2) + "   " + Codigo.Substring(2, 7).PadLeft(10, '0');
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        //CodigoAdicional = "605000" + CodigoAdicional;
                        Parametros = new object[] { numeroTransaccion,
                                        "JUDICATURA",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,TipoCodigo,Identificacion,Codigo,CodigoAdicional,
                                        Auxiliar};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_JUDICATURAPER":
                        IdentificacionFactura = Identificacion;
                        //Falta obtener estos valores que devuelve la consulta

                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "PF";

                        string[] AuxRefJudPer = null;
                        string referenciaAuxJudPer = string.Empty;
                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Codigo_Tercero"))
                        {
                            referenciaAuxJudPer = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Codigo_Tercero"].ToString();
                        }

                        traceInformation = traceInformation + " Dentro REGISTRO_PACIFICO_JUDICATURAPER Codigo_Tercero = " + referenciaAuxJudPer;
                        EventLog.WriteEntry("EasySwitch", string.Format("AuxiliarJudicatura={0} - Codigo={1}  -  ReferenciaOrdenante={2}  -  ReferenciaComprobante={3} - nombre={4}  - codigoJudicatura={5}  - CodigoTercero={6}",
                            AuxiliarJudicatura, Codigo, ReferenciaOrdenante, ReferenciaComprobante, Nombre, codigoJudicatura, referenciaAuxJudPer));
                        string descripcion1 = AuxiliarJudicatura.Split('|')[0];
                        string descripcion2 = AuxiliarJudicatura.Split('|')[1];
                        string descripcion3 = codigoJudicatura.Split('|')[1] + codigoJudicatura.Split('|')[2] + Nombre;


                        //2015 APR - 2016 JUL!
                        //8!
                        //ACUERDO - PENSIÓN--!
                        //2015 APR - 2016 JUL | 8 | ACUERDO | PENSIÓN
                        //!
                        //!
                        if (referenciaAuxJudPer.Contains("!"))
                        {
                            AuxRefJudPer = referenciaAuxJudPer.Split(new Char[] { '!' });
                        }
                        else
                        {
                            AuxRefJudPer = new string[2];
                            AuxRefJudPer[0] = referenciaAuxJudPer;
                            AuxRefJudPer[1] = referenciaAuxJudPer;
                            AuxRefJudPer[2] = referenciaAuxJudPer;
                            AuxRefJudPer[3] = referenciaAuxJudPer;
                            AuxRefJudPer[4] = referenciaAuxJudPer;
                            AuxRefJudPer[5] = referenciaAuxJudPer;
                        }

                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        Parametros = new object[] { numeroTransaccion,
                                        "JUDICATURA",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo.Replace("-","|"),Identificacion,
                                        ReferenciaOrdenante,ReferenciaComprobante, Valor,
                                        NumeroCuenta,ValorComision,NumeroTransaccionEnviar,IdentificacionFactura,NombreFactura,
                                        descripcion1,descripcion2,descripcion3,AuxRefJudPer[3].ToString(),AuxRefJudPer[4].ToString(),AuxRefJudPer[5].ToString()};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_JUDICATURAPER":
                        //EventLog.WriteEntry("easysoft", "Reverso plantillaXml=" + plantillaXml);
                        //EventLog.WriteEntry("easysoft", "Reverso numeroTransaccion=" + numeroTransaccion + "==>NumeroTransaccionReversar=" + NumeroTransaccionReversar + "==>Motivo=" + Motivo + "==>NumeroTransaccionComision=" + NumeroTransaccionComision);
                        ////obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "PF";
                        Parametros = new object[] { numeroTransaccion,
                                        "JUDICATURA",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        //EventLog.WriteEntry("easysoft", "Reverso strResultado=" + strResultado);
                        break;
                    #endregion
                    #region ARCOTEL (AGENCIA DE REGULACIÓN Y CONTROL DE LAS TELECOMUNICACIONES)
                    case "CONSULTA_PACIFICO_ARCOTEL":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "ZG";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                                        "ARCOTEL",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,
                                        Codigo,TipoCodigo,Identificacion };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_ARCOTEL":
                        traceInformation = "Dentro REGISTRO_PACIFICO_ARCOTEL";
                        producto = "4";
                        servicio = "ZG";
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        traceInformation = traceInformation + " Dentro REGISTRO_PACIFICO_ARCOTEL NumeroTransaccionEnviar=" + NumeroTransaccionEnviar;
                        string[] AuxCod = null;
                        string[] AuxRef = null;
                        string codArcotel = string.Empty;
                        traceInformation = traceInformation + " Dentro REGISTRO_PACIFICO_ARCOTEL Codigo=" + Codigo;
                        if (Codigo.Contains("!"))
                        {
                            AuxCod = Codigo.Split(new Char[] { '!' });
                            codArcotel = AuxCod[0];
                        }
                        else
                            codArcotel = Codigo;
                        traceInformation = traceInformation + "Dentro REGISTRO_PACIFICO_ARCOTEL ReferenciaComprobante=" + ReferenciaComprobante + "  codArcotel=" + codArcotel;
                        if (ReferenciaComprobante.Contains("!"))
                            AuxRef = ReferenciaComprobante.Split(new Char[] { '!' });
                        else
                            AuxRef[0] = ReferenciaComprobante;
                        traceInformation = traceInformation + " Dentro REGISTRO_PACIFICO_ARCOTEL Identificacion=" + Identificacion;
                        traceInformation = traceInformation + " Dentro REGISTRO_PACIFICO_ARCOTEL RucCedula=" + RucCedula;
                        traceInformation = traceInformation + " Dentro REGISTRO_PACIFICO_ARCOTEL NombreFactura=" + NombreFactura;
                        Parametros = new object[] { numeroTransaccion,
                                        "ARCOTEL",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,
                                        //AuxCod[0].ToString() ,Identificacion,AuxRef[0].ToString(),ReferenciaOrdenante,
                                        codArcotel ,Identificacion,AuxRef[0].ToString(),ReferenciaOrdenante,

                                        CodigoMoneda,Valor,FormaPago,NumeroCuenta,ValorComision,NumeroTransaccionEnviar,RucCedula, NombreFactura};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_ARCOTEL":
                        producto = "4";
                        servicio = "ZG";
                        Parametros = new object[] { numeroTransaccion,
                                        "ARCOTEL",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region ARCSA (AGENCIA DE REGULACIÓN, CONTROL Y VIGILANCIA SANITARIA)
                    case "CONSULTA_PACIFICO_ARCSA":
                        //TipoCodigo = "P";
                        //producto = "4";
                        //servicio = "ZG";

                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                                        fechaTransaccion,
                                        fechaContable,horaTransaccion,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,
                                        Codigo,ReferenciaSecundaria };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_ARCSA":
                        // EventLog.WriteEntry("easysoft", "REGISTRO_PACIFICO_ARCSA");
                        //producto = "4";
                        //servicio = "ZG";
                        var linea = ReferenciaSecundaria.Substring(0, 3);
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        Parametros = new object[] { numeroTransaccion,
                                        fechaTransaccion,
                                        fechaContable,horaTransaccion,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,Codigo,Identificacion,ReferenciaOrdenante,
                                        CodigoMoneda,Valor,ValorComision,
                                        FormaPago,NumeroCuenta,NumeroTransaccionEnviar,RucCedula, NombreFactura,linea};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_ARCSA":
                        producto = "4";
                        servicio = "OC";
                        Parametros = new object[] { numeroTransaccion,
                                        "ARCSA",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region COLEGIOSOCP_StaCatalina
                    case "REGISTRO_PACIFICO_STACATALINA":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "SC";
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        Parametros = new object[] { numeroTransaccion,
                                        "COLEGIOS-OCP",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,
                                        ReferenciaSecundaria,ReferenciaOrdenante,
                                        Codigo,CodigoMoneda,Valor,FormaPago,NumeroCuenta};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_STACATALINA":
                        producto = "4";
                        servicio = "SC";
                        Parametros = new object[] { numeroTransaccion,
                                        "COLEGIOS-OCP",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region EMAPA OTAVALO
                    case "CONSULTA_PACIFICO_EMAPOTAV":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "AU";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                                        "EMAPA OTAVAL",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,
                                        TipoCodigo,Codigo,ReferenciaOrdenante };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_EMAPOTAV":
                        producto = "4";
                        servicio = "AU";
                        AuxRef = null;

                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;

                        traceInformation = traceInformation + " Dentro REGISTRO_PACIFICO_EMAPOTAV ReferenciaComprobante=" + ReferenciaComprobante;
                        if (ReferenciaComprobante.Contains("!"))
                        {
                            traceInformation = traceInformation + " Dentro REGISTRO_PACIFICO_EMAPOTAV ReferenciaComprobante Contiene !";
                            AuxRef = ReferenciaComprobante.Split(new Char[] { '!' });
                        }
                        else
                        {
                            traceInformation = traceInformation + " Dentro REGISTRO_PACIFICO_EMAPOTAV ReferenciaComprobante NO Contiene !";
                            AuxRef = new string[1];
                            AuxRef[0] = ReferenciaComprobante;
                        }
                        traceInformation = traceInformation + " Dentro REGISTRO_PACIFICO_EMAPOTAV despues  de AuxRef=" + AuxRef[0].ToString();
                        Parametros = new object[] { numeroTransaccion,
                                        "EMAPA OTAVAL",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,
                                        Codigo,Identificacion,ReferenciaOrdenante,AuxRef[0].ToString(),
                                        CodigoMoneda,Valor,FormaPago,NumeroCuenta,ValorComision,
                                        NumeroTransaccionEnviar,AuxiliarJudicatura, RucCedula, NombreFactura};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_EMAPOTAV":
                        producto = "4";
                        servicio = "AU";
                        Parametros = new object[] { numeroTransaccion,
                                        "EMAPA OTAVAL",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region CNTVT (VENTA TIEMPO AIRE FIJO O MÓVIL)
                    case "REGISTRO_PACIFICO_CNTVTA":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "VT";
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        Parametros = new object[] { numeroTransaccion,
                                        "CNT",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,
                                        Identificacion,Codigo,ReferenciaOrdenante,Auxiliar,
                                        CodigoMoneda,Valor,FormaPago,NumeroCuenta,"1",AuxiliarJudicatura};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_CNTVTA":
                        producto = "4";
                        servicio = "VT";
                        Parametros = new object[] { numeroTransaccion,
                                        "CNT",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,Motivo };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region EMOV (EMPRESA DE MOVILIDAD, TRÁNSITO Y TRASPORTE)
                    case "REGISTRO_PACIFICO_EMOV":
                        producto = "4";
                        servicio = AuxiliarJudicatura;

                        if (bolTieneComision)
                            NumeroTransaccionComision += Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionComision = "0";

                        string tipoComprobante = string.Empty;
                        string ordenante = string.Empty;
                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("NombreContrapartida"))
                        {
                            ordenante = dsEntrada.Tables["DatosTransaccion"].Rows[0]["NombreContrapartida"].ToString().Split('|')[2];
                        }
                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia_Adicional"))
                        {
                            tipoComprobante = (string)dsEntrada.Tables["DatosTransaccion"].Rows[0]["Referencia_Adicional"];
                        }
                        Parametros = new object[] { numeroTransaccion,
                                        "EMOV EP",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,
                                        Codigo,ordenante,Identificacion,tipoComprobante,CodigoMoneda,Valor,
                                        ValorComision,FormaPago,NumeroCuenta,NumeroTransaccionComision,RucCedula,NombreFactura};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_EMOV":
                        producto = "4";
                        servicio = "OC";
                        Parametros = new object[] { numeroTransaccion,
                                        "EMOV EP",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region IEPI (INSTITUTO ECUATORINO DE LA PROPIEDAD INTELECTUAL)
                    case "CONSULTA_PACIFICO_IEPI":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "ZG";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                                        "SENADI",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,
                                        RefernciaNumero_Documento,TipoCodigo };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_IEPI":
                        producto = "4";
                        servicio = "ZG";

                        if (bolTieneComision)
                            NumeroTransaccionComision += Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionComision = "0";

                        if (string.IsNullOrEmpty(RefernciaNumero_Documento))
                            RefernciaNumero_Documento = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Referencia_Adicional"].ToString();

                        Parametros = new object[] { numeroTransaccion,
                                        "SENADI",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,
                                        RefernciaNumero_Documento,Identificacion,ReferenciaComprobante,CodigoMoneda,
                                        Valor,FormaPago,NumeroCuenta,ValorComision,NumeroTransaccionComision,RucCedula,NombreFactura};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_IEPI":
                        producto = "4";
                        servicio = "ZG";
                        Parametros = new object[] { numeroTransaccion,
                                        "SENADI",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region MINISTERIO DEL INTERIOR
                    #region RECAUDACION CON INFORMACIÓN
                    case "CONSULTA_PACIFICO_MININTERCD":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "ZG";
                        Random random = new Random();
                        numeroTransaccion = Convert.ToString(random.Next(1000000, 9999999));
                        Parametros = new object[] { numeroTransaccion,
                                        "MIN GOBIERNO",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,
                                        TipoCodigo,Codigo };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_MININTERCD":
                        producto = "4";
                        servicio = "ZG";
                        CantidadRubros = "1";
                        if (bolTieneComision)
                            NumeroTransaccionComision += Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionComision = "0";
                        Parametros = new object[] { numeroTransaccion,
                                        "MIN GOBIERNO",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,
                                        Codigo,Identificacion,ReferenciaOrdenante,
                                        Codigo,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,ValorComision,NumeroTransaccionComision,
                                        RucCedula,NombreFactura,AuxiliarJudicatura,CantidadRubros};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_MININTERCD":
                        producto = "4";
                        servicio = "ZG";
                        Parametros = new object[] { numeroTransaccion,
                                        "MIN GOBIERNO",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region RECAUDACION SIN INFORMACIÓN
                    case "REGISTRO_PACIFICO_MININTERSD":
                        producto = "4";
                        servicio = "ZF";
                        string referenciaAdicional = string.Empty;
                        traceInformation = traceInformation + " Dentro REGISTRO_PACIFICO_MININTERSD Antes referenciaAdicional=" + referenciaAdicional + " Codigo=" + Codigo;

                        if (dsEntrada.Tables.Contains("ComboDescripcion"))
                        {
                            if (dsEntrada.Tables["ComboDescripcion"].Columns.Contains("ContraPartida"))
                            {
                                referenciaAdicional = dsEntrada.Tables["ComboDescripcion"].Rows[0]["ContraPartida"].ToString();
                            }
                            if (dsEntrada.Tables["ComboDescripcion"].Columns.Contains("Referencia"))
                            {
                                AuxiliarJudicatura = (string)dsEntrada.Tables["ComboDescripcion"].Rows[0]["Referencia"];
                            }
                        }
                        else
                        {
                            DataSet dsCatalogo = new DataSet();
                            dsCatalogo = adm.ObtenerTablas("'MININTERIOR'", string.Empty);
                            DataTable dtCatalogo = dsCatalogo.Tables["Tablas"];
                            if (dtCatalogo.Rows.Count > 0)
                            {
                                string expression = "TABLAArgumento =" + Codigo;
                                DataRow[] selectedRows = dtCatalogo.Select(expression);
                                referenciaAdicional = selectedRows[0]["TABLADescripcion"].ToString();
                            }
                            dsCatalogo = null;
                            dsCatalogo = adm.ObtenerTablas("'CNEPROVINCIAS'", string.Empty);
                            dtCatalogo = dsCatalogo.Tables["Tablas"];
                            if (dtCatalogo.Rows.Count > 0)
                            {
                                string expression = "TABLAArgumento =" + AuxiliarJudicatura;
                                DataRow[] selectedRows = dtCatalogo.Select(expression);
                                AuxiliarJudicatura = selectedRows[0]["TABLADescripcion"].ToString();
                            }
                        }
                        traceInformation = traceInformation + " Dentro REGISTRO_PACIFICO_MININTERSD DEspues referenciaAdicional=" + referenciaAdicional + " Codigo=" + Codigo;

                        Codigo = Codigo + " - " + referenciaAdicional;
                        if (Codigo.Length > 25)
                        {
                            Codigo = Codigo.ToString().Substring(0, 24);
                        }
                        if (string.IsNullOrEmpty(NumeroTransaccionComision))
                        {
                            if (bolTieneComision)
                                NumeroTransaccionComision += Convert.ToInt64(AuxNumTrx);
                            else
                                NumeroTransaccionComision = "0";
                        }
                        if (!string.IsNullOrEmpty(AuxiliarJudicatura))
                        {
                            if (AuxiliarJudicatura.Length > 15)
                                AuxiliarJudicatura = AuxiliarJudicatura.Substring(0, 15);
                        }
                        Parametros = new object[] { numeroTransaccion,
                                        "MIN GOBIERNO",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,
                                        Codigo,Identificacion,ReferenciaOrdenante,CodigoMoneda,Valor,
                                        ValorComision,NumeroTransaccionComision, //Para version produccion comentar esta y dejar forma pago
                                        FormaPago,
                                        //NumeroCuenta,"0",AuxiliarJudicatura};  //Para version produccion comentar esta linea y descomentar la siguiente
                                        //2019-09-26 se cambio x soliictud de paola gomez
                                        //AuxiliarJudicatura
                                        //NumeroCuenta,"0",ValorComision,NumeroTransaccionComision,RucCedula,NombreFactura };
                                        NumeroCuenta,"0",AuxiliarJudicatura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_MININTERSD":
                        producto = "4";
                        servicio = "ZF";
                        Parametros = new object[] { numeroTransaccion,
                                        "MIN GOBIERNO",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #endregion
                    #region MUNICIPIO OTAVALO
                    case "CONSULTA_PACIFICO_MUNIOTAVALO":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "OC";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                                        "MUNICIPIOOTA",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,
                                        TipoCodigo,Codigo,Auxiliar };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_MUNIOTAVALO":
                        producto = "4";
                        servicio = "OC";
                        AuxCod = null;
                        AuxRef = null;
                        string referenciaAuxMO = string.Empty;

                        traceInformation = traceInformation + " Dentro REGISTRO_PACIFICO_MUNIOTAVALO ReferenciaComprobante =" + ReferenciaComprobante;

                        if (ReferenciaComprobante.Contains("!"))
                        {
                            AuxRef = ReferenciaComprobante.Split(new Char[] { '!' });
                            referenciaAuxMO = AuxRef[2].ToString() + AuxRef[3].ToString();
                        }
                        else
                        {
                            AuxRef = new string[1];
                            AuxRef[0] = ReferenciaComprobante;
                            AuxRef[1] = ReferenciaComprobante;
                            referenciaAuxMO = ReferenciaComprobante;
                        }
                        traceInformation = traceInformation + " Dentro REGISTRO_PACIFICO_MUNIOTAVALO Codigo = " + Codigo;

                        if (Codigo.Contains("!"))
                        {
                            AuxCod = Codigo.Split(new Char[] { '!' });
                            referenciaAuxMO = referenciaAuxMO + AuxCod[2].ToString();
                        }
                        else
                        {
                            AuxCod = new string[1];
                            AuxCod[0] = Codigo;
                            referenciaAuxMO = referenciaAuxMO + Codigo;
                        }

                        Parametros = new object[] { numeroTransaccion,
                                        "MUNICIPIOOTA",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,
                                        AuxCod[0].ToString(),Identificacion,ReferenciaOrdenante,referenciaAuxMO,
                                        CodigoMoneda,Valor,FormaPago,NumeroCuenta,ValorComision,
                                        NumeroTransaccionComision,AuxRef[1].ToString(),RucCedula, NombreFactura};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_MUNIOTAVALO":
                        producto = "4";
                        servicio = "OC";
                        Parametros = new object[] { numeroTransaccion,
                                        "MUNICIPIOOTA",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region SRI-Ajustes
                    case "CONSULTA_PACIFICO_SRIAJUSTES":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "AI";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");

                        if (Identificacion.ToString().Length == 10)
                            Identificacion = "C" + Identificacion;
                        else
                            if (Identificacion.Length == 13)
                            Identificacion = "R" + Identificacion;
                        Parametros = new object[] { numeroTransaccion,
                                        "SRI",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,
                                        TipoCodigo, Identificacion,Codigo};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_SRIAJUSTES":
                        producto = "4";
                        servicio = "AI";
                        if (bolTieneComision)
                            NumeroTransaccionComision += Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionComision = "0";

                        string[] AuxSriAjuste = null;
                        string codSriAjuste = string.Empty;
                        string refSri = string.Empty;
                        traceInformation = traceInformation + " Dentro REGISTRO_PACIFICO_SRIAJUSTES ReferenciaComprobante=" + ReferenciaOrdenante;
                        if (ReferenciaOrdenante.Contains("!"))
                        {
                            AuxSriAjuste = ReferenciaOrdenante.Split(new Char[] { '!' });
                            codSriAjuste = AuxSriAjuste[2];
                            refSri = AuxSriAjuste[0];
                        }
                        else
                        {
                            codSriAjuste = ReferenciaOrdenante;
                            refSri = ReferenciaOrdenante;
                        }


                        Parametros = new object[] { numeroTransaccion,
                                        "SRI",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,
                                        Codigo,Identificacion,refSri,codSriAjuste,
                                        CodigoMoneda,Valor,FormaPago,NumeroCuenta,ValorComision,NumeroTransaccionComision,RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_SRIAJUSTES":
                        producto = "4";
                        servicio = "AI";
                        Parametros = new object[] { numeroTransaccion,
                                        "SRI",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region YANBAL
                    case "CONSULTA_PACIFICO_YANBAL":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "ZG";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                                        "YANBAL",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,
                                        TipoCodigo,Auxiliar,Codigo };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_YANBAL":
                        producto = "4";
                        servicio = "ZG";
                        if (bolTieneComision)
                            NumeroTransaccionComision += Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionComision = "0";

                        Parametros = new object[] { numeroTransaccion,
                                        "YANBAL",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,
                                        Codigo,Identificacion,Auxiliar,ReferenciaOrdenante,
                                        CodigoMoneda,Valor,FormaPago,NumeroCuenta,ValorComision,
                                        NumeroTransaccionComision,RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_YANBAL":
                        producto = "4";
                        servicio = "ZG";
                        Parametros = new object[] { numeroTransaccion,
                                        "YANBAL",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region CISNERGIA
                    case "CONSULTA_PACIFICO_CISNERGIA":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "LV";
                        EventLog.WriteEntry("EasySwitch", string.Format("1. CONSULTA_PACIFICO_CISNERGIA Codigo={0} -  numeroTransaccion={1}", Codigo, numeroTransaccion));
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        EventLog.WriteEntry("EasySwitch", string.Format("2. CONSULTA_PACIFICO_CISNERGIA Codigo={0} -  numeroTransaccion={1}", Codigo, numeroTransaccion));
                        Parametros = new object[] { numeroTransaccion,
                                        "CISNERGIA",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,
                                        TipoCodigo,Codigo };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_CISNERGIA":
                        producto = "4";
                        servicio = "LV";
                        if (bolTieneComision)
                            NumeroTransaccionComision += Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionComision = "0";

                        string[] AuxCisnergia = null;
                        string codCisnergia = string.Empty;
                        traceInformation = traceInformation + " Dentro REGISTRO_PACIFICO_CISNERGIA ReferenciaComprobante=" + ReferenciaComprobante;
                        if (ReferenciaComprobante.Contains("!"))
                        {
                            AuxCisnergia = ReferenciaComprobante.Split(new Char[] { '!' });
                            codCisnergia = AuxCisnergia[0];
                        }
                        else
                            codCisnergia = ReferenciaComprobante;

                        if (codCisnergia.Length > 8)
                        {
                            codCisnergia = codCisnergia.Substring(0, 8);
                        }

                        Parametros = new object[] { numeroTransaccion,
                                        "CISNERGIA",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,
                                        Codigo,Identificacion,ReferenciaOrdenante,codCisnergia,
                                        CodigoMoneda,Valor,ValorComision,FormaPago,NumeroCuenta,
                                        NumeroTransaccionComision,RucCedula,NombreFactura};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_CISNERGIA":
                        producto = "4";
                        servicio = "LV";
                        Parametros = new object[] { numeroTransaccion,
                                        "CISNERGIA",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region ATM Empresa Pública Municipal de Transito de Guayaquil
                    //ATM Empresa Pública Municipal de Transito de Guayaquil
                    case "CONSULTA_PACIFICO_ATMOL":
                        traceInformation = "ATM";
                        producto = "4";
                        servicio = "AN";
                        TipoCodigo = "P";
                        //string auxIdentificacion = Identificacion;
                        if (string.IsNullOrEmpty(tipoDocumento))
                            tipoDocumento = CodigoAdicional;

                        switch (tipoDocumento)
                        {
                            case "CIT":
                            case "REN":
                                Identificacion = string.Empty;
                                break;
                        }
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                            "ATM",producto,servicio,"0001",fechaTransaccion,
                            fechaContable,horaTransaccion,canalProceso,UserWS,
                                                                PasswordWS,UsuarioCajero,OficinaCPT,TipoCodigo,Codigo,
                            Identificacion,tipoDocumento};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_ATMOL":
                        traceInformation = "REGISTRO ATM";
                        producto = "4";
                        servicio = "AN";
                        IdentificacionFactura = Identificacion;
                        referenciaSecundaria = "C" + (string)dsEntrada.Tables["DatosTransaccion"].Rows[0]["NumeroId_Cliente"];

                        if (Codigo.Contains("-"))
                        {
                            AuxCisnergia = Codigo.Split(new Char[] { '-' });
                            Codigo = AuxCisnergia[0];
                        }

                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;

                        if (dsEntrada.Tables.Contains("ComboDescripcion"))
                        {
                            if (dsEntrada.Tables["ComboDescripcion"].Columns.Contains("Tipo_Documento"))
                            {
                                tipoDocumento = dsEntrada.Tables["ComboDescripcion"].Rows[0]["Tipo_Documento"].ToString();
                            }
                        }
                        else
                        {
                            tipoDocumento = CodigoAdicional;
                        }

                        if (tipoDocumento.Length > 3)
                            tipoDocumento = tipoDocumento.Substring(0, 3);

                        Parametros = new object[] { numeroTransaccion,"ATM",producto,servicio,"0003",fechaTransaccion,
                            fechaContable,horaTransaccion,canalProceso,UserWS,
                            PasswordWS,UsuarioCajero,OficinaCPT,Codigo,ReferenciaOrdenante,referenciaSecundaria,tipoDocumento,
                            CodigoMoneda,Valor,FormaPago,NumeroCuenta,ValorComision,NumeroTransaccionEnviar,
                            RucCedula,NombreFactura};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_ATMOL":
                        producto = "4";
                        servicio = "AN";

                        Parametros = new object[] { numeroTransaccion,
                            "ANT",producto,servicio,"0005",fechaTransaccion,
                            fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                            UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                            Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region MOVIDELNOR Empresa Pública de Movilidad del Norte
                    //MOVIDELNOR Empresa Pública de Movilidad del Norte                    
                    case "REGISTRO_PACIFICO_MOVIDELNOR":
                        traceInformation = "REGISTRO MOVIDELNOR";
                        producto = "4";
                        servicio = "ZF";
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        //numeroTransaccion = DateTime.Now.ToString("HHmmss");

                        if (dsEntrada.Tables["ComboDescripcion"].Columns.Contains("Contrapartida"))
                        {
                            tipoDocumento = dsEntrada.Tables["ComboDescripcion"].Rows[0]["Contrapartida"].ToString();
                        }
                        else
                        {
                            tipoDocumento = Codigo;
                        }

                        if (tipoDocumento.Length > 20)
                            tipoDocumento = tipoDocumento.Substring(0, 20);

                        Parametros = new object[] { numeroTransaccion,"MOVIDELNOR",producto,servicio,"0003",fechaTransaccion,
                            fechaContable,horaTransaccion,canalProceso,UserWS,
                            PasswordWS,UsuarioCajero,OficinaCPT,
                            tipoDocumento,ReferenciaOrdenante,Identificacion,strTelefono,
                            CodigoMoneda,Valor,ValorComision,FormaPago,NumeroCuenta,NumeroTransaccionEnviar,
                            RucCedula,NombreFactura};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_MOVIDELNOR":
                        producto = "4";
                        servicio = "ZF";
                        Parametros = new object[] { numeroTransaccion,"MOVIDELNOR",producto,servicio,"0005",fechaTransaccion,
                            fechaTransaccion,horaTransaccion,canalProceso,UserWS,PasswordWS,UsuarioCajero,OficinaCPT,
                            NumeroTransaccionReversar,Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region IESS ONLINE
                    case "CONSULTA_PACIFICO_IESSOL":
                        producto = "4";
                        servicio = "IB";
                        TipoCodigo = "P";
                        string CodAux = string.Empty;
                        switch (Auxiliar)
                        {
                            case "001":
                                if (string.IsNullOrEmpty(ReferenciaOrdenante))
                                    ReferenciaOrdenante = "0001";
                                CodAux = ReferenciaOrdenante;
                                Codigo = string.Empty;
                                break;
                            case "002":
                                CodAux = AuxiliarJudicatura;
                                Codigo = string.Empty;
                                break;
                            case "003":
                                if (!string.IsNullOrEmpty(Codigo))
                                {
                                    Codigo = Codigo.PadLeft(16, '0');
                                }
                                DataSet dsIessOL = new DataSet();
                                dsIessOL = adm.ObtenerTablas("'IESSOLRUB'", string.Empty);
                                DataTable dtIessOL = dsIessOL.Tables["Tablas"];
                                if (dtIessOL.Rows.Count > 0)
                                {
                                    string expression = "TABLAArgumento = '" + AuxiliarJudicatura + "'";
                                    DataRow[] selectedRows = dtIessOL.Select(expression);
                                    CodAux = selectedRows[0]["TABLADescripcion"].ToString();
                                    if (CodAux.Length > 9)
                                    {
                                        CodAux = CodAux.Substring(0, 9);
                                    }
                                }
                                break;
                        }
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                            "IESS QUITO",producto,servicio,"0001",fechaTransaccion,
                            fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                            UsuarioCajero,OficinaCPT,
                            TipoCodigo,Codigo,Identificacion,Auxiliar,CodAux };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_IESSOL":
                        producto = "4";
                        servicio = "IB";
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;

                        if (ReferenciaComprobante.Contains("!"))
                        {
                            AuxCisnergia = ReferenciaComprobante.Split(new Char[] { '!' });
                            ReferenciaComprobante = AuxCisnergia[0];
                        }

                        Parametros = new object[] { numeroTransaccion,"IESS QUITO",producto,servicio,"0003",fechaTransaccion,
                            fechaContable,horaTransaccion,canalProceso,UserWS,
                            PasswordWS,UsuarioCajero,OficinaCPT,
                            Codigo,ReferenciaOrdenante,Identificacion,ReferenciaComprobante,
                            CodigoMoneda,Valor,FormaPago,NumeroCuenta,ValorComision,NumeroTransaccionEnviar,
                            RucCedula,NombreFactura};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_IESSOL":
                        producto = "4";
                        servicio = "IB";
                        Parametros = new object[] { numeroTransaccion,
                            "IESS QUITO",producto,servicio,"0005",fechaTransaccion,
                            fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                            UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                            Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region CTE EN LINEA
                    case "CONSULTA_PACIFICO_CTEOL":
                        producto = "4";
                        servicio = "CT";
                        TipoCodigo = "P";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        switch (ReferenciaSecundaria)
                        {
                            case "003":
                                string tipoTramite = string.Empty;
                                string ciudad = string.Empty;
                                string claseAutomotor = string.Empty;
                                string motivoTramite = string.Empty;
                                tipoTramite = dsEntrada.Tables["DatosTransaccion"].Rows[0]["Referencia_Adicional"].ToString();
                                if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("NombreContrapartida"))
                                {
                                    string[] datos = dsEntrada.Tables["DatosTransaccion"].Rows[0]["NombreContrapartida"].ToString().Split('|');
                                    ciudad = datos[0];
                                    claseAutomotor = datos[1];
                                    motivoTramite = datos[2];
                                }
                                Codigo = string.Format("{0}{1}{2}{3}", tipoTramite, ciudad, claseAutomotor, motivoTramite);
                                break;
                            case "005":
                                Codigo = string.Empty;
                                break;
                        }
                        Parametros = new object[] { numeroTransaccion,
                                        "CTG",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,
                                        TipoCodigo,Codigo,Identificacion,ReferenciaSecundaria };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_CTEOL":
                        producto = "4";
                        servicio = "CT";
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        Parametros = new object[] { numeroTransaccion,"CTG",producto,servicio,"0003",fechaTransaccion,
                            fechaContable,horaTransaccion,canalProceso,UserWS,
                            PasswordWS,UsuarioCajero,OficinaCPT,
                            Codigo,ReferenciaOrdenante,ReferenciaSecundaria,ReferenciaComprobante,
                            CodigoMoneda,Valor,FormaPago,NumeroCuenta,ValorComision,NumeroTransaccionEnviar,
                            RucCedula,NombreFactura};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_CTEOL":
                        producto = "4";
                        servicio = "CT";
                        Parametros = new object[] { numeroTransaccion,
                                        "CTG",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region Comprobante Electronico
                    case "REGISTRO_PACIFICO_COMPELECL":
                        producto = "4";
                        servicio = "CT";
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        Parametros = new object[] { numeroTransaccion,"CTG",producto,servicio,"0003",fechaTransaccion,
                            fechaContable,horaTransaccion,canalProceso,UserWS,
                            PasswordWS,UsuarioCajero,OficinaCPT,
                            Codigo,ReferenciaSecundaria,ReferenciaOrdenante,CodigoMoneda,Valor,FormaPago,NumeroCuenta};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSOPACIFICO_COMPELEC":
                        producto = "4";
                        servicio = "CT";
                        Parametros = new object[] { numeroTransaccion,
                                        "CTG",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region GOBMANABI
                    case "REGISTRO_PACIFICO_GOBMANABI":
                        producto = "4";
                        servicio = "ZF";
                        //string cilindraje = ReferenciaComprobante.Substring(0, 15);
                        string cilindraje = string.Empty;
                        string referencia = string.Empty;
                        if (dsEntrada.Tables.Contains("ComboDescripcion"))
                        {
                            if (dsEntrada.Tables["ComboDescripcion"].Columns.Contains("Referencia"))
                            {
                                referencia = (string)dsEntrada.Tables["ComboDescripcion"].Rows[0]["Referencia"];
                                cilindraje = referencia.Substring(0, 15);
                            }
                        }
                        else
                        {
                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia_Adicional"))
                            {
                                referencia = (string)dsEntrada.Tables["DatosTransaccion"].Rows[0]["Referencia_Adicional"];
                                if (referencia.Contains("|"))
                                    cilindraje = referencia.Split('|')[1];
                            }
                        }

                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        Parametros = new object[] { numeroTransaccion,
                                        "GOBMANABI",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,
                                        Codigo,ReferenciaOrdenante,Identificacion,cilindraje,
                                        CodigoMoneda,Valor,ValorComision,FormaPago,NumeroCuenta,
                                        NumeroTransaccionEnviar,RucCedula,NombreFactura};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_GOBMANABI":
                        producto = "4";
                        servicio = "ZF";
                        Parametros = new object[] { numeroTransaccion,
                                        "GOBMANABI",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region MUNICIPIO RIO
                    case "CONSULTA_PACIFICO_MUNIRIO":
                        producto = "4";
                        servicio = "MU";
                        TipoCodigo = "P";
                        numeroTransaccion = DateTime.Now.ToString("HHmmss");
                        Parametros = new object[] { numeroTransaccion,
                                        "MUNICIPIORIO",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,
                                        TipoCodigo,Codigo,Identificacion,Auxiliar };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_MUNIRIO":
                        producto = "4";
                        servicio = "MU";
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        if (dsEntrada.Tables.Contains("ComboDescripcion"))
                        {
                            if (dsEntrada.Tables["ComboDescripcion"].Columns.Contains("Referencia"))
                            {
                                referencia = (string)dsEntrada.Tables["ComboDescripcion"].Rows[0]["Referencia"];
                                Auxiliar = referencia.Substring(0, 2).Trim();
                            }
                        }
                        else
                        {
                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia_Adicional"))
                            {
                                referencia = (string)dsEntrada.Tables["DatosTransaccion"].Rows[0]["Referencia_Adicional"];
                                if (referencia.Contains("|"))
                                    Auxiliar = referencia.Split('|')[0];
                            }
                        }
                        Parametros = new object[] { numeroTransaccion,"MUNICIPIORIO",producto,servicio,"0003",fechaTransaccion,
                            fechaContable,horaTransaccion,canalProceso,UserWS,
                            PasswordWS,UsuarioCajero,OficinaCPT,
                            Codigo,ReferenciaOrdenante,Identificacion,Auxiliar,
                            CodigoMoneda,Valor,FormaPago,NumeroCuenta,ValorComision,NumeroTransaccionEnviar,
                            RucCedula,NombreFactura};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_MUNIRIO":
                        producto = "4";
                        servicio = "MU";
                        Parametros = new object[] { numeroTransaccion,
                                        "MUNICIPIORIO",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region AMAGUA ONLINE
                    case "CONSULTA_PACIFICO_AMAGUAOL":
                        //obtener el xml de plantilla para su remplazo
                        //TipoTransaccion = 0001 significa consulta
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "ZG";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        //codigo = Codigo;
                        Parametros = new object[] { numeroTransaccion,
                                        "AMAGUA",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                        PasswordWS,UsuarioCajero,OficinaCPT,TipoCodigo,Codigo};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_AMAGUAOL":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "ZG";
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        Parametros = new object[] { numeroTransaccion,
                                        "AMAGUA",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,
                                        Codigo,Identificacion,ReferenciaOrdenante,ReferenciaComprobante,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,ValorComision,NumeroTransaccionEnviar, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_AMAGUAOL":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "ZG";

                        Parametros = new object[] { numeroTransaccion,
                                        "AMAGUA",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region Nuevo Proceso ANT Online
                    #region ANT Citaciones
                    case "CONSULTA_PACIFICO_ANTOCITAC":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "AN";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        string auxIdentificacion = Identificacion;
                        string auxCodigo = Codigo;
                        switch (tipoDocumento)
                        {
                            case "PLA":
                                auxIdentificacion = string.Empty;
                                CodigoAdicional = "CPL0000000000";
                                break;
                            case "CI":
                            case "RUC":
                                auxCodigo = string.Empty;
                                CodigoAdicional = "CIT0000000000";
                                break;
                            case "SOL":
                                auxCodigo = string.Empty;
                                CodigoAdicional = "SOL0000000000";
                                break;
                        }
                        Parametros = new object[] { numeroTransaccion,"ANT",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,UsuarioCajero,OficinaCPT,
                                        TipoCodigo,auxCodigo,auxIdentificacion,Auxiliar,CodigoAdicional};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_ANTOCITAC":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "AN";
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        Parametros = new object[] { numeroTransaccion,"ANT",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,UsuarioCajero,OficinaCPT,
                                        Codigo,ReferenciaOrdenante,Identificacion,ReferenciaComprobante,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,ValorComision,NumeroTransaccionEnviar, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_ANTOCITAC":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "AN";
                        Parametros = new object[] { numeroTransaccion,
                                        "ANT",producto,servicio,"0005",fechaTransaccion,fechaContable,
                                        horaTransaccion,canalProceso,UserWS,PasswordWS,UsuarioCajero,OficinaCPT,
                                        NumeroTransaccionReversar,Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion ANT Citaciones
                    #region ANT Convenios
                    case "CONSULTA_PACIFICO_ANTOCONV":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "AT";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        CodigoAdicional = "CDP0000000000";
                        Parametros = new object[] { numeroTransaccion,"ANT",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,UsuarioCajero,OficinaCPT,
                                        TipoCodigo,string.Empty,Identificacion,Auxiliar,CodigoAdicional};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_ANTOCONV":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "AT";
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        //validar si esta en produccion
                        Codigo = "0000000000";
                        Parametros = new object[] { numeroTransaccion,"ANT",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,UsuarioCajero,OficinaCPT,
                                        Codigo,ReferenciaOrdenante,Identificacion,ReferenciaComprobante,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,ValorComision,NumeroTransaccionEnviar, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_ANTOCONV":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "AT";
                        Parametros = new object[] { numeroTransaccion,
                                        "ANT",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion ANT Convenios
                    #region ANT Solicitudes
                    case "CONSULTA_PACIFICO_ANTOSOLIC":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "AN";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        if (string.IsNullOrEmpty(ReferenciaSecundaria))
                            ReferenciaSecundaria = "0000000000";
                        CodigoAdicional = string.Format("SOL{0}", ReferenciaSecundaria);
                        Parametros = new object[] { numeroTransaccion,"ANT",producto,servicio,"0001",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,UsuarioCajero,OficinaCPT,
                                        TipoCodigo,string.Empty,Identificacion,Auxiliar,CodigoAdicional};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_ANTOSOLIC":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "AN";
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        Parametros = new object[] { numeroTransaccion,"ANT",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,UsuarioCajero,OficinaCPT,
                                        ReferenciaSecundaria,ReferenciaOrdenante,Identificacion,ReferenciaComprobante,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,ValorComision,NumeroTransaccionEnviar, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_ANTOSOLIC":
                        TipoCodigo = "P";
                        producto = "4";
                        servicio = "AN";
                        Parametros = new object[] { numeroTransaccion,
                                        "ANT",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion ANT Solicitudes
                    #endregion Nuevo Proceso ANT Online

                    #region ANT_EN_LINEA UNIFICADO
                    case "CONSULTA_PACIFICO_ANTENLINEA":

                        traceInformation = "ANT-->ReferenciaSecundaria:" + ReferenciaSecundaria;
                        servicio = "AN";
                        //si es convenio de pago el servicio es AT
                        if (Auxiliar == "CPL" || Auxiliar == "CIT" || Auxiliar == "SOL")
                            servicio = "AN";

                        else
                        {
                            servicio = "AT";

                            Auxiliar = "CDP";
                            // Codigo = codigoJudicatura;
                            codigoJudicatura = string.Empty;
                        }
                        if (Codigo.ToString().Length == 10)
                            Codigo = "C" + Codigo;
                        else
                                if (Codigo.Length == 13)
                            Codigo = "R" + Codigo;
                        traceInformation = "ANT-->tipoDocumento:" + tipoDocumento;


                        //  EventLog.WriteEntry("EasySoft", " CONSULTA_PACIFICO_ANTENLINEA auxIdentificacion=" + Identificacion);
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                                        servicio,fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,
                                                       PasswordWS,UsuarioCajero,OficinaCPT,codigoJudicatura,
                                                       Codigo,ReferenciaSecundaria,Auxiliar };
                        strResultado = String.Format(plantillaXml, Parametros);

                        break;

                    case "REGISTRO_PACIFICO_ANTENLINEA":


                        string[] aux = Auxiliar.Split('!');
                        if (!string.IsNullOrEmpty(Auxiliar) && aux.Length > 0)
                        {
                            Auxiliar = (string)aux[1];
                        }
                        // EventLog.WriteEntry("EasySoft", " 2REGISTRO_PACIFICO_ANTENLINEA Auxiliar=" + Auxiliar);
                        servicio = "AT";
                        if (Auxiliar == "CPL" || Auxiliar == "CIT" || Auxiliar == "SOL")
                            servicio = "AN";


                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;

                        Parametros = new object[] { numeroTransaccion,servicio,fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,UsuarioCajero,OficinaCPT,
                                        Codigo,ReferenciaOrdenante,Identificacion,ReferenciaComprobante,CodigoMoneda,Valor,FormaPago,
                                        NumeroCuenta,ValorComision,NumeroTransaccionEnviar, RucCedula,NombreFactura };
                        strResultado = String.Format(plantillaXml, Parametros);
                        // EventLog.WriteEntry("EasySoft", " REGISTRO_PACIFICO_ANTENLINEA  1 strResultado=" + strResultado);
                        break;

                    case "REVERSO_PACIFICO_ANTENLINEA":

                        Auxiliar = ReferenciaComprobante.Substring(3, 3);
                        //EventLog.WriteEntry("EasySoft", " 2REVERSO_PACIFICO_ANTENLINEA Auxiliar=" + Auxiliar);
                        servicio = "AT";
                        if (Auxiliar == "CPL" || Auxiliar == "CIT" || Auxiliar == "SOL")
                            servicio = "AN";
                        Parametros = new object[] { numeroTransaccion,
                                        servicio,fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion


                    #region MOVIDEL NORTE ONLINE
                    case "CONSULTA_PACIFICO_MOVIDELNOROL":
                        producto = "4";
                        servicio = "ZG";
                        TipoCodigo = "P";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                                        "MOVIDELNOR",producto,servicio,"0001",fechaTransaccion,fechaContable,horaTransaccion,
                                        canalProceso,UserWS,PasswordWS,UsuarioCajero,OficinaCPT,
                                        TipoCodigo,Codigo,Identificacion,ReferenciaSecundaria };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_MOVIDELNOROL":
                        //EventLog.WriteEntry("Registro-MOVILDELNOR", "TransformarTramaEnviar DSENTRADADATOS\n" + dsEntrada.GetXml());
                        //Identificacion = Identificacion.Replace("C", "");
                        // Identificacion = "C" + Identificacion.Trim();
                        producto = "4";
                        servicio = "ZG";
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;

                        Identificacion = Identificacion.Replace("C", ""); Identificacion = "C" + Identificacion.Trim();
                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Contrapartida"))
                            Codigo = (string)dsEntrada.Tables["DatosTransaccion"].Rows[0]["Contrapartida"];

                        if (dsEntrada.Tables.Contains("ComboDescripcion"))
                        {
                            if (dsEntrada.Tables["ComboDescripcion"].Columns.Contains("Referencia"))
                            {

                                referencia = (string)dsEntrada.Tables["ComboDescripcion"].Rows[0]["Referencia"];
                                Auxiliar = referencia.Substring(0, 3).Trim();
                                //ReferenciaComprobante = Auxiliar;
                            }
                        }
                        else
                        {
                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia"))
                            {
                                Auxiliar = (string)dsEntrada.Tables["DatosTransaccion"].Rows[0]["Referencia"];
                            }

                        }
                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia_Adicional"))
                        {
                            referencia = (string)dsEntrada.Tables["DatosTransaccion"].Rows[0]["Referencia_Adicional"];
                            ReferenciaComprobante = Auxiliar + referencia;
                        }


                        Parametros = new object[] { numeroTransaccion,"MOVIDELNOR",producto,servicio,"0003",fechaTransaccion,
                            fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,UsuarioCajero,OficinaCPT,
                            Codigo,ReferenciaOrdenante,Identificacion,ReferenciaComprobante,
                            CodigoMoneda,Valor,FormaPago,NumeroCuenta,ValorComision,NumeroTransaccionEnviar,
                            RucCedula,NombreFactura};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_MOVIDELNOROL":
                        producto = "4";
                        servicio = "ZG";
                        Parametros = new object[] { numeroTransaccion,
                                        "MOVIDELNOR",producto,servicio,"0005",fechaTransaccion,fechaContable,horaTransaccion,
                                        canalProceso,UserWS,PasswordWS,UsuarioCajero,OficinaCPT,
                                        NumeroTransaccionReversar,Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region AMT Sin Informacion Comprobantes
                    case "REGISTRO_PACIFICO_AMTCOMPROBANTES":
                        producto = "4";
                        servicio = "ZF";
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        if (Codigo.Length > 15)
                            Codigo = Codigo.Substring(0, 15);
                        Parametros = new object[] { numeroTransaccion,
                                        "METROPRO TRA",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,
                                        Codigo,ReferenciaOrdenante,Identificacion,ReferenciaSecundaria,
                                        CodigoMoneda,Valor,ValorComision,FormaPago,NumeroCuenta,
                                        NumeroTransaccionEnviar,RucCedula,NombreFactura};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_AMTCOMPROBANTES":
                        producto = "4";
                        servicio = "ZF";
                        Parametros = new object[] { numeroTransaccion,
                                        "METROPRO TRA",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,
                                        NumeroTransaccionReversar,Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region AMT Sin Informacion Rubros
                    case "REGISTRO_PACIFICO_AMTRUBROS":
                        producto = "4";
                        servicio = "OC";
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        Parametros = new object[] { numeroTransaccion,
                                        "METROPRO TRA",producto,servicio,"0003",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,
                                        Codigo,ReferenciaOrdenante,Identificacion,ReferenciaSecundaria,
                                        CodigoMoneda,Valor,ValorComision,FormaPago,NumeroCuenta,
                                        NumeroTransaccionEnviar,RucCedula,NombreFactura};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_AMTRUBROS":
                        producto = "4";
                        servicio = "OC";
                        Parametros = new object[] { numeroTransaccion,
                                        "METROPRO TRA",producto,servicio,"0005",fechaTransaccion,
                                        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,
                                        NumeroTransaccionReversar,Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion

                    #region PAGOS CNE
                    case "CONSULTA_PACIFICO_CNE":
                        producto = "3";
                        servicio = "OP";
                        TipoCodigo = "P";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                                        "CNE",producto,servicio,"0001",fechaTransaccion,fechaContable,horaTransaccion,
                                        canalProceso,UserWS,PasswordWS,UsuarioCajero,OficinaCPT,
                                       Identificacion,'P' };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_CNE":
                        producto = "3";
                        servicio = "OP";

                        //strOrdenBanco,strSecuencial,CodigoMoneda
                        Parametros = new object[] { numeroTransaccion,"CNE",producto,servicio,"0003",fechaTransaccion,
                            fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,UsuarioCajero,OficinaCPT,
                            strOrdenBanco,strSecuencial,CodigoMoneda,Valor,FormaPago,NumeroCuenta};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_CNE":
                        producto = "3";
                        servicio = "OP";
                        Parametros = new object[] { numeroTransaccion,
                                        "CNE",producto,servicio,"0005",fechaTransaccion,fechaContable,horaTransaccion,
                                        canalProceso,UserWS,PasswordWS,UsuarioCajero,OficinaCPT,
                                        NumeroTransaccionReversar,Motivo };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region DEPOSITOS
                    case "CONSULTA_PACIFICO_DEPOSITOS":
                        producto = "4";
                        servicio = "DF";
                        TipoCodigo = "P";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                                        "PACIFICO DEP",producto,servicio,"0001",fechaTransaccion,fechaContable,horaTransaccion,
                                        canalProceso,UserWS,PasswordWS,UsuarioCajero,OficinaCPT,
                                        Codigo,TipoCodigo};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_DEPOSITOS":
                        producto = "4";
                        servicio = "DF";
                        Parametros = new object[] { numeroTransaccion,"PACIFICO DEP",producto,servicio,"0003",fechaTransaccion,
                            fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,UsuarioCajero,OficinaCPT,
                            Codigo,RucCedula,ReferenciaOrdenante,CodigoMoneda,Valor,FormaPago,NumeroCuenta};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_DEPOSITOS":
                        producto = "4";
                        servicio = "DF";
                        Parametros = new object[] { numeroTransaccion,
                                        "PACIFICO DEP",producto,servicio,"0005",fechaTransaccion,fechaContable,horaTransaccion,
                                        canalProceso,UserWS,PasswordWS,UsuarioCajero,OficinaCPT,
                                        NumeroTransaccionReversar,Motivo };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion




                    #region METROPOLITANA TRÁNSITO YOVERI
                    case "CONSULTA_PACIFICO_METROPRO":

                        // EventLog.WriteEntry("EasySwitch", "CONSULTA_METROPRO_TRA ");
                        producto = "4";
                        servicio = "ZG";
                        TipoCodigo = "P";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");

                        //EventLog.WriteEntry("EasySwitch", "CONSULTA_METROPRO_TRA dsEntrada:" + dsEntrada.GetXml());


                        /////

                        if (dsEntrada.Tables.Contains("ComboDescripcion"))//COM+ .11
                        {
                            if (dsEntrada.Tables["ComboDescripcion"].Columns.Contains("Referencia_Adicional"))
                            {
                                TipoServicio = (string)dsEntrada.Tables["ComboDescripcion"].Rows[0]["Referencia_Adicional"];
                                //EventLog.WriteEntry("EasySwitch ROGER", "ROGER CONSULTA_METROPRO_TRA Tipo servicio" + dsEntrada.GetXml());
                            }
                        }
                        else
                        {
                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia_Adicional"))
                            {
                                TipoServicio = (string)dsEntrada.Tables["DatosTransaccion"].Rows[0]["Referencia_Adicional"];
                                if (TipoServicio.Contains("|"))
                                    TipoServicio = TipoServicio.Split('|')[1];
                            }
                        }

                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Numero_Documento"))
                        {
                            placa = (string)dsEntrada.Tables["DatosTransaccion"].Rows[0]["Numero_Documento"];
                            if (placa.Contains("|"))
                                placa = TipoServicio.Split('|')[1];
                        }
                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("NumeroId_Cliente"))
                        {
                            Identificacion = (string)dsEntrada.Tables["DatosTransaccion"].Rows[0]["NumeroId_Cliente"];
                            if (Identificacion.Contains("|"))
                                Identificacion = Identificacion.Split('|')[1];
                        }
                        Identificacion = "C" + Identificacion;
                        //EventLog.WriteEntry("EasySwitch", "CONSULTA_METROPRO_TRA servicio" + servicio);
                        Parametros = new object[] { numeroTransaccion,
                                        "METROPRO TRA",producto,servicio,"0001",fechaTransaccion,fechaContable,horaTransaccion,
                                        canalProceso,UserWS,PasswordWS,UsuarioCajero,OficinaCPT,
                                        TipoCodigo,placa,Identificacion,TipoServicio};//tipoServicio=CodigoAdicional,
                        strResultado = String.Format(plantillaXml, Parametros);
                        // EventLog.WriteEntry("EasySwitch", "CONSULTA_METROPRO_TRA strResultado" + strResultado);
                        break;
                    case "REGISTRO_PACIFICO_METROPRO":
                        producto = "4";
                        servicio = "ZG";
                        TipoCodigo = "P";
                        ReferenciaSecundaria = "C" + ReferenciaSecundaria;
                        ReferenciaComprobante = TipoServicio;
                        numeroTransaccion = DateTime.Now.ToString("HHmmss");
                        string solicitud = string.Empty;
                        string valServicio = string.Empty;

                        //EventLog.WriteEntry("EasySwitch", "REGISTRO_PACIFICO_METROPRO dsEntrada=" + dsEntrada.GetXml());
                        if (dsEntrada.Tables.Contains("ComboDescripcion"))//COM+ .11
                        {
                            if (dsEntrada.Tables["ComboDescripcion"].Columns.Contains("Referencia_Adicional"))
                            {
                                valServicio = (string)dsEntrada.Tables["ComboDescripcion"].Rows[0]["Referencia_Adicional"];
                            }
                        }
                        else
                        {
                            if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia_Adicional"))
                            {
                                valServicio = (string)dsEntrada.Tables["DatosTransaccion"].Rows[0]["Referencia_Adicional"];
                                if (valServicio.Contains("|"))
                                    valServicio = valServicio.Split('|')[1];
                            }
                        }

                        if (valServicio.Contains("Citaciones") || valServicio.Contains("CIT"))//|| valServicio.Contains("Solicitud") || valServicio.Contains("SOL")
                        {
                            //solicitud = placa;
                            solicitud = (string)dsEntrada.Tables["DatosTransaccion"].Rows[0]["Numero_Documento"];
                            if (solicitud.Contains("|"))
                                solicitud = solicitud.Split('|')[1];
                        }
                        else
                            solicitud = numeroTransaccion;//preguntar cual es el numero de solicitud

                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia_Adicional"))
                            Auxiliar = (string)dsEntrada.Tables["DatosTransaccion"].Rows[0]["Referencia_Adicional"];

                        string codigoCuentaM = string.Empty;
                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia"))
                        {
                            codigoCuentaM = (string)dsEntrada.Tables["DatosTransaccion"].Rows[0]["Referencia"];
                            if (codigoCuentaM.Length > 2)
                                codigoCuentaM = ((string)dsEntrada.Tables["DatosTransaccion"].Rows[0]["Referencia"]).Substring(0, 2);
                        }
                        //20191210 se cambio solo quieren que s e envie el tipo de servicio
                        //ReferenciaComprobante = Auxiliar + codigoCuentaM;
                        ReferenciaComprobante = Auxiliar;
                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("NumeroId_Cliente"))
                            ReferenciaSecundaria = (string)dsEntrada.Tables["DatosTransaccion"].Rows[0]["NumeroId_Cliente"];

                        if (ReferenciaSecundaria.Length == 10)
                            ReferenciaSecundaria = "C" + ReferenciaSecundaria;
                        else
                               if (ReferenciaSecundaria.Length == 13)
                            ReferenciaSecundaria = "R" + ReferenciaSecundaria;

                        EventLog.WriteEntry("EasySwitch", "REGISTRO_PACIFICO_METROPRO ReferenciaComprobante =" + ReferenciaComprobante);
                        Parametros = new object[] { numeroTransaccion,"METROPRO TRA",producto,servicio,"0003",fechaTransaccion,
                            fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,UsuarioCajero,OficinaCPT,
                            solicitud,ReferenciaSecundaria,ReferenciaOrdenante,ReferenciaComprobante,CodigoMoneda,Valor,FormaPago,NumeroCuenta,
                            ValorComision,NumeroTransaccionComision,IdentificacionFactura,NombreFactura};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_METROPRO":
                        producto = "4";
                        servicio = "ZG";
                        Parametros = new object[] { numeroTransaccion,
                                        "METROPRO TRA",producto,servicio,"0005",fechaTransaccion,fechaContable,horaTransaccion,
                                        canalProceso,UserWS,PasswordWS,UsuarioCajero,OficinaCPT,
                                        NumeroTransaccionReversar,Motivo,NumeroTransaccionComision};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion

                    #region PORTOVIAL
                    case "CONSULTA_PACIFICO_PORTOVIAL":
                        //EventLog.WriteEntry("EasySwitch", "PORTOVIALCONSULTA Transformar tramaSalida DSENTRADA= " + dsEntrada.GetXml());
                        producto = "4";
                        servicio = "AN";
                        TipoCodigo = "P";
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                                        "PORTOVIAL",producto,servicio,"0001",fechaTransaccion,fechaContable,horaTransaccion,
                                        canalProceso,UserWS,PasswordWS,UsuarioCajero,OficinaCPT,
                                        TipoCodigo,Codigo,Identificacion,ReferenciaSecundaria };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_PORTOVIAL":
                        // EventLog.WriteEntry("EasySwitch", "PORTOVIAL REGISTRO Transformar tramaSalida DSENTRADA= " + dsEntrada.GetXml());
                        producto = "4";
                        servicio = "AN";
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        //Identificacion = Identificacion.Replace("C", ""); Identificacion = "C" + Identificacion.Trim();
                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Contrapartida"))
                            Codigo = (string)dsEntrada.Tables["DatosTransaccion"].Rows[0]["Contrapartida"];
                        string codigoCuenta = string.Empty;

                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia_Adicional"))
                            Auxiliar = (string)dsEntrada.Tables["DatosTransaccion"].Rows[0]["Referencia_Adicional"];
                        if (dsEntrada.Tables["DatosTransaccion"].Columns.Contains("Referencia"))
                        {
                            codigoCuenta = (string)dsEntrada.Tables["DatosTransaccion"].Rows[0]["Referencia"];
                            if (codigoCuenta.Length > 2)
                                codigoCuenta = ((string)dsEntrada.Tables["DatosTransaccion"].Rows[0]["Referencia"]).Substring(0, 2);
                        }
                        ReferenciaComprobante = Auxiliar + codigoCuenta;
                        EventLog.WriteEntry("EasySwitch", "PORTOVIAL REGISTRO ReferenciaComprobante= " + ReferenciaComprobante);



                        Parametros = new object[] { numeroTransaccion,"PORTOVIAL",producto,servicio,"0003",fechaTransaccion,
                            fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,UsuarioCajero,OficinaCPT,
                            Codigo,ReferenciaOrdenante,Identificacion,ReferenciaComprobante,
                            CodigoMoneda,Valor,FormaPago,NumeroCuenta,ValorComision,NumeroTransaccionEnviar,
                            RucCedula,NombreFactura};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REVERSO_PACIFICO_PORTOVIAL":
                        producto = "4";
                        servicio = "AN";
                        Parametros = new object[] { numeroTransaccion,
                                        "PORTOVIAL",producto,servicio,"0005",fechaTransaccion,fechaContable,horaTransaccion,
                                        canalProceso,UserWS,PasswordWS,UsuarioCajero,OficinaCPT,
                                        NumeroTransaccionReversar,Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    #region empresas Yoveri
                    case "CONSULTA_PACIFICO_TRANSITOSTODOMINGO":
                        EventLog.WriteEntry("EasySwitch", "CONSULTA_PACIFICO_TRANSITOSTODOMINGO Transformar tramaSalida DSENTRADA= " + dsEntrada.GetXml());
                        EventLog.WriteEntry("EasySwitch", "ReferenciaSecundaria=" + ReferenciaSecundaria);
                        numeroTransaccion = DateTime.Now.ToString("HHmmss");
                        Parametros = new object[] { numeroTransaccion,
                                        fechaTransaccion,fechaContable,horaTransaccion,
                                        UserWS,PasswordWS,UsuarioCajero,OficinaCPT,
                                        Codigo,Identificacion,ReferenciaSecundaria };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion

                    #region Esmena
                    case "CONSULTA_PACIFICO_ESMENA":
                        //EventLog.WriteEntry("EasySwitch", "CONSULTA_PACIFICO_ESMENA Codigo= " + Codigo);

                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion, fechaTransaccion,fechaContable,horaTransaccion,
                                        canalProceso,UserWS,PasswordWS,UsuarioCajero,OficinaCPT,
                                        Codigo };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;

                    case "REGISTRO_PACIFICO_ESMENA":
                        Parametros = new object[] { numeroTransaccion,fechaTransaccion,
                            fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,UsuarioCajero,OficinaCPT
                            ,Codigo,Identificacion,CodigoAdicional,Nombre,CodigoMoneda,Valor,ValorComision,FormaPago,NumeroCuenta
                            ,NumeroTransaccionComision,Identificacion,NombreFactura};
                        strResultado = String.Format(plantillaXml, Parametros);

                        break;

                    case "REVERSO_PACIFICO_ESMENA":

                        Parametros = new object[] { numeroTransaccion,
                                      fechaTransaccion,fechaContable,horaTransaccion,
                                        canalProceso,UserWS,PasswordWS,UsuarioCajero,OficinaCPT,
                                        NumeroTransaccionReversar,Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion
                    
                    #region PROPIEDADGYE
                    case "CONSULTA_PACIFICO_PROPIEDADGYE":
                        EventLog.WriteEntry("EasySwitch", "CONSULTA_PACIFICO_PROPIEDADGYE Codigo= " + Codigo);
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion, fechaTransaccion,
                            fechaContable,horaTransaccion,
                                        canalProceso,UserWS,PasswordWS,UsuarioCajero,OficinaCPT,
                                        Codigo };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;

                    //case "REGISTRO_PACIFICO_PROPIEDADGYE":
                    //    Parametros = new object[] { numeroTransaccion,fechaTransaccion,
                    //        fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,UsuarioCajero,OficinaCPT
                    //        ,Codigo,Identificacion,CodigoAdicional,Nombre,CodigoMoneda,Valor,ValorComision,FormaPago,NumeroCuenta
                    //        ,NumeroTransaccionComision,Identificacion,NombreFactura};
                    //    strResultado = String.Format(plantillaXml, Parametros);

                    //    break;

                    //case "REVERSO_PACIFICO_PROPIEDADGYE":

                    //    Parametros = new object[] { numeroTransaccion,
                    //                  fechaTransaccion,fechaContable,horaTransaccion,
                    //                    canalProceso,UserWS,PasswordWS,UsuarioCajero,OficinaCPT,
                    //                    NumeroTransaccionReversar,Motivo,NumeroTransaccionComision };
                    //    strResultado = String.Format(plantillaXml, Parametros);
                    //    break;
                    #endregion

                    #region SENESCYT
                    case "CONSULTA_PACIFICO_SENESCYT":
                
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");                

                        EventLog.WriteEntry("EasySwitch", "CONSULTA_PACIFICO_SENESCYT Codigo= " + Codigo);
                        Parametros = new object[] { numeroTransaccion,
                            fechaTransaccion,fechaContable,horaTransaccion,
                            canalProceso,UserWS,PasswordWS,UsuarioCajero,
                            OficinaCPT ,Identificacion
                        };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;


                    case "REGISTRO_PACIFICO_SENESCYT":
                        EventLog.WriteEntry("EasySwitch", "REGISTRO_PACIFICO_SENESCYT Codigo= " + Codigo);
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        Parametros = new object[] { numeroTransaccion,fechaTransaccion,
                            fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,
                            UsuarioCajero,OficinaCPT,Codigo,Identificacion,
                            ReferenciaOrdenante,
                            ReferenciaComprobante,Valor,NumeroCuenta,ValorComision
                            ,NumeroTransaccionEnviar,RucCedula,NombreFactura,CodigoAdicional};
                        strResultado = String.Format(plantillaXml, Parametros);

                        break;

                    case "REVERSO_PACIFICO_SENESCYT":

                        Parametros = new object[] { numeroTransaccion,
                                      fechaTransaccion,fechaContable,horaTransaccion,
                                        canalProceso,UserWS,PasswordWS,UsuarioCajero,OficinaCPT,
                                        NumeroTransaccionReversar,Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion

                    #region MINISTERIO TURISMO
                    case "CONSULTA_PACIFICO_TURISMO":
                        
                        EventLog.WriteEntry("EasySwitch", "REGISTRO_PACIFICO_TURISMO Codigo= " + Codigo);
                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                            fechaTransaccion,fechaContable,horaTransaccion,
                            canalProceso,UserWS,PasswordWS,UsuarioCajero,OficinaCPT,
                            Codigo };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;

                    case "REGISTRO_PACIFICO_TURISMO":
                        EventLog.WriteEntry("EasySwitch", "REGISTRO_PACIFICO_TURISMO Codigo= " + Codigo);
                        if (bolTieneComision)
                            NumeroTransaccionEnviar = Convert.ToInt64(AuxNumTrx);
                        else
                            NumeroTransaccionEnviar = 0;
                        Parametros = new object[] { numeroTransaccion,
                            fechaTransaccion,
                            fechaContable,horaTransaccion,canalProceso,
                            UserWS,PasswordWS,UsuarioCajero,OficinaCPT
                            ,Codigo,Identificacion,ReferenciaOrdenante,Valor,ValorComision,NumeroCuenta
                            ,NumeroTransaccionEnviar,Identificacion,NombreFactura,
                            ReferenciaComprobante
                        };
                        strResultado = String.Format(plantillaXml, Parametros);

                        break;

                    case "REVERSO_PACIFICO_TURISMO":

                        Parametros = new object[] { numeroTransaccion,
                                      fechaTransaccion,fechaContable,horaTransaccion,
                                        canalProceso,UserWS,PasswordWS,UsuarioCajero,OficinaCPT,
                                        NumeroTransaccionReversar,Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion


                    // #region SAE
                    //case "CONSULTA_PACIFICO_SAE":
                    //    EventLog.WriteEntry("EasySwitch", "CONSULTA_PACIFICO_SAE Codigo= " + Codigo);

                    //    numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                    //    Parametros = new object[] { numeroTransaccion,
                    //                    fechaTransaccion,fechaContable,horaTransaccion,
                    //                    canalProceso,UserWS,PasswordWS,UsuarioCajero,OficinaCPT,
                    //                    Codigo };
                    //    strResultado = String.Format(plantillaXml, Parametros);
                    //    break;

                    //case "REGISTRO_PACIFICO_SAE":
                    //    EventLog.WriteEntry("EasySwitch", "REGISTRO_PACIFICO_SAE Codigo= " + Codigo);

                    //    Parametros = new object[] { numeroTransaccion,fechaTransaccion,fechaContable,
                    //        horaTransaccion,canalProceso,UserWS,PasswordWS,UsuarioCajero,OficinaCPT,Codigo,
                    //        ReferenciaSecundaria,ReferenciaOrdenante,ReferenciaComprobante,
                    //        Valor,NumeroCuenta,ValorComision
                    //        ,NumeroTransaccionComision,IdentificacionFactura,NombreFactura};
                    //    strResultado = String.Format(plantillaXml, Parametros);
                    //    break;

                    //case "REVERSO_PACIFICO_SAE":

                    //    Parametros = new object[] { numeroTransaccion,
                    //                  fechaTransaccion,fechaContable,horaTransaccion,
                    //                    canalProceso,UserWS,PasswordWS,UsuarioCajero,OficinaCPT,
                    //                    NumeroTransaccionReversar,Motivo,NumeroTransaccionComision };
                    //    strResultado = String.Format(plantillaXml, Parametros);
                    //    break;
                    //#endregion

                    #region Dinadec
                    case "CONSULTA_PACIFICO_DINADEC":
                        //EventLog.WriteEntry("EasySwitch", "PORTOVIALCONSULTA Transformar tramaSalida DSENTRADA= " + dsEntrada.GetXml());

                        numeroTransaccion = DateTime.Now.ToString("HHmmssf");
                        Parametros = new object[] { numeroTransaccion,
                                        fechaTransaccion,fechaContable,horaTransaccion,
                                        canalProceso,UserWS,PasswordWS,UsuarioCajero,OficinaCPT,
                                        Codigo,Identificacion };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    case "REGISTRO_PACIFICO_DINADEC":
                        //EventLog.WriteEntry("EasySwitch", "REGISTRO_PACIFICO_DINADEC Valor=" + Valor);
                        referenciaSecundaria = Identificacion;
                        Parametros = new object[] { numeroTransaccion,fechaTransaccion,
                            fechaContable,horaTransaccion,canalProceso,UserWS,PasswordWS,UsuarioCajero,OficinaCPT
                            ,Codigo,ReferenciaOrdenante,referenciaSecundaria,ReferenciaComprobante,
                            CodigoMoneda,Valor,FormaPago,NumeroCuenta,ValorComision,NumeroTransaccionComision,Identificacion,NombreFactura};
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;

                    case "REVERSO_PACIFICO_DINADEC":

                        Parametros = new object[] { numeroTransaccion,
                                      fechaTransaccion,fechaContable,horaTransaccion,
                                        canalProceso,UserWS,PasswordWS,UsuarioCajero,OficinaCPT,
                                        NumeroTransaccionReversar,Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(plantillaXml, Parametros);
                        break;
                    #endregion

                    default:
                        break;
                }
            }
            catch (Exception e)
            {
                GrabarAppLog("Pacifico_Procesos.TransformarTramaEnviar.ERROR:" + e.Message + " traceInformation:" + traceInformation, "E");
            }
            GrabarAppLog("Pacifico_Procesos.TransformarTramaEnviar:FIN DE TRANSFORMACION DE TRAMA A ENVIAR SWITCH Pacifico:" + strResultado, "I");

            EventLog.WriteEntry("EasySwitch", "TransformarTramaEnviar| linea 8366\n esto es lo que devuelve: strResultado= " + strResultado);

            return strResultado;
        }

        private string TransformarTramaSalida(string strXmlSalida, string strTransaccion, string strXmlEntrada, string strEstadoTransaccion, string strIdOrigen, double valorIva)
        {
            EventLog.WriteEntry("EasySwitch", "TransformarTramaSalida(string strXmlSalida, string strTransaccion, string strXmlEntrada, string strEstadoTransaccion, string strIdOrigen, double valorIva) " +
                "\nValores: \nstrXmlSalida= " + strXmlSalida + "\nstrTransaccion= " + strTransaccion + "\nstrXmlEntrada= " + strXmlEntrada + "\nstrEstadoTransaccion= " + strEstadoTransaccion + "\nstrIdOrigen= " + strIdOrigen + "\nvalorIva= " + valorIva.ToString());


            string strRespuesta = string.Empty;
            DataSet dsEntrada = new DataSet();
            DataSet dsEntradaDatos = new DataSet();

            dsEntradaDatos = adm.getDataSetFromString(strXmlEntrada);
            EventLog.WriteEntry("EasySwitch", "TransformarTramaSalida -->linea 8370\ndsEntradaDatos = adm.getDataSetFromString(strXmlEntrada)\n" +
                "strXmlEntrada= " + strXmlEntrada + "\ndsEntradaDatos= " + dsEntradaDatos.GetXml());


            //obtener plantilla para remplazo de datos
            string Referencia_Adicional = string.Empty; string NombreContrapartida = string.Empty; string Valor = "0";          //Valor            
            string Fecha_Proceso = string.Empty, MailsA = string.Empty;  //FechaContable            
            string Codigo_Retorno = string.Empty;   //CodigoRetorno        
            string Descripcion_Retorno = string.Empty;
            string CodigoBanco = string.Empty;
            string[] lstTransaccion;
            string Referencia = string.Empty;     //Referencia
            string Codigo_Tercero = string.Empty;   //Codigo
            CodigoBanco = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Banco"].ToString();
            string strTran = strTransaccion;
            lstTransaccion = strTransaccion.Split('_');
            strTransaccion = lstTransaccion[0].ToString();
            string Ciudad_Cliente = string.Empty;
            //debo obtener los datos para armar el xml de salida                        
            string Moneda = string.Empty;         //CodigoMoneda
            string Contrapartida = string.Empty;  //Identificacion
            string Numero_Documento = string.Empty;
            string MensajeRetorno = string.Empty;   //MensajeRetorno            
            string Genera_XML = string.Empty;       //ValorCapital
            string Referencia_SWIFT = string.Empty;       //ValorInteres    
            string NumeroId_Cliente = "9999999999";
            string TipoId_Cliente = "C";
            string CobroComision = "N";
            string ValorComision = "000000000000000";
            int intCantidadegistros = 1;

            string Nombre_Campo = string.Empty; string NumeroTelefono = string.Empty; string Nombre = string.Empty; string NumeroCuenta = string.Empty;

            string Secuencial_Banco = string.Empty; string RucBanco = string.Empty; string Localidad = string.Empty; string PuntoVenta = string.Empty;
            string Secuencial = string.Empty; string AutorizacionSRI = string.Empty; string DireccionBanco = string.Empty;
            string FechaVigenciaSri = string.Empty; string BanderaNotaVenta = "N"; string Secuencial_Banco_Comision = string.Empty;
            string TituloEmpresa = string.Empty; string RucEmpresa = string.Empty; string TelefonoEmpresa = string.Empty; string DireccionEmpresa = string.Empty;
            string FechaOrden = string.Empty; string CantidadRubros = string.Empty; string BanderaComprobante = string.Empty; string BanderaActualizar = string.Empty;
            string strFechainicioSRI = string.Empty; string strFechaResolucionSRI = string.Empty, Referencia_TX = string.Empty; //string Referencia_TX_Pruebas = string.Empty;

            string ReferenciaAuxiliar = string.Empty;
            string result = string.Empty;
            string ContrapartidaOriginal = string.Empty;

            string CodigoSecuencialAdicional = string.Empty;
            if (dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Fuente_Registrador"].ToString() == "PACIFICO_BABAHOYOEP"
          && (strTransaccion == "CONSULTA" || strTransaccion == "REGISTRO"))
            {
                if (strTransaccion == "CONSULTA")
                {
                    // string ReferenciaAux = string.Empty;
                    Referencia_Adicional = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Referencia"].ToString();
                }
            }
            //////primer cambio para espoch y guarda   en la switchlog trans pero aun no en items
            if (dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Fuente_Registrador"].ToString() == "PACIFICO_CBRESPOCH"
            && (strTransaccion == "CONSULTA" || strTransaccion == "REGISTRO"))
            {
                if (strTransaccion == "CONSULTA")
                {
                    // string ReferenciaAux = string.Empty;
                    Referencia_Adicional = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Referencia"].ToString();
              
                }
            }


            GrabarAppLog("Pacifico_Procesos.TransformarTramaSalida:INICIO DE TRANSFORMACION DE TRAMA DE SALIDA SWITCH PACIFICO", "I");


            try
            {

                if (!strTran.Contains("FARMA"))
                {
                    string tramasalida = (strXmlSalida.Length > 32000) ? tramasalida = strXmlSalida.Substring(0, 32000) : strXmlSalida;
                    EventLog.WriteEntry("EasySwitch", "TransformarTramasalida - tramasalida: " + tramasalida, EventLogEntryType.Warning);
                    dsEntrada = adm.getDataSetFromString(strXmlSalida);

                    EventLog.WriteEntry("EasySwitch", "Transformar tramaSalida\nstrXmlEntrada= " + strXmlEntrada + "\nstrEstadoTransaccion= " + strEstadoTransaccion + "\nstrIdOrigen= " + strIdOrigen + "\nvalorIva= " + valorIva.ToString());
                    EventLog.WriteEntry("EasySwitch", "Transformar tramaSalida\nstrXmlSalida= " + strXmlSalida);
                    EventLog.WriteEntry("EasySwitch", "Transformar tramaSalida \nstrTransaccion= " + strTransaccion);
                    switch (strTransaccion)
                    {
                        case "CONSULTA":
                 

                            if (dsEntradaDatos.Tables["DatosTransaccion"].Columns.Contains("Referencia_TX"))
                                Referencia_TX = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Referencia_TX"].ToString();

                            if (dsEntradaDatos.Tables["DatosTransaccion"].Columns.Contains("Ciudad_Cliente"))
                                Ciudad_Cliente = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Ciudad_Cliente"].ToString();
                            if (dsEntrada.Tables.Contains("Cabecera"))
                            {
                                if (dsEntrada.Tables["Cabecera"].Columns.Contains("CantidadRegistros"))
                                    intCantidadegistros = Convert.ToInt32(dsEntrada.Tables["Cabecera"].Rows[0]["CantidadRegistros"].ToString());


                                Fecha_Proceso = dsEntrada.Tables["Cabecera"].Rows[0]["FechaContable"].ToString();
                                Codigo_Retorno = dsEntrada.Tables["Cabecera"].Rows[0]["CodigoRetorno"].ToString();
                                MensajeRetorno = dsEntrada.Tables["Cabecera"].Rows[0]["MensajeRetorno"].ToString();
                            }

                            if (!adm.VaPorNuevoWebService(dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Id_Servicio"].ToString()))
                                TraducirMensajesDeRespuesta(ref Codigo_Retorno, ref MensajeRetorno, Codigo_Retorno, ref MailsA, dsCatalogo);

                            XmlDocument xmldatos = new System.Xml.XmlDocument();
                            XmlNode dsSalida = xmldatos.CreateElement("dsSalida");
                            int contador = 0;
                            if (Codigo_Retorno == "0001")
                            {
                                for (int i = 0; i < intCantidadegistros; i++)
                                {
                                    XmlNode dtDatosTransaccion = xmldatos.CreateElement("dtDatosTransaccion");
                                    if (dsEntrada.Tables.Contains("Rubro"))
                                    {
                                        if (dsEntrada.Tables["Rubro"].Columns.Contains("Identificacion"))
                                        {
                                            if (dsEntrada.Tables["Rubro"].Rows[i]["Identificacion"].ToString() != string.Empty)
                                            {
                                                //Roger::12-04-2018-Validacion para servicios que no devuelven el formato CXXXXXXXXXX en la identificacio en la respuesta de la consulta
                                                string identificacionRespuestaConsulta = dsEntrada.Tables["Rubro"].Rows[i]["Identificacion"].ToString();
                                                long number1 = 0;
                                                bool canConvert = long.TryParse(identificacionRespuestaConsulta, out number1);//es un número


                                                TipoId_Cliente = dsEntrada.Tables["Rubro"].Rows[i]["Identificacion"].ToString().Substring(0, 1);
                                                if (TipoId_Cliente == string.Empty || TipoId_Cliente == "0" || TipoId_Cliente == "C" || canConvert)
                                                    TipoId_Cliente = "C";
                                                else
                                                    TipoId_Cliente = "R";
                                                try
                                                {
                                                    if (dsEntrada.Tables["Rubro"].Rows[i]["Identificacion"].ToString().Length > 1)
                                                    {
                                                        if (canConvert)
                                                            NumeroId_Cliente = identificacionRespuestaConsulta;
                                                        else
                                                            NumeroId_Cliente = dsEntrada.Tables["Rubro"].Rows[i]["Identificacion"].ToString().Substring(1, dsEntrada.Tables["Rubro"].Rows[i]["Identificacion"].ToString().Length - 1);
                                                    }
                                                    else
                                                    {
                                                        NumeroId_Cliente = "9999999999";
                                                    }
                                                }
                                                catch (Exception)
                                                {
                                                    NumeroId_Cliente = "9999999999";
                                                }

                                            }
                                        }
                                        //EventLog.WriteEntry("easysoft", "NumeroId_Cliente=" + NumeroId_Cliente);
                                        if (dsEntrada.Tables["Rubro"].Columns.Contains("Valor"))
                                            Valor = String.Format("{0:0.00}", Convert.ToDouble(dsEntrada.Tables["Rubro"].Rows[i]["Valor"].ToString()) / 100);

                                        if (dsEntrada.Tables["Rubro"].Columns.Contains("CodigoMoneda"))
                                            Moneda = dsEntrada.Tables["Rubro"].Rows[i]["CodigoMoneda"].ToString();
                                        if (dsEntrada.Tables["Rubro"].Columns.Contains("Nombre"))
                                            NombreContrapartida = dsEntrada.Tables["Rubro"].Rows[i]["Nombre"].ToString();
                                        if (dsEntrada.Tables["Rubro"].Columns.Contains("Codigo"))
                                            Contrapartida = dsEntrada.Tables["Rubro"].Rows[i]["Codigo"].ToString();

                                        switch (strTran)
                                        {
                                            case "CONSULTA_PACIFICO_JUDICATURAPER":
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Nombre"))
                                                {
                                                    string strAux = "";
                                                    strAux = dsEntrada.Tables["Rubro"].Rows[i]["Nombre"].ToString().PadRight(50, ' ');
                                                    NombreContrapartida = strAux.Substring(0, 30).TrimEnd() + "|" + strAux.Substring(30, 20).TrimEnd();
                                                    strAux = dsEntrada.Tables["Rubro"].Rows[i]["Codigo"].ToString().PadRight(18, ' ');

                                                    Contrapartida = strAux.Substring(0, 12).TrimEnd() + "-" + strAux.Substring(12, 2).TrimEnd() + "-" + strAux.Substring(14, 4).TrimEnd();
                                                    strAux = dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString().PadRight(50, ' ');

                                                    Referencia = strAux.Substring(0, 10).TrimEnd() + "|" + strAux.Substring(10, 30).TrimEnd() + "|" + strAux.Substring(40, 10).TrimEnd();
                                                    strAux = dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString().PadRight(50, ' ');

                                                    if (dsEntradaDatos.Tables["DatosTransaccion"].Columns.Contains("Referencia_Adicional"))
                                                        Referencia_Adicional = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Referencia_Adicional"].ToString();

                                                    Referencia_Adicional += "|" + NumeroId_Cliente.Substring(0, 5) + "XXXXX";
                                                    Referencia_Adicional += "|" + strAux.Substring(0, 5) + "XXXXX";
                                                }

                                                CodigoSecuencialAdicional = string.Empty;
                                                string auxJudPer = string.Empty;
                                                string aCuotas = string.Empty;
                                                string aPeriodo = string.Empty;
                                                string auxGenera_XML = string.Empty;
                                                string auxGenera_XML1 = string.Empty;

                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Linea1"))
                                                {
                                                    auxGenera_XML = dsEntrada.Tables["Rubro"].Rows[i]["Linea1"].ToString();
                                                    auxGenera_XML1 = auxGenera_XML + "!";
                                                    if (auxGenera_XML.Contains("|"))
                                                    {
                                                        string[] auxA = null;
                                                        auxA = auxGenera_XML.Split(new Char[] { '|' });
                                                        if (auxA.Length > 2)
                                                        {
                                                            aPeriodo = auxA[0].ToString();
                                                            aCuotas = auxA[1].ToString();
                                                            auxJudPer = auxA[2].ToString();
                                                            if (auxA.Length > 3)
                                                            {
                                                                auxJudPer = auxJudPer + "|" + auxA[3].ToString();
                                                            }
                                                            if (auxA.Length > 4)
                                                            {
                                                                auxJudPer = auxJudPer + "|" + auxA[4].ToString();
                                                            }
                                                        }

                                                        if (dsEntrada.Tables["Rubro"].Columns.Contains("Linea2"))
                                                        {
                                                            auxGenera_XML1 = auxGenera_XML1 + dsEntrada.Tables["Rubro"].Rows[i]["Linea2"].ToString();
                                                            if (!string.IsNullOrEmpty(dsEntrada.Tables["Rubro"].Rows[i]["Linea2"].ToString()))
                                                                auxJudPer = auxJudPer + "|" + dsEntrada.Tables["Rubro"].Rows[i]["Linea2"].ToString();
                                                        }
                                                        auxGenera_XML1 = auxGenera_XML1 + "!";
                                                        if (dsEntrada.Tables["Rubro"].Columns.Contains("Linea3"))
                                                        {
                                                            auxGenera_XML1 = auxGenera_XML1 + dsEntrada.Tables["Rubro"].Rows[i]["Linea3"].ToString();
                                                            if (!string.IsNullOrEmpty(dsEntrada.Tables["Rubro"].Rows[i]["Linea3"].ToString()))
                                                                auxJudPer = auxJudPer + "|" + dsEntrada.Tables["Rubro"].Rows[i]["Linea3"].ToString();
                                                        }
                                                    }
                                                }
                                                CodigoSecuencialAdicional = aPeriodo + "!" + aCuotas + "!" + ((auxJudPer.Length > 1) ? auxJudPer.Replace("|", "-") : auxJudPer) + "!" + auxGenera_XML1;
                                                Codigo_Tercero = CodigoSecuencialAdicional;
                                                Genera_XML = CodigoSecuencialAdicional;
                                                //Genera_XML = 2015 APR-2016 JUL ! 8 ! ACUERDO-PENSION ! ACUERDO|PENSION ! !  
                                                EventLog.WriteEntry("EasySwitch", "CONSULTA_PACIFICO_JUDICATURAPER despues de CodigoSecuencialAdicional: " + Codigo_Tercero);

                                                break;
                                            case "CONSULTA_PACIFICO_AMT":
                                                //EventLog.WriteEntry("easysoft", "Consulta AMT");
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Codigo"))
                                                    //Contrapartida = dsEntrada.Tables["Rubro"].Rows[i]["Codigo"].ToString().Substring(0, 2) + dsEntrada.Tables["Rubro"].Rows[i]["Codigo"].ToString().Substring(8, 7);
                                                    Contrapartida = dsEntrada.Tables["Rubro"].Rows[i]["Codigo"].ToString();
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Referencia"))
                                                {
                                                    Referencia = dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString();
                                                }
                                                break;
                                            case "CONSULTA_PACIFICO_CNT":
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Codigo"))
                                                    Contrapartida = dsEntrada.Tables["Rubro"].Rows[i]["Codigo"].ToString().Substring(0, 2) + dsEntrada.Tables["Rubro"].Rows[i]["Codigo"].ToString().Substring(8, 7);
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Referencia"))
                                                {
                                                    Referencia = dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString();
                                                    Referencia = Referencia.Substring(8, 15);
                                                    Referencia_Adicional = dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString();
                                                    Referencia_Adicional = Referencia_Adicional.Substring(0, 8);
                                                }
                                                break;
                                            case "CONSULTA_PACIFICO_CNTOL":
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Codigo"))
                                                    Contrapartida = dsEntrada.Tables["Rubro"].Rows[i]["Codigo"].ToString();
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Referencia"))
                                                {
                                                    Referencia_Adicional = dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString();
                                                    Referencia_Adicional = Referencia_Adicional.Substring(0, 8) + "|" + Referencia_Adicional.Substring(8, 6) + "|" + Referencia_Adicional.Substring(14, 15);
                                                }
                                                Referencia = dsEntrada.Tables["Rubro"].Rows[i]["Servicio"].ToString();

                                                //agregado por manuel.castro(30/06/2014)
                                                string strValorNew1 = string.Empty;
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("ValorCapital"))
                                                {
                                                    strValorNew1 = String.Format("{0:0.00}", Convert.ToDouble(dsEntrada.Tables["Rubro"].Rows[i]["ValorCapital"].ToString()) / 100);
                                                    if (strValorNew1 == "0.00")
                                                        strValorNew1 = "---";

                                                    Referencia_Adicional += "|" + strValorNew1 + "|";
                                                }
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("ValorInteres"))
                                                {
                                                    strValorNew1 = string.Empty;
                                                    strValorNew1 = String.Format("{0:0.00}", Convert.ToDouble(dsEntrada.Tables["Rubro"].Rows[i]["ValorInteres"].ToString()) / 100);
                                                    if (strValorNew1 == "0.00")
                                                        strValorNew1 = "---";

                                                    Referencia_Adicional += strValorNew1;
                                                }
                                                //agregado por luis.lopez (09/07/2014) Para mostrar en el comprobante el tipo de pago a realizarse.
                                                switch (Referencia.Trim())
                                                {
                                                    case "AP":
                                                        Referencia_Adicional += "|CNT - COBRO TELEFONO";
                                                        break;
                                                    case "IT":
                                                        Referencia_Adicional += "|CNT - COBRO INTERNET";
                                                        break;
                                                    case "BA":
                                                        Referencia_Adicional += "|CNT - PLANES CELULARES";
                                                        break;
                                                    case "TP":
                                                        Referencia_Adicional += "|CNT - COBRO TV PAGADA";
                                                        break;
                                                }
                                                //agregado por luis.lopez (26/06/2014) Posiblemente poner una variable para sacar identificacion ojoooooooooooooooo
                                                //para probar    NumeroId_Cliente = dsEntrada.Tables["Rubro"].Rows[i]["Identificacion"].ToString(); //<---
                                                break;

                                            //agregado por luis.lopez (08/07/2014) --Consultar el valor de la Referencia + el valor minimo de pago, y para su impresión.
                                            case "CONSULTA_PACIFICO_DPRATI":
                                                string strValorNew2 = string.Empty;
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Referencia") && dsEntrada.Tables["Rubro"].Columns.Contains("ValorCapital"))
                                                {
                                                    strValorNew2 = String.Format("{0:0.00}", Convert.ToDouble(dsEntrada.Tables["Rubro"].Rows[i]["ValorCapital"].ToString()) / 100);
                                                    if (strValorNew2 == "0.00")
                                                        strValorNew2 = "---";

                                                    Referencia = dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString()
                                                                 + " - Minimo a Pagar: "
                                                                 + strValorNew2;
                                                    Referencia_Adicional = strValorNew2.Trim(); //valor minimo a pagar
                                                }

                                                break; //<-- hasta aqui
                                            //agregado por luis.lopez (09/07/2014) --Registra el Codigo de Operación Banco para el Pago IECE.
                                            case "CONSULTA_PACIFICO_IECEOL":
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Codigo"))
                                                {
                                                    string strCodOperBan = dsEntrada.Tables["Rubro"].Rows[i]["Codigo"].ToString().Trim();
                                                    Referencia = "No.Oper.Bco: " + strCodOperBan;
                                                    //Guarda el valor de la operacion del banco en el campo de referencia adicional.
                                                    Referencia_Adicional = strCodOperBan;
                                                }
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Referencia"))
                                                {
                                                    string strCodOperIece = dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString().Trim();
                                                    if (strCodOperIece.Length >= 20)
                                                    {
                                                        Referencia += ". Cod.Oper.IECE: " + strCodOperIece.Substring(0, 20).Trim();
                                                        //Guarda el valor de la operacion del banco en el campo de referencia adicional.
                                                        Referencia_Adicional += "|" + strCodOperIece.Substring(0, 20).Trim();
                                                    }
                                                    else if ((strCodOperIece.Length >= 0) && (strCodOperIece.Length < 20))
                                                    {
                                                        Referencia += ". Cod.Oper.IECE: " + strCodOperIece.Trim();
                                                        //Guarda el valor de la operacion del banco en el campo de referencia adicional.
                                                        Referencia_Adicional += "|" + strCodOperIece.Trim();
                                                    }
                                                    else
                                                    {
                                                        Referencia += ". Cod.Oper.IECE: ---";
                                                        Referencia_Adicional += "|---";
                                                    }
                                                }
                                                break; //<--hasta aqui
                                            //agregado por luis.lopez (10/07/2014) --Registra tanto el periodo como la dirección para el pago EERCS.
                                            case "CONSULTA_PACIFICO_EERCS":
                                                string strPeriodoPago = "---";//string.Empty;
                                                string strDireccionPersona = "---";//string.Empty;
                                                string strNombrePersona = string.Empty;
                                                int numcad = 0;
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Referencia"))
                                                {
                                                    Referencia = dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString();
                                                    strPeriodoPago = Referencia.Substring(0, 20); //envia periodo de pago
                                                }
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Nombre"))
                                                {
                                                    NombreContrapartida = dsEntrada.Tables["Rubro"].Rows[i]["Nombre"].ToString();
                                                    numcad = NombreContrapartida.Length;
                                                    strNombrePersona = NombreContrapartida.Substring(0, 30);    //envia nombre de persona
                                                    strDireccionPersona = NombreContrapartida.Substring(30, (numcad - 30)); //envia direccion de persona 
                                                    NombreContrapartida = strNombrePersona;
                                                }
                                                Referencia_Adicional = strPeriodoPago.Trim() + "|" + strDireccionPersona.Trim();
                                                break; //<-- hasta aqui
                                            //agregado por luis.lopez (12/08/2014) -- Para presentar Información de MRL Consignacion/Multas 
                                            case "CONSULTA_PACIFICO_MRLRCM":
                                                string strIdEmpleado = string.Empty;
                                                string strEmpleado = string.Empty;
                                                string strEmpleador = string.Empty;
                                                string strConcepto = string.Empty;
                                                string strValorInteres = string.Empty;
                                                string strValSubtotal = string.Empty;
                                                Int32 valLongitud;
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Referencia"))
                                                {
                                                    valLongitud = dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString().Trim().Length;
                                                    if (valLongitud > 15)
                                                    {
                                                        strIdEmpleado = dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString().Substring(2, 13);
                                                        strEmpleado = dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString().Substring(15, (valLongitud - 15));
                                                        Referencia = "Id. Emp.: " + strIdEmpleado + "\n" +
                                                                      "Nom. Emp.: " + strEmpleado + "\n";
                                                    }
                                                }
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Nombre"))
                                                {
                                                    valLongitud = dsEntrada.Tables["Rubro"].Rows[i]["Nombre"].ToString().Trim().Length;
                                                    if (valLongitud > 26)
                                                    {
                                                        strEmpleador = dsEntrada.Tables["Rubro"].Rows[i]["Nombre"].ToString().Substring(0, 25);
                                                        strConcepto = dsEntrada.Tables["Rubro"].Rows[i]["Nombre"].ToString().Substring(25, (valLongitud - 25));
                                                        NombreContrapartida = "Empleador: " + strEmpleador;
                                                        Referencia += "Concepto: " + strConcepto + "\n";
                                                    }
                                                }
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("ValorCapital"))
                                                {
                                                    strValSubtotal = String.Format("{0:0.00}", Convert.ToDouble(dsEntrada.Tables["Rubro"].Rows[i]["ValorCapital"].ToString()) / 100);
                                                    if (strValSubtotal == "0.00")
                                                        strValSubtotal = "---";
                                                    Referencia += "SubTotal: " + strValSubtotal + "\n";
                                                }
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("ValorInteres"))
                                                {
                                                    strValorInteres = String.Format("{0:0.00}", Convert.ToDouble(dsEntrada.Tables["Rubro"].Rows[i]["ValorInteres"].ToString()) / 100);
                                                    if (strValorInteres == "0.00")
                                                        strValorInteres = "---";
                                                    Referencia += "Interés: " + strValorInteres;
                                                }
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Referencia") &&
                                                    dsEntrada.Tables["Rubro"].Columns.Contains("Nombre") &&
                                                    dsEntrada.Tables["Rubro"].Columns.Contains("ValorCapital") &&
                                                    dsEntrada.Tables["Rubro"].Columns.Contains("ValorInteres"))
                                                {
                                                    Referencia_Adicional = strConcepto + "|" +
                                                                           strEmpleador + "|" +
                                                                           strIdEmpleado + "|" +
                                                                           strEmpleado + "|" +
                                                                           strValSubtotal + "|" +
                                                                           strValorInteres;
                                                }
                                                break; //<-- hasta aqui
                                            case "REGISTRO_PACIFICO_EEQ":
                                            case "REGISTRO_PACIFICO_CNT":
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Referencia"))
                                                {
                                                    Referencia = dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString();
                                                    Referencia_Adicional = dsEntrada.Tables["Rubro"].Rows[i]["Referencia_Adicional"].ToString();
                                                }
                                                break;
                                            case "REGISTRO_PACIFICO_CNTOL":
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Referencia"))
                                                {
                                                    Referencia = dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString();
                                                    Referencia_Adicional = dsEntrada.Tables["Rubro"].Rows[i]["Referencia_Adicional"].ToString();
                                                }
                                                break;
                                            case "CONSULTA_PACIFICO_EEQ":
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Referencia"))
                                                {
                                                    Referencia = dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString();
                                                    Referencia = Referencia.Substring(0, 8);
                                                    Referencia_Adicional = dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString();
                                                    Referencia_Adicional = Referencia_Adicional.Substring(8, 11);
                                                }
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Codigo"))
                                                {
                                                    //Contrapartida = dsEntrada.Tables["Rubro"].Rows[i]["Codigo"].ToString();
                                                    Contrapartida = Convert.ToInt64(dsEntrada.Tables["Rubro"].Rows[i]["Codigo"].ToString()).ToString();
                                                }
                                                break;
                                            case "CONSULTA_PACIFICO_EMAAP":
                                            case "REGISTRO_PACIFICO_EPMAPS":
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Codigo"))
                                                    Contrapartida = Convert.ToInt64(dsEntrada.Tables["Rubro"].Rows[i]["Codigo"].ToString()).ToString();
                                                break;


                                            //agregado por hector.lopez (10/07/2014) se agrega el periodo como referencia adicional al pago de EPMAPS
                                            case "CONSULTA_PACIFICO_EPMAPS":
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Referencia"))
                                                {
                                                    Referencia = dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString();
                                                    Referencia_Adicional = dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString().Trim();
                                                }
                                                break; //<-- hasta aqui
                                            case "CONSULTA_PACIFICO_EMAPAI":
                                            case "CONSULTA_PACIFICO_EMAPAA":
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Codigo"))
                                                {
                                                    Referencia_Adicional = dsEntrada.Tables["Rubro"].Rows[i]["Codigo"].ToString();
                                                    Referencia_Adicional += "!" + dsEntrada.Tables["Rubro"].Rows[i]["Identificacion"].ToString();
                                                }
                                                if (dsEntradaDatos.Tables["DatosTransaccion"].Columns.Contains("Contrapartida"))
                                                    Contrapartida = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Contrapartida"].ToString();//dsEntrada.Tables["Rubro"].Rows[i]["Codigo"].ToString();
                                                Codigo_Tercero = dsEntrada.Tables["Rubro"].Rows[i]["OrdenBanco"].ToString() + "!" + dsEntrada.Tables["Rubro"].Rows[i]["Secuencial"].ToString();
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Referencia"))
                                                    Referencia = dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString();
                                                if (strTransaccion == "CONSULTA_PACIFICO_EMAPAA")
                                                    Referencia = Referencia.PadRight(20, ' ');
                                                break;
                                            case "CONSULTA_PACIFICO_ENORTE":
                                                if (dsEntradaDatos.Tables["DatosTransaccion"].Columns.Contains("Contrapartida"))
                                                    Contrapartida = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Contrapartida"].ToString();
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Referencia"))
                                                    Referencia = dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString();
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Servicio"))
                                                    Referencia_Adicional = dsEntrada.Tables["Rubro"].Rows[i]["Servicio"].ToString();
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("OrdenBanco"))
                                                    Codigo_Tercero = dsEntrada.Tables["Rubro"].Rows[i]["OrdenBanco"].ToString() + "!" + dsEntrada.Tables["Rubro"].Rows[i]["Secuencial"].ToString();

                                                break;
                                            case "CONSULTA_PACIFICO_MUNIAMBATO":
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Codigo"))
                                                    Referencia = dsEntrada.Tables["Rubro"].Rows[i]["Codigo"].ToString();
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Referencia"))
                                                    Referencia += "!" + dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString().Substring(0, 4) + "!" + dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString().Substring(4, 15) + "!" + dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString().Substring(19, 4) + "!" + dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString().Substring(23, 10) + "!" + dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString().Substring(33, dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString().Length - 33);

                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("OrdenBanco"))
                                                    Codigo_Tercero = dsEntrada.Tables["Rubro"].Rows[i]["OrdenBanco"].ToString() + "!" + dsEntrada.Tables["Rubro"].Rows[i]["Secuencial"].ToString();
                                                if (dsEntradaDatos.Tables["DatosTransaccion"].Columns.Contains("Contrapartida"))
                                                    Contrapartida = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Contrapartida"].ToString();
                                                break;
                                            case "CONSULTA_PACIFICO_MUNIIBARRA":
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Codigo"))
                                                    Referencia = dsEntrada.Tables["Rubro"].Rows[i]["Codigo"].ToString().Substring(0, 15);
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Referencia"))
                                                    Referencia += "!" + dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString();
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("FechaInicial"))
                                                    Referencia += "!" + dsEntrada.Tables["Rubro"].Rows[i]["FechaInicial"].ToString();
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("OrdenBanco"))
                                                    Codigo_Tercero = dsEntrada.Tables["Rubro"].Rows[i]["OrdenBanco"].ToString() + "!" + dsEntrada.Tables["Rubro"].Rows[i]["Secuencial"].ToString();

                                                if (dsEntradaDatos.Tables["DatosTransaccion"].Columns.Contains("Contrapartida"))
                                                    Contrapartida = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Contrapartida"].ToString();

                                                break;

                                            case "CONSULTA_PACIFICO_MUNIQUITO":
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Codigo"))
                                                {
                                                    Referencia = dsEntrada.Tables["Rubro"].Rows[i]["Codigo"].ToString().Substring(0, 17) + dsEntrada.Tables["Rubro"].Rows[i]["Nombre"].ToString().Substring(44, 5) + dsEntrada.Tables["Rubro"].Rows[i]["Codigo"].ToString().Substring(15, 3);
                                                }
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Referencia"))
                                                    Referencia += "!" + dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString().PadRight(100, ' ');

                                                if (dsEntradaDatos.Tables["DatosTransaccion"].Columns.Contains("Contrapartida"))
                                                {
                                                    Referencia_Adicional = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Contrapartida"].ToString();
                                                    Contrapartida = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Contrapartida"].ToString();
                                                }
                                                if (dsEntradaDatos.Tables["DatosTransaccion"].Columns.Contains("Contrapartida"))
                                                    Referencia_Adicional += "!" + dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Referencia_Adicional"].ToString();


                                                break;

                                            case "CONSULTA_PACIFICO_MUNIQUITOEL":
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Codigo"))
                                                {
                                                    NombreContrapartida = dsEntrada.Tables["Rubro"].Rows[i]["Nombre"].ToString().Substring(0, 43) + "!" +
                                                        dsEntrada.Tables["Rubro"].Rows[i]["Nombre"].ToString().Substring(43, 7);

                                                }

                                                //EventLog.WriteEntry("EasySwitch", "Codigo:" + dsEntrada.Tables["Rubro"].Rows[i]["Codigo"].ToString() + " Length:" + dsEntrada.Tables["Rubro"].Rows[i]["Codigo"].ToString().Length);
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Codigo"))
                                                {
                                                    Contrapartida = dsEntrada.Tables["Rubro"].Rows[i]["Codigo"].ToString().Substring(0, 12) + "!" +
                                                        dsEntrada.Tables["Rubro"].Rows[i]["Codigo"].ToString().Substring(12, 3) + "!" +
                                                        dsEntrada.Tables["Rubro"].Rows[i]["Codigo"].ToString().Substring(15, 2) + "!" +
                                                        dsEntrada.Tables["Rubro"].Rows[i]["Codigo"].ToString().Substring(17, 2) + "!" +
                                                        dsEntrada.Tables["Rubro"].Rows[i]["Codigo"].ToString().Substring(19, 1);

                                                }

                                                //EventLog.WriteEntry("EasySwitch", "Referencia:" + dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString() + " Length:" + dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString().Length);
                                                string temp = string.Empty;
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Referencia"))
                                                {
                                                    temp = dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString().PadRight(50, ' ');
                                                    Referencia = temp.Substring(0, 3) + "!" +
                                                        temp.Substring(3, 22) + "!" +
                                                        temp.Substring(25, 15) + "!" +
                                                        temp.Substring(40, 1) + "!" +
                                                        temp.Substring(41, 4) + "!" +
                                                        temp.Substring(45, 5);

                                                }

                                                break;

                                            case "CONSULTA_PACIFICO_CTG":
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Codigo"))
                                                    Referencia = dsEntrada.Tables["Rubro"].Rows[0]["Codigo"].ToString();
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Referencia"))
                                                    Referencia += "!" + dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString();
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("OrdenBanco"))
                                                    Codigo_Tercero = dsEntrada.Tables["Rubro"].Rows[i]["OrdenBanco"].ToString() + "!" + dsEntrada.Tables["Rubro"].Rows[i]["Secuencial"].ToString();
                                                if (dsEntradaDatos.Tables["DatosTransaccion"].Columns.Contains("Contrapartida"))
                                                    Contrapartida = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Contrapartida"].ToString();
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("ValorCapital"))
                                                    Referencia_Adicional = dsEntrada.Tables["Rubro"].Rows[i]["ValorCapital"].ToString();
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("ValorInteres"))
                                                    Referencia_Adicional += "!" + dsEntrada.Tables["Rubro"].Rows[i]["ValorInteres"].ToString();

                                                break;
                                            case "CONSULTA_PACIFICO_CNTTTSV":
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Referencia"))
                                                    Referencia = dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString().Trim();
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Servicio"))
                                                    Referencia_Adicional = dsEntrada.Tables["Rubro"].Rows[i]["Codigo"].ToString();
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("OrdenBanco"))
                                                    Codigo_Tercero = dsEntrada.Tables["Rubro"].Rows[i]["OrdenBanco"].ToString() + "!" + dsEntrada.Tables["Rubro"].Rows[i]["Secuencial"].ToString();
                                                if (dsEntradaDatos.Tables["DatosTransaccion"].Columns.Contains("Contrapartida"))
                                                    Contrapartida = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Contrapartida"].ToString();
                                                break;
                                            case "CONSULTA_PACIFICO_SRITDOM":
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Referencia"))
                                                {
                                                    Referencia = dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString().TrimEnd();
                                                    Referencia = Referencia.Substring(0, 25).Trim() + "|" + Referencia.Substring(25, (Referencia.Length - 25)).Trim();
                                                }
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Codigo"))
                                                {
                                                    Contrapartida = dsEntrada.Tables["Rubro"].Rows[i]["Codigo"].ToString();
                                                    if (Contrapartida == string.Empty)
                                                        Contrapartida = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Contrapartida"].ToString();
                                                }
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("OrdenBanco"))
                                                    Codigo_Tercero = dsEntrada.Tables["Rubro"].Rows[i]["OrdenBanco"].ToString() + "!" + dsEntrada.Tables["Rubro"].Rows[i]["Secuencial"].ToString();
                                                break;

                                            case "CONSULTA_PACIFICO_SRIMAT":
                                                //EventLog.WriteEntry("EasySwitch","1",EventLogEntryType.Warning);
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Nombre"))
                                                {
                                                    NombreContrapartida = dsEntrada.Tables["Rubro"].Rows[i]["Nombre"].ToString();
                                                    NombreContrapartida = NombreContrapartida.Substring(0, 30) + "|" + NombreContrapartida.Substring(30, (NombreContrapartida.Length - 30));
                                                }

                                                //EventLog.WriteEntry("EasySwitch", "2", EventLogEntryType.Warning);

                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Referencia"))
                                                {
                                                    Referencia = dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString().TrimEnd();

                                                    double dblVal = Convert.ToDouble(Referencia.Substring(50, 8).Trim()) / 100;
                                                    string strVal = "---";
                                                    if (dblVal > 0)
                                                        strVal = String.Format("{0:0.00}", dblVal);

                                                    Referencia = Referencia.Substring(0, 25).Trim() + "|" + Referencia.Substring(25, 25).Trim() + "|" + strVal;
                                                }

                                                //EventLog.WriteEntry("EasySwitch", "3", EventLogEntryType.Warning);

                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Servicio"))
                                                    Referencia_Adicional = dsEntrada.Tables["Rubro"].Rows[i]["Servicio"].ToString();
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Codigo"))
                                                {
                                                    Contrapartida = dsEntrada.Tables["Rubro"].Rows[i]["Codigo"].ToString();
                                                    if (Contrapartida == string.Empty)
                                                        Contrapartida = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Contrapartida"].ToString();
                                                }

                                                //EventLog.WriteEntry("EasySwitch", "4", EventLogEntryType.Warning);

                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("OrdenBanco"))
                                                    Codigo_Tercero = dsEntrada.Tables["Rubro"].Rows[i]["OrdenBanco"].ToString() + "!" + dsEntrada.Tables["Rubro"].Rows[i]["Secuencial"].ToString();

                                                string strValorNew = string.Empty;
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("ValorCapital"))
                                                {
                                                    strValorNew = String.Format("{0:0.00}", Convert.ToDouble(dsEntrada.Tables["Rubro"].Rows[i]["ValorCapital"].ToString().Substring(0, 8)) / 100);
                                                    if (strValorNew == "0.00")
                                                        strValorNew = "---";

                                                    Genera_XML = strValorNew;

                                                    strValorNew = string.Empty;
                                                    strValorNew = String.Format("{0:0.00}", Convert.ToDouble(dsEntrada.Tables["Rubro"].Rows[i]["ValorCapital"].ToString().Substring(8, 7)) / 100);
                                                    if (strValorNew == "0.00")
                                                        strValorNew = "---";

                                                    Genera_XML += "|" + strValorNew;
                                                }

                                                //EventLog.WriteEntry("EasySwitch", "4.1", EventLogEntryType.Warning);

                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("ValorMora"))
                                                {
                                                    strValorNew = String.Format("{0:0.00}", Convert.ToDouble(dsEntrada.Tables["Rubro"].Rows[i]["ValorMora"].ToString().Substring(0, 8)) / 100);
                                                    if (strValorNew == "0.00")
                                                        strValorNew = "---";

                                                    Genera_XML += "|" + strValorNew;

                                                    strValorNew = String.Format("{0:0.00}", Convert.ToDouble(dsEntrada.Tables["Rubro"].Rows[i]["ValorMora"].ToString().Substring(8, 7)) / 100);
                                                    if (strValorNew == "0.00")
                                                        strValorNew = "---";

                                                    Genera_XML += "|" + strValorNew;
                                                }

                                                //EventLog.WriteEntry("EasySwitch", "5", EventLogEntryType.Warning);

                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("ValorMulta"))
                                                {
                                                    strValorNew = String.Format("{0:0.00}", Convert.ToDouble(dsEntrada.Tables["Rubro"].Rows[i]["ValorMulta"].ToString().Substring(0, 8)) / 100);
                                                    if (strValorNew == "0.00")
                                                        strValorNew = "---";

                                                    Genera_XML += "|" + strValorNew;

                                                    strValorNew = String.Format("{0:0.00}", Convert.ToDouble(dsEntrada.Tables["Rubro"].Rows[i]["ValorMulta"].ToString().Substring(8, 7)) / 100);
                                                    if (strValorNew == "0.00")
                                                        strValorNew = "---";

                                                    Genera_XML += "|" + strValorNew;
                                                }

                                                //EventLog.WriteEntry("EasySwitch", "7", EventLogEntryType.Warning);

                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("ValorInteres"))
                                                {
                                                    Referencia_SWIFT = String.Format("{0:0.00}", Convert.ToDouble(dsEntrada.Tables["Rubro"].Rows[i]["ValorInteres"].ToString()) / 100);
                                                    if (Referencia_SWIFT == "0.00")
                                                        Referencia_SWIFT = "---";
                                                }

                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("CobroComision"))
                                                    CobroComision = dsEntrada.Tables["Rubro"].Rows[i]["CobroComision"].ToString();

                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("ValorComision"))
                                                    ValorComision = String.Format("{0:0.00}", Convert.ToDouble(dsEntrada.Tables["Rubro"].Rows[i]["ValorComision"].ToString()) / 100);
                                                break;

                                            case "CONSULTA_PACIFICO_AMAGUA":
                                            case "CONSULTA_PACIFICO_AGUAPEN":

                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Referencia"))
                                                    Referencia_Adicional = dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString().Length > 15 ? dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString().Substring(0, 15) : dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString();
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Codigo"))
                                                {
                                                    Contrapartida = dsEntrada.Tables["Rubro"].Rows[i]["Codigo"].ToString();
                                                }

                                                break;
                                            case "CONSULTA_PACIFICO_PPSBONO":
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Codigo"))
                                                    Referencia = dsEntrada.Tables["Rubro"].Rows[i]["Codigo"].ToString();
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Referencia"))
                                                    Referencia += "!" + dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString();
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Nombre"))
                                                {
                                                    string strNombre = dsEntrada.Tables["Rubro"].Rows[i]["Nombre"].ToString();

                                                    if (strNombre.Length < 58)
                                                    {
                                                        strNombre = strNombre.PadRight(60, ' ');
                                                    }
                                                    NombreContrapartida = strNombre.Substring(0, 50) + "!" + strNombre.Substring(50, 4) + "-" + strNombre.Substring(54, 2) + "-" + strNombre.Substring(56, 2);
                                                }
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("FechaInicial"))
                                                    Referencia_Adicional = dsEntrada.Tables["Rubro"].Rows[i]["FechaInicial"].ToString().Substring(0, 4) + "-" + dsEntrada.Tables["Rubro"].Rows[i]["FechaInicial"].ToString().Substring(4, 2) + "-" + dsEntrada.Tables["Rubro"].Rows[i]["FechaInicial"].ToString().Substring(6, 2);

                                                Numero_Documento = EnmascararCedula(NumeroId_Cliente);

                                                break;
                                            case "CONSULTA_PACIFICO_MUNIGYE":

                                                if (dsEntradaDatos.Tables["DatosTransaccion"].Columns.Contains("Referencia_Adicional"))
                                                    Referencia_Adicional = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Referencia_Adicional"].ToString();
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Referencia"))
                                                    Referencia = dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString();

                                                Contrapartida = dsEntrada.Tables["Rubro"].Rows[i]["Codigo"].ToString();
                                                if (Contrapartida == string.Empty)
                                                    Contrapartida = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Contrapartida"].ToString();

                                                break;

                                            case "CONSULTA_PACIFICO_TVCABLEOL":

                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Referencia"))
                                                {
                                                    Referencia = dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString().Substring(0, 15) + "!" + dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString().Substring(15, 15);
                                                    Contrapartida = dsEntrada.Tables["Rubro"].Rows[i]["Codigo"].ToString();
                                                    //TipoId_Cliente = dsEntrada.Tables["Rubro"].Rows[i]["TipoId_Cliente"].ToString();
                                                    //NumeroId_Cliente = dsEntrada.Tables["Rubro"].Rows[i]["NumeroId_Cliente"].ToString();
                                                }
                                                break;
                                            case "CONSULTA_PACIFICO_ANTOSOLIC":
                                                if (dsEntradaDatos.Tables["DatosTransaccion"].Columns.Contains("Referencia"))
                                                {
                                                    Referencia = dsEntradaDatos.Tables["DatosTransaccion"].Rows[i]["Referencia"].ToString();
                                                }
                                                break;
                                            case "CONSULTA_PACIFICO_MOVIDELNOROL":
                                                //EventLog.WriteEntry("EasySwitch-MOVIDELNOROL", "Transformar tramaSalida DSENTRADA= " + dsEntrada.GetXml());
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Referencia"))
                                                {
                                                    Referencia_Adicional = dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString();
                                                    Referencia = dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString();
                                                }
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Codigo"))
                                                {
                                                    Contrapartida = dsEntrada.Tables["Rubro"].Rows[i]["Codigo"].ToString();
                                                    if (Contrapartida == string.Empty)
                                                    {
                                                        if (dsEntradaDatos.Tables["DatosTransaccion"].Columns.Contains("Contrapartida"))
                                                            Contrapartida = (string)dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Contrapartida"];
                                                    }
                                                }
                                                break;

                                            case "CONSULTA_PACIFICO_PORTOVIAL":
                                                //EventLog.WriteEntry("EasySwitch", "PORTOVIAL TTS Transformar tramaSalida DSENTRADA= " + dsEntrada.GetXml());
                                                //EventLog.WriteEntry("EasySwitch", "PORTOVIAL TTS Transformar tramaSalida dsEntradaDatos= " + dsEntradaDatos.GetXml());
                                                //2019-04-25 se cambio para que obtenga la referencia del xml de entrada y no de la respuesta del banco porque no devuelve tipo servicio
                                                //verificar movidelnorte
                                                if (dsEntradaDatos.Tables["DatosTransaccion"].Columns.Contains("Referencia"))
                                                {
                                                    Referencia_Adicional = dsEntradaDatos.Tables["DatosTransaccion"].Rows[i]["Referencia"].ToString();
                                                    //Referencia = dsEntradaDatos.Tables["Rubro"].Rows[i]["Referencia"].ToString();
                                                }
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Referencia"))
                                                {
                                                    //Referencia_Adicional = dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString();
                                                    Referencia = dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString();
                                                }
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Codigo"))
                                                {
                                                    Contrapartida = dsEntrada.Tables["Rubro"].Rows[i]["Codigo"].ToString();
                                                    if (Contrapartida == string.Empty)
                                                    {
                                                        if (dsEntradaDatos.Tables["DatosTransaccion"].Columns.Contains("Contrapartida"))
                                                            Contrapartida = (string)dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Contrapartida"];
                                                    }
                                                }
                                                break;

                                            case "CONSULTA_PACIFICO_ARCSA":
                                                if (dsEntradaDatos.Tables["DatosTransaccion"].Columns.Contains("ContraPartida"))
                                                    Contrapartida = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["ContraPartida"].ToString();
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Referencia"))
                                                    Referencia = dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString();

                                                break;

                                            default:
                                                //EventLog.WriteEntry("EasySwitch", "Transformar tramaSalida \nReferencia_Adicional= " + dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Referencia_Adicional"].ToString());
                                                if (dsEntradaDatos.Tables["DatosTransaccion"].Columns.Contains("Referencia_Adicional"))
                                                    Referencia_Adicional = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Referencia_Adicional"].ToString();

                                                if (strTran == "CONSULTA_PACIFICO_SRICEP")
                                                {
                                                    if (dsEntrada.Tables["Rubro"].Columns.Contains("Referencia"))
                                                        Referencia = dsEntrada.Tables["Rubro"].Rows[0]["Referencia"].ToString();
                                                }
                                                else
                                                {
                                                    if (dsEntrada.Tables["Rubro"].Columns.Contains("Referencia"))
                                                    {
                                                        //EventLog.WriteEntry("EasySwitch", "Entre en la referencia:len:" + dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString().Length);
                                                        Referencia = dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString().TrimEnd();
                                                        if (strTran == "CONSULTA_PACIFICO_ANTT" || strTran == "CONSULTA_PACIFICO_ANTC" || strTran == "CONSULTA_PACIFICO_ANT")
                                                        {
                                                            if (Referencia == "")
                                                                Referencia = "---";
                                                        }

                                                        if (strTran == "CONSULTA_PACIFICO_INTERAGUAOL")
                                                        {
                                                            if (Referencia.Length > 1)
                                                                Referencia = Referencia.Substring(0, 2);
                                                        }

                                                        if (strTran == "CONSULTA_PACIFICO_IESSOL")
                                                        {
                                                            ReferenciaAuxiliar = Referencia;
                                                            if (Referencia_Adicional == "001" || Referencia_Adicional == "003")
                                                            {
                                                                if (Referencia.Length >= 30)
                                                                {
                                                                    result = Referencia.Substring(0, 4) + "-" + Referencia.Substring(4, 10) + "!" + Referencia.Substring(14, 8) + "!" + Referencia.Substring(22, 8);
                                                                }
                                                            }
                                                            else if (Referencia_Adicional == "002")
                                                            {
                                                                if (Referencia.Length >= 26)
                                                                {
                                                                    result = Referencia.Substring(0, 10) + "!" + Referencia.Substring(10, 8) + "!" + Referencia.Substring(18, 8);
                                                                }
                                                            }
                                                            Referencia = ReferenciaAuxiliar + "!" + result;
                                                        }
                                                    }
                                                }

                                                if (dsEntradaDatos.Tables["DatosTransaccion"].Columns.Contains("Numero_Documento"))
                                                    Numero_Documento = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Numero_Documento"].ToString();


                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("Codigo"))
                                                {
                                                    Contrapartida = dsEntrada.Tables["Rubro"].Rows[i]["Codigo"].ToString();
                                                    if (Contrapartida == string.Empty)
                                                    {
                                                        if (dsEntradaDatos.Tables["DatosTransaccion"].Columns.Contains("Contrapartida"))
                                                            Contrapartida = (string)dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Contrapartida"];
                                                    }
                                                    if (strTran == "CONSULTA_PACIFICO_ATMOL")
                                                    {
                                                        Contrapartida = Contrapartida + "-" + dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Contrapartida"].ToString();
                                                    }

                                                }
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("OrdenBanco"))
                                                    Codigo_Tercero = dsEntrada.Tables["Rubro"].Rows[i]["OrdenBanco"].ToString() + "!" + dsEntrada.Tables["Rubro"].Rows[i]["Secuencial"].ToString();

                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("ValorCapital"))
                                                {
                                                    Genera_XML = String.Format("{0:0.00}", Convert.ToDouble(dsEntrada.Tables["Rubro"].Rows[i]["ValorCapital"].ToString()) / 100);
                                                    if (Genera_XML == "0.00")
                                                        Genera_XML = "---";
                                                }
                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("ValorInteres"))
                                                {
                                                    Referencia_SWIFT = String.Format("{0:0.00}", Convert.ToDouble(dsEntrada.Tables["Rubro"].Rows[i]["ValorInteres"].ToString()) / 100);
                                                    if (Referencia_SWIFT == "0.00")
                                                        Referencia_SWIFT = "---";
                                                }

                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("CobroComision"))
                                                    CobroComision = dsEntrada.Tables["Rubro"].Rows[i]["CobroComision"].ToString();

                                                if (dsEntrada.Tables["Rubro"].Columns.Contains("ValorComision"))
                                                    ValorComision = String.Format("{0:0.00}", Convert.ToDouble(dsEntrada.Tables["Rubro"].Rows[i]["ValorComision"].ToString()) / 100);

                                                if (strTran == "CONSULTA_PACIFICO_ANTO")
                                                    Contrapartida = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Contrapartida"].ToString().PadLeft(10, '0');

                                                if (strTran == "CONSULTA_PACIFICO_ARCOTEL" || strTran == "CONSULTA_PACIFICO_MUNIOTAVALO")
                                                {
                                                    //EventLog.WriteEntry("EasySwitch", "Entre en la referencia:len:" + dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString().Length);

                                                    ReferenciaAuxiliar = Referencia;

                                                    if (strTran == "CONSULTA_PACIFICO_MUNIOTAVALO")
                                                    {
                                                        if (Referencia.Length > 40)
                                                        {
                                                            result = Referencia.Substring(0, 40).ToString() + "!" + Referencia.Substring(40, 6).ToString() + "!" + Referencia.Substring(46, (Referencia.Length - 46)).ToString();
                                                            ReferenciaAuxiliar = Referencia.Substring(0, 40).ToString().Trim();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        result = Regex.Replace(Referencia, "\\s+", "!");
                                                    }
                                                    Referencia = ReferenciaAuxiliar + "!" + result;
                                                    ContrapartidaOriginal = Contrapartida;
                                                    result = Regex.Replace(Contrapartida, "\\s+", "!");
                                                    Contrapartida = ContrapartidaOriginal + "!" + result;

                                                    //EventLog.WriteEntry("EasySwitch", "Entre en la referencia:len:" + Referencia.ToString().Length);
                                                }
                                                if (strTran == "CONSULTA_PACIFICO_EMAPOTAV")
                                                {
                                                    if (Referencia.Length > 40)
                                                    {
                                                        Referencia = Referencia + "!" + Referencia.Substring(0, 40).ToString()
                                                            + "!" + Referencia.Substring(40, 3).ToString()
                                                            + "!" + Referencia.Substring(43, 2).ToString()
                                                            + "!" + Referencia.Substring(45, 4).ToString();
                                                    }
                                                }

                                                Referencia = Referencia.Trim();

                                                if (strTran == "CONSULTA_PACIFICO_CISNERGIA")
                                                {
                                                    if (Referencia.Length > 0)
                                                    {
                                                        Referencia = Referencia + "!" + Referencia.Substring(0, 8).ToString()
                                                            + "!" + Referencia.Substring(8, (Referencia.Length - 8)).ToString();
                                                    }
                                                }

                                                if (strTran == "CONSULTA_PACIFICO_YANBAL")
                                                {
                                                    DataSet dsYanbal = new DataSet();
                                                    dsYanbal = adm.ObtenerTablas("'YANBAL'", string.Empty);
                                                    DataTable dtYanbal = dsYanbal.Tables["Tablas"];
                                                    if (dtYanbal.Rows.Count > 0)
                                                    {
                                                        string expression = "TABLAArgumento =" + Referencia_Adicional;
                                                        DataRow[] selectedRows = dtYanbal.Select(expression);
                                                        Referencia = Referencia + "|" + selectedRows[0]["TABLADescripcion"].ToString();
                                                    }
                                                }

                                                if (strTran == "CONSULTA_PACIFICO_SRIAJUSTES")
                                                {
                                                    if (dsEntrada.Tables.Contains("Rubro"))
                                                    {
                                                        if (dsEntrada.Tables["Rubro"].Columns.Contains("Nombre"))
                                                        {
                                                            string strNombreSri = dsEntrada.Tables["Rubro"].Rows[i]["Nombre"].ToString();
                                                            NombreContrapartida = strNombreSri;

                                                            if (strNombreSri.Length > 30)
                                                            {
                                                                NombreContrapartida = strNombreSri.ToString() + "!" + strNombreSri.Substring(0, 30).ToString() + "!" + strNombreSri.Substring(30, (strNombreSri.Length - 30)).ToString();
                                                            }

                                                            if (Referencia.Length > 0 & Referencia.Length > 25)
                                                            {
                                                                Referencia = Referencia + "!" + Referencia.Substring(0, 25).ToString().Trim()
                                                                    + "!" + Referencia.Substring(25, (Referencia.Length - 25)).ToString().Trim();
                                                            }

                                                            if (dsEntrada.Tables["Rubro"].Columns.Contains("ValorInteres"))
                                                            {
                                                                Referencia_SWIFT = String.Format("{0:0.00}", Convert.ToDouble(dsEntrada.Tables["Rubro"].Rows[i]["ValorInteres"].ToString()) / 100);
                                                            }

                                                            if (dsEntrada.Tables["Rubro"].Columns.Contains("ValorCapital"))
                                                            {
                                                                string ValCapiSri = dsEntrada.Tables["Rubro"].Rows[i]["ValorCapital"].ToString();

                                                                if (ValCapiSri.Length > 8)
                                                                {
                                                                    Genera_XML = ValCapiSri + "|" + String.Format("{0:0.00}", Convert.ToDouble(ValCapiSri.Substring(0, 8).ToString()) / 100)
                                                                   + "|" + String.Format("{0:0.00}", Convert.ToDouble(ValCapiSri.Substring(8, (ValCapiSri.Length - 8)).ToString()) / 100);
                                                                }
                                                            }

                                                            if (dsEntrada.Tables["Rubro"].Columns.Contains("ValorMora"))
                                                            {
                                                                strValorNew = string.Empty;
                                                                strValorNew = dsEntrada.Tables["Rubro"].Rows[i]["ValorMora"].ToString();
                                                                if (strValorNew.Length > 8)
                                                                {
                                                                    Genera_XML = Genera_XML + "|" + String.Format("{0:0.00}", Convert.ToDouble(strValorNew.Substring(0, 8).ToString()) / 100)
                                                                   + "|" + String.Format("{0:0.00}", Convert.ToDouble(strValorNew.Substring(8, (strValorNew.Length - 8)).ToString()) / 100);
                                                                }
                                                            }

                                                            if (dsEntrada.Tables["Rubro"].Columns.Contains("ValorMulta"))
                                                            {
                                                                strValorNew = string.Empty;
                                                                strValorNew = dsEntrada.Tables["Rubro"].Rows[i]["ValorMulta"].ToString();
                                                                if (strValorNew.Length > 8)
                                                                {
                                                                    Genera_XML = Genera_XML + "|" + String.Format("{0:0.00}", Convert.ToDouble(strValorNew.Substring(0, 8).ToString()) / 100)
                                                                   + "|" + String.Format("{0:0.00}", Convert.ToDouble(strValorNew.Substring(8, (strValorNew.Length - 8)).ToString()) / 100);
                                                                }
                                                            }

                                                            Genera_XML = Genera_XML.Replace("|0.00", "|---");

                                                            if (dsEntrada.Tables["Rubro"].Columns.Contains("CobroComision"))
                                                                CobroComision = dsEntrada.Tables["Rubro"].Rows[i]["CobroComision"].ToString();
                                                            if (dsEntrada.Tables["Rubro"].Columns.Contains("ValorComision"))
                                                                ValorComision = String.Format("{0:0.00}", Convert.ToDouble(dsEntrada.Tables["Rubro"].Rows[i]["ValorComision"].ToString()) / 100);
                                                        }
                                                    }
                                                }
                                                break;
                                        }
                                    }

                                    EventLog.WriteEntry("EasySwitch", " strTran Transformar trama salida=" + strTran);

                                    if (strTran == "CONSULTA_PACIFICO_MASTER_1")
                                    {
                                        if (dsEntrada.Tables["Cabecera"].Columns.Contains("Tipo"))
                                            Referencia_Adicional = Contrapartida = dsEntrada.Tables["Cabecera"].Rows[0]["Tipo"].ToString();
                                        if (dsEntradaDatos.Tables["DatosTransaccion"].Columns.Contains("ContraPartida"))
                                            NumeroId_Cliente = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["ContraPartida"].ToString();

                                    }

                                    if (strTran == "CONSULTA_PACIFICO_RET")
                                    {
                                        if (dsEntradaDatos.Tables["DatosTransaccion"].Columns.Contains("Referencia_Adicional"))
                                            Referencia_Adicional = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Referencia_Adicional"].ToString();
                                        if (dsEntradaDatos.Tables["DatosTransaccion"].Columns.Contains("NumeroId_Cliente"))
                                            NumeroId_Cliente = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["NumeroId_Cliente"].ToString();
                                    }


                                    if (strTran == "CONSULTA_PACIFICO_RET" || strTran == "CONSULTA_PACIFICO_MASTER_1")
                                    {
                                        EventLog.WriteEntry("EasySwitch", "Transformar trama Salida CONSULTA_PACIFICO_RET dsEntrada:" + dsEntrada.GetXml());
                                        EventLog.WriteEntry("EasySwitch", "Transformar trama Salida CONSULTA_PACIFICO_RET dsEntradaDatos:" + dsEntradaDatos.GetXml());
                                        if (dsEntrada.Tables.Contains("Cabecera"))
                                        {
                                            if (dsEntrada.Tables["Cabecera"].Columns.Contains("Nombre"))
                                                NombreContrapartida = dsEntrada.Tables["Cabecera"].Rows[0]["Nombre"].ToString();

                                            //if (dsEntradaDatos.Tables["DatosTransaccion"].Columns.Contains("NumeroId_Cliente"))
                                            //    NumeroId_Cliente = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["NumeroId_Cliente"].ToString();

                                            if (dsEntradaDatos.Tables["DatosTransaccion"].Columns.Contains("TipoId_Cliente"))
                                                TipoId_Cliente = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["TipoId_Cliente"].ToString();

                                            if (dsEntrada.Tables["Cabecera"].Columns.Contains("NumeroCuenta"))
                                                Referencia = Contrapartida = dsEntrada.Tables["Cabecera"].Rows[0]["NumeroCuenta"].ToString();
                                        }
                                        if (dsEntradaDatos.Tables["DatosTransaccion"].Columns.Contains("Numero_Documento"))
                                        // Numero_Documento = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Numero_Documento"].ToString();
                                        {
                                            Numero_Documento = "XXXXXXXXXXXX" + dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["ContraPartida"].ToString();
                                        }
                                        if (dsEntradaDatos.Tables["DatosTransaccion"].Columns.Contains("Moneda"))
                                            Moneda = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Moneda"].ToString();
                                        //    if (dsEntradaDatos.Tables["DatosTransaccion"].Columns.Contains("Referencia_Adicional"))
                                        //     Referencia_Adicional = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Referencia_Adicional"].ToString();
                                    }

                                    if (strTran != "CONSULTA_PACIFICO_SRIMAT" & strTran != "CONSULTA_PACIFICO_SRIAJUSTES")
                                    {
                                        if (dsEntrada.Tables.Contains("Rubro"))
                                        {
                                            if (dsEntrada.Tables["Rubro"].Columns.Contains("ValorCapital") & strTran != "CONSULTA_PACIFICO_JUDICATURAPER")
                                            {
                                                Genera_XML = String.Format("{0:0.00}", Convert.ToDouble(dsEntrada.Tables["Rubro"].Rows[i]["ValorCapital"].ToString()) / 100);
                                                if (Genera_XML == "0.00")
                                                    Genera_XML = "---";
                                            }
                                            if (dsEntrada.Tables["Rubro"].Columns.Contains("ValorInteres"))
                                            {
                                                Referencia_SWIFT = String.Format("{0:0.00}", Convert.ToDouble(dsEntrada.Tables["Rubro"].Rows[i]["ValorInteres"].ToString()) / 100);
                                                if (Referencia_SWIFT == "0.00")
                                                    Referencia_SWIFT = "---";
                                            }
                                            if (dsEntrada.Tables["Rubro"].Columns.Contains("CobroComision"))
                                                CobroComision = dsEntrada.Tables["Rubro"].Rows[i]["CobroComision"].ToString();

                                            if (dsEntrada.Tables["Rubro"].Columns.Contains("ValorComision"))
                                                ValorComision = String.Format("{0:0.00}", Convert.ToDouble(dsEntrada.Tables["Rubro"].Rows[i]["ValorComision"].ToString()) / 100);
                                        }
                                    }

                                    if (strTran == "CONSULTA_PACIFICO_SRIRISE")
                                    {
                                        if (Referencia_Adicional == "G")
                                        {
                                            if (Genera_XML != "---")
                                            {
                                                Valor = Genera_XML;
                                                //Referencia_Adicional = "F";
                                            }
                                            Referencia += "|PAGO GLOBAL";
                                        }
                                        else
                                        {
                                            Referencia += "|PAGO A LA FECHA";
                                        }
                                    }

                                  //  //EventLog.WriteEntry("easysoft", "1 CONSULTA_PACIFICO_ANTENLINEA");
                                    // EventLog.WriteEntry("easysoft", "2 CONSULTA_PACIFICO_ANTENLINEA dsEntradaDatos=" + dsEntradaDatos.GetXml());
                                    if (strTran == "CONSULTA_PACIFICO_ANTENLINEA")
                                    {
                                        if (dsEntradaDatos.Tables["DatosTransaccion"].Columns.Contains("Contrapartida"))
                                            Contrapartida = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Contrapartida"].ToString();
                                        if (dsEntradaDatos.Tables["DatosTransaccion"].Columns.Contains("Referencia"))
                                        {
                                            Referencia = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Referencia"].ToString() + dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Numero_Documento"].ToString();
                                            Referencia_Adicional = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Referencia"].ToString() + "!" + dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Numero_Documento"].ToString();
                                        }
                                    }
                                    if (strTran == "CONSULTA_PACIFICO_CONTRALORIA")
                                    {
                                        if (dsEntrada.Tables["Rubro"].Columns.Contains("OrdenBanco"))
                                            Codigo_Tercero = dsEntrada.Tables["Rubro"].Rows[i]["OrdenBanco"].ToString() + "!" + dsEntrada.Tables["Rubro"].Rows[i]["Secuencial"].ToString();

                                    }
                                    if (strTran == "CONSULTA_PACIFICO_ESMENA")
                                    {
                                        if (dsEntrada.Tables["Rubro"].Columns.Contains("Linea1"))
                                            Referencia_Adicional = dsEntrada.Tables["Rubro"].Rows[i]["Linea1"].ToString();

                                    }

                                    //Para tomar un valor de la trma de salida de consulta
                                    if (strTran == "CONSULTA_PACIFICO_SENESCYT")
                                    {
                                        if (dsEntrada.Tables["Rubro"].Columns.Contains("RefAdicional"))
                                            Referencia_Adicional = dsEntrada.Tables["Rubro"].Rows[i]["RefAdicional"].ToString();                                    
                                    }
                                    //Para tomar un valor de la trma de salida de consulta BABAHOYO
                                    if (strTran == "CONSULTA_PACIFICO_BABAHOYOEP")
                                    {
                                       
                                       // Numero_Documento = Referencia;
                                        Numero_Documento = Referencia.Substring(0, 1);
                                      //  EventLog.WriteEntry("easysoft", "Numero_Documento"+ Referencia.Length+" Sub:"+Referencia.Substring(1, Referencia.Length));
                                        //.Substring(1, Referencia.Length);
                                        //     if (dsEntrada.Tables["Rubro"].Columns.Contains("Referencia"))
                                        //         Referencia_Adicional = dsEntrada.Tables["Rubro"].Rows[i]["Referencia"].ToString();
                                        //     Referencia_Adicional = Referencia_Adicional.Substring(2, Referencia_Adicional.Length);
                                    }

                                    if (strEstadoTransaccion == "OFFLINE" && strTran != "CONSULTA_PACIFICO_MUNIQUITOEL" && strTran != "CONSULTA_PACIFICO_JUDICATURAPER")
                                    {

                                        if (dsEntradaDatos.Tables["DatosTransaccion"].Columns.Contains("Contrapartida"))
                                            Contrapartida = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Contrapartida"].ToString();

                                        if (dsEntradaDatos.Tables["DatosTransaccion"].Columns.Contains("Codigo"))
                                            Contrapartida = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Codigo"].ToString();
                                        Fecha_Proceso = DateTime.Now.ToString("yyyyMMdd");
                                    }

                                    //Para hacer que el valor de Referencia_TX no se acumule hasta formar una trama grande pues da error al insertar items con este campo largo si hay mas de dos items en la consulta
                                    if (i >= 2)
                                    {
                                        Referencia_TX = string.Empty;
                                    }

                                    CalcularDesgloceIva(valorIva, ref ValorComision, ref Referencia_TX, strTran);

                                    bool valorMayorCero = Convert.ToDouble(Valor) > 0;
                                    if (strTran == "CONSULTA_PACIFICO_DEPOSITOS" || strTran == "CONSULTA_PACIFICO_RET" || strTran == "CONSULTA_PACIFICO_MASTER_1")
                                    {
                                        valorMayorCero = true;
                                    }
                                    //calcula cual es el valor del iva a cobrar sea este 0% o 12%
                                    //if (Convert.ToDouble(Valor) > 0)
                                    //Insercion en items
                                    if (valorMayorCero)
                                    {
                                        XmlNode datos = xmldatos.CreateElement("NumeroId_Cliente"); datos.InnerText = NumeroId_Cliente; dtDatosTransaccion.AppendChild(datos);
                                        datos = xmldatos.CreateElement("TipoId_Cliente"); datos.InnerText = TipoId_Cliente; dtDatosTransaccion.AppendChild(datos);
                                        datos = xmldatos.CreateElement("Fecha_Proceso"); datos.InnerText = Fecha_Proceso; dtDatosTransaccion.AppendChild(datos);
                                        datos = xmldatos.CreateElement("Codigo_Retorno"); datos.InnerText = Codigo_Retorno; dtDatosTransaccion.AppendChild(datos);
                                        datos = xmldatos.CreateElement("MensajeRetorno"); datos.InnerText = MensajeRetorno; dtDatosTransaccion.AppendChild(datos);
                                        datos = xmldatos.CreateElement("Valor"); datos.InnerText = Valor; dtDatosTransaccion.AppendChild(datos);
                                        datos = xmldatos.CreateElement("Moneda"); datos.InnerText = Moneda; dtDatosTransaccion.AppendChild(datos);
                                        datos = xmldatos.CreateElement("NombreContrapartida"); datos.InnerText = NombreContrapartida; dtDatosTransaccion.AppendChild(datos);
                                        datos = xmldatos.CreateElement("Referencia"); datos.InnerText = Referencia; dtDatosTransaccion.AppendChild(datos);
                                        datos = xmldatos.CreateElement("Referencia_Adicional"); datos.InnerText = Referencia_Adicional; dtDatosTransaccion.AppendChild(datos);
                                        datos = xmldatos.CreateElement("Contrapartida"); datos.InnerText = Contrapartida; dtDatosTransaccion.AppendChild(datos);
                                        datos = xmldatos.CreateElement("Genera_XML"); datos.InnerText = Genera_XML; dtDatosTransaccion.AppendChild(datos);
                                        datos = xmldatos.CreateElement("Referencia_SWIFT"); datos.InnerText = Referencia_SWIFT; dtDatosTransaccion.AppendChild(datos);
                                        datos = xmldatos.CreateElement("Banco"); datos.InnerText = CodigoBanco; dtDatosTransaccion.AppendChild(datos);
                                        datos = xmldatos.CreateElement("Comision"); datos.InnerText = ValorComision; dtDatosTransaccion.AppendChild(datos);
                                        datos = xmldatos.CreateElement("Codigo_Tercero"); datos.InnerText = Codigo_Tercero; dtDatosTransaccion.AppendChild(datos);
                                        datos = xmldatos.CreateElement("Ciudad_Cliente"); datos.InnerText = Ciudad_Cliente; dtDatosTransaccion.AppendChild(datos);
                                        datos = xmldatos.CreateElement("Referencia_TX"); datos.InnerText = Referencia_TX; dtDatosTransaccion.AppendChild(datos);
                                        datos = xmldatos.CreateElement("Numero_Documento"); datos.InnerText = Numero_Documento; dtDatosTransaccion.AppendChild(datos);
                                      //  datos = xmldatos.CreateElement("Numero_Documento"); datos.InnerText ="111"; dtDatosTransaccion.AppendChild(datos);
                                        dsSalida.AppendChild(dtDatosTransaccion);
                                    }
                                    else
                                    {
                                        contador++;
                                    }
                                }
                                if (contador == intCantidadegistros)
                                {
                                    XmlNode dtDatosTransaccion = xmldatos.CreateElement("dtDatosTransaccion");
                                    XmlNode datos = xmldatos.CreateElement("NumeroId_Cliente"); datos.InnerText = NumeroId_Cliente; dtDatosTransaccion.AppendChild(datos);
                                    datos = xmldatos.CreateElement("TipoId_Cliente"); datos.InnerText = TipoId_Cliente; dtDatosTransaccion.AppendChild(datos);
                                    datos = xmldatos.CreateElement("Fecha_Proceso"); datos.InnerText = Fecha_Proceso; dtDatosTransaccion.AppendChild(datos);
                                    datos = xmldatos.CreateElement("Codigo_Retorno"); datos.InnerText = "9970"; dtDatosTransaccion.AppendChild(datos);
                                    datos = xmldatos.CreateElement("MensajeRetorno"); datos.InnerText = "VALOR CERO DE LA RECAUDACION, NO SE PUEDE RECAUDAR"; dtDatosTransaccion.AppendChild(datos);
                                    datos = xmldatos.CreateElement("Valor"); datos.InnerText = Valor; dtDatosTransaccion.AppendChild(datos);
                                    datos = xmldatos.CreateElement("Moneda"); datos.InnerText = Moneda; dtDatosTransaccion.AppendChild(datos);
                                    datos = xmldatos.CreateElement("NombreContrapartida"); datos.InnerText = NombreContrapartida; dtDatosTransaccion.AppendChild(datos);
                                    datos = xmldatos.CreateElement("Referencia"); datos.InnerText = Referencia; dtDatosTransaccion.AppendChild(datos);
                                    datos = xmldatos.CreateElement("Referencia_Adicional"); datos.InnerText = Referencia_Adicional; dtDatosTransaccion.AppendChild(datos);
                                    datos = xmldatos.CreateElement("Contrapartida"); datos.InnerText = Contrapartida; dtDatosTransaccion.AppendChild(datos);
                                    datos = xmldatos.CreateElement("Genera_XML"); datos.InnerText = Genera_XML; dtDatosTransaccion.AppendChild(datos);
                                    datos = xmldatos.CreateElement("Referencia_SWIFT"); datos.InnerText = Referencia_SWIFT; dtDatosTransaccion.AppendChild(datos);
                                    datos = xmldatos.CreateElement("Banco"); datos.InnerText = CodigoBanco; dtDatosTransaccion.AppendChild(datos);
                                    datos = xmldatos.CreateElement("Comision"); datos.InnerText = ValorComision; dtDatosTransaccion.AppendChild(datos);
                                    datos = xmldatos.CreateElement("Codigo_Tercero"); datos.InnerText = Codigo_Tercero; dtDatosTransaccion.AppendChild(datos);
                                    datos = xmldatos.CreateElement("Ciudad_Cliente"); datos.InnerText = Ciudad_Cliente; dtDatosTransaccion.AppendChild(datos);
                                    datos = xmldatos.CreateElement("Referencia_TX"); datos.InnerText = Referencia_TX; dtDatosTransaccion.AppendChild(datos);
                                    datos = xmldatos.CreateElement("Numero_Documento"); datos.InnerText = Numero_Documento; dtDatosTransaccion.AppendChild(datos);
                                    dsSalida.AppendChild(dtDatosTransaccion);
                                }
                            }
                            else
                            {
                                XmlNode dtDatosTransaccion = xmldatos.CreateElement("dtDatosTransaccion");
                                XmlNode datos = xmldatos.CreateElement("NumeroId_Cliente"); datos.InnerText = NumeroId_Cliente; dtDatosTransaccion.AppendChild(datos);
                                datos = xmldatos.CreateElement("TipoId_Cliente"); datos.InnerText = TipoId_Cliente; dtDatosTransaccion.AppendChild(datos);
                                datos = xmldatos.CreateElement("Fecha_Proceso"); datos.InnerText = Fecha_Proceso; dtDatosTransaccion.AppendChild(datos);
                                datos = xmldatos.CreateElement("Codigo_Retorno"); datos.InnerText = Codigo_Retorno; dtDatosTransaccion.AppendChild(datos);
                                datos = xmldatos.CreateElement("MensajeRetorno"); datos.InnerText = MensajeRetorno; dtDatosTransaccion.AppendChild(datos);
                                datos = xmldatos.CreateElement("Valor"); datos.InnerText = Valor; dtDatosTransaccion.AppendChild(datos);
                                datos = xmldatos.CreateElement("Moneda"); datos.InnerText = Moneda; dtDatosTransaccion.AppendChild(datos);
                                datos = xmldatos.CreateElement("NombreContrapartida"); datos.InnerText = NombreContrapartida; dtDatosTransaccion.AppendChild(datos);
                                datos = xmldatos.CreateElement("Referencia"); datos.InnerText = Referencia; dtDatosTransaccion.AppendChild(datos);
                                datos = xmldatos.CreateElement("Referencia_Adicional"); datos.InnerText = Referencia_Adicional; dtDatosTransaccion.AppendChild(datos);
                                datos = xmldatos.CreateElement("Contrapartida"); datos.InnerText = Contrapartida; dtDatosTransaccion.AppendChild(datos);
                                datos = xmldatos.CreateElement("Genera_XML"); datos.InnerText = Genera_XML; dtDatosTransaccion.AppendChild(datos);
                                datos = xmldatos.CreateElement("Referencia_SWIFT"); datos.InnerText = Referencia_SWIFT; dtDatosTransaccion.AppendChild(datos);
                                datos = xmldatos.CreateElement("Banco"); datos.InnerText = CodigoBanco; dtDatosTransaccion.AppendChild(datos);
                                datos = xmldatos.CreateElement("Comision"); datos.InnerText = ValorComision; dtDatosTransaccion.AppendChild(datos);
                                datos = xmldatos.CreateElement("Codigo_Tercero"); datos.InnerText = Codigo_Tercero; dtDatosTransaccion.AppendChild(datos);
                                datos = xmldatos.CreateElement("Ciudad_Cliente"); datos.InnerText = Ciudad_Cliente; dtDatosTransaccion.AppendChild(datos);
                                datos = xmldatos.CreateElement("Referencia_TX"); datos.InnerText = Referencia_TX; dtDatosTransaccion.AppendChild(datos);
                                datos = xmldatos.CreateElement("Numero_Documento"); datos.InnerText = Numero_Documento; dtDatosTransaccion.AppendChild(datos);
                                dsSalida.AppendChild(dtDatosTransaccion);
                            }
                            xmldatos.AppendChild(dsSalida);
                            strRespuesta = xmldatos.InnerXml;
                            break;
                        case "REGISTRO":
                            //debo obtener los datos para armar el xml de salida                            

                            Fecha_Proceso = dsEntrada.Tables["Cabecera"].Rows[0]["FechaContable"].ToString();
                            Codigo_Retorno = dsEntrada.Tables["Cabecera"].Rows[0]["CodigoRetorno"].ToString();
                            Descripcion_Retorno = dsEntrada.Tables["Cabecera"].Rows[0]["MensajeRetorno"].ToString();

                            TraducirMensajesDeRespuesta(ref Codigo_Retorno, ref Descripcion_Retorno, Codigo_Retorno, ref MailsA, dsCatalogo);

                            if (Codigo_Retorno == "0001")
                            {
                                Secuencial_Banco = dsEntrada.Tables["Cabecera"].Rows[0]["Secuencial"].ToString();
                                Codigo_Tercero = dsEntrada.Tables["Cabecera"].Rows[0]["OrdenBanco"].ToString();
                                Descripcion_Retorno = "PROCESO OK";
                                if (strTran.Equals("REGISTRO_PACIFICO_RET") || strTran.Equals("REGISTRO_PACIFICO_SALDOS"))
                                {

                                    Referencia = dsEntrada.Tables["Cabecera"].Rows[0]["Referencia"].ToString();
                                    //Secuencial_Banco = Referencia;
                                    //Codigo_Tercero = dsEntrada.Tables["Cabecera"].Rows[0]["OrdenBanco"].ToString();
                                    if (dsEntradaDatos.Tables["DatosTransaccion"].Columns.Contains("Contrapartida"))
                                    {
                                        string contrapartida1 = (string)dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Contrapartida"];
                                        Referencia_Adicional = Referencia_Adicional + "!" + contrapartida1 + "!";
                                    }

                                }
                                else if (dsEntrada.Tables.Contains("Detalle"))
                                {
                                    if (dsEntrada.Tables["Detalle"].Columns.Contains("BanderaNotaVenta"))
                                    {
                                        BanderaNotaVenta = dsEntrada.Tables["Detalle"].Rows[0]["BanderaNotaVenta"].ToString();

                                        if (BanderaNotaVenta == "S")
                                        {
                                            RucBanco = dsEntrada.Tables["Detalle"].Rows[0]["RucBanco"].ToString();
                                            Localidad = dsEntrada.Tables["Detalle"].Rows[0]["Localidad"].ToString();
                                            PuntoVenta = dsEntrada.Tables["Detalle"].Rows[0]["PuntoVenta"].ToString();
                                            Secuencial = dsEntrada.Tables["Detalle"].Rows[0]["Secuencial"].ToString();
                                            AutorizacionSRI = dsEntrada.Tables["Detalle"].Rows[0]["AutorizacionSRI"].ToString();
                                            if (dsEntrada.Tables["Detalle"].Columns.Contains("DireccionBanco"))
                                                DireccionBanco = dsEntrada.Tables["Detalle"].Rows[0]["DireccionBanco"].ToString();

                                            if (dsEntrada.Tables["Detalle"].Columns.Contains("FechaVigenciaSri"))
                                                FechaVigenciaSri = dsEntrada.Tables["Detalle"].Rows[0]["FechaVigenciaSri"].ToString();
                                            if (dsEntrada.Tables["Detalle"].Columns.Contains("FechaInicioSRI"))
                                            {
                                                strFechainicioSRI = dsEntrada.Tables["Detalle"].Rows[0]["FechaInicioSRI"].ToString();
                                                if (strFechainicioSRI.Length >= 8)
                                                    strFechainicioSRI = strFechainicioSRI.Substring(6, 2) + "-" + strFechainicioSRI.Substring(4, 2) + "-" + strFechainicioSRI.Substring(0, 4);
                                            }
                                            if (dsEntrada.Tables["Detalle"].Columns.Contains("FechaResolucionSRI"))
                                            {
                                                strFechaResolucionSRI = dsEntrada.Tables["Detalle"].Rows[0]["FechaResolucionSRI"].ToString();
                                                if (strFechaResolucionSRI.Length >= 8)
                                                    strFechaResolucionSRI = strFechaResolucionSRI.Substring(6, 2) + "-" + strFechaResolucionSRI.Substring(4, 2) + "-" + strFechaResolucionSRI.Substring(0, 4);
                                            }
                                            if (FechaVigenciaSri.Length >= 8)
                                                FechaVigenciaSri = FechaVigenciaSri.Substring(6, 2) + "-" + FechaVigenciaSri.Substring(4, 2) + "-" + FechaVigenciaSri.Substring(0, 4);


                                            if (dsEntrada.Tables["Detalle"].Columns.Contains("NumeroTransaccionComision"))
                                                Secuencial_Banco_Comision = dsEntrada.Tables["Detalle"].Rows[0]["NumeroTransaccionComision"].ToString();
                                        }

                                    }

                                    if (dsEntrada.Tables["Detalle"].Columns.Contains("BanderaComprobante"))
                                    {
                                        BanderaComprobante = dsEntrada.Tables["Detalle"].Rows[0]["BanderaComprobante"].ToString();
                                        if (BanderaComprobante == "S")
                                        {
                                            TituloEmpresa = dsEntrada.Tables["Detalle"].Rows[0]["TituloEmpresa"].ToString();
                                            RucEmpresa = dsEntrada.Tables["Detalle"].Rows[0]["RucEmpresa"].ToString();
                                            TelefonoEmpresa = dsEntrada.Tables["Detalle"].Rows[0]["TelefonoEmpresa"].ToString();
                                            DireccionEmpresa = dsEntrada.Tables["Detalle"].Rows[0]["DireccionEmpresa"].ToString();
                                            FechaOrden = dsEntrada.Tables["Detalle"].Rows[0]["FechaOrden"].ToString();
                                            Referencia = dsEntrada.Tables["Detalle"].Rows[0]["Referencia"].ToString();
                                            CantidadRubros = dsEntrada.Tables["Detalle"].Rows[0]["CantidadRubros"].ToString();
                                        }
                                    }

                                    if (dsEntrada.Tables["Detalle"].Columns.Contains("Referencia"))
                                    {
                                        Referencia += dsEntrada.Tables["Detalle"].Rows[0]["Referencia"].ToString();
                                    }
                                }
                            }

                            if (strEstadoTransaccion == "OFFLINE")
                            {
                                //EventLog.WriteEntry("easysoft", "offline strEstadoTransaccion=" + strEstadoTransaccion + "==>dsEntradaDatos=" + dsEntradaDatos);
                                if (dsEntradaDatos.Tables["DatosTransaccion"].Columns.Contains("Contrapartida"))
                                    Contrapartida = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Contrapartida"].ToString();
                                if (dsEntradaDatos.Tables["DatosTransaccion"].Columns.Contains("Codigo"))
                                    Contrapartida = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Codigo"].ToString();

                                Fecha_Proceso = DateTime.Now.ToString("yyyyMMdd");
                            }

                            if (dsEntradaDatos.Tables["DatosTransaccion"].Columns.Contains("Ciudad_Cliente"))
                            {
                                Ciudad_Cliente = string.Empty;
                            }

                            string strValor = string.Empty;
                            if (Codigo_Retorno == "0001")
                            {
                                switch (strTran)
                                {
                                    case "REGISTRO_PACIFICO_MUNIGYE":
                                        if (dsEntradaDatos.Tables["DatosTransaccion"].Columns.Contains("Referencia_Adicional"))
                                            Referencia_Adicional = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Referencia_Adicional"].ToString();

                                        Referencia_Adicional += "|" + dsEntrada.Tables["Detalle"].Rows[0]["Referencia"].ToString();
                                        BanderaActualizar = "S";
                                        //if (Referencia.Length > 168)
                                        //    Referencia_Adicional = Referencia_Adicional + Referencia.Substring(169).Trim();
                                        break;
                                    case "REGISTRO_PACIFICO_MUNIQUITO":
                                        if (dsEntradaDatos.Tables["DatosTransaccion"].Columns.Contains("Referencia_Adicional"))
                                            Referencia_Adicional = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Referencia_Adicional"].ToString();

                                        Referencia_Adicional += "!" + Referencia.Substring(0, 15).Trim() + "!" + Referencia.Substring(15, 12).Trim() + "!" + Referencia.Substring(27, 12).Trim() + "!" + Referencia.Substring(39, 12).Trim() + "!" + Referencia.Substring(51, 12).Trim() + "!" + Referencia.Substring(63, 12).Trim() + "!" + Referencia.Substring(75, 8).Trim() + "!" + Referencia.Substring(83, 13).Trim() + "!" + Referencia.Substring(96, 12).Trim() + "!" + Referencia.Substring(108, 5).Trim() + "!" + Referencia.Substring(113, 2).Trim();
                                        BanderaActualizar = "S";
                                        //if (Referencia.Length > 168)
                                        //    Referencia_Adicional = Referencia_Adicional + Referencia.Substring(169).Trim();
                                        break;
                                    case "REGISTRO_PACIFICO_UTPL":
                                        if (dsEntradaDatos.Tables["DatosTransaccion"].Columns.Contains("Referencia_Adicional"))
                                            Referencia = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Referencia_Adicional"].ToString();

                                        Referencia_Adicional += "!" + dsEntrada.Tables["Detalle"].Rows[0]["Referencia"].ToString();
                                        BanderaActualizar = "S";
                                        //if (Referencia.Length > 168)
                                        //    Referencia_Adicional = Referencia_Adicional + Referencia.Substring(169).Trim();
                                        break;
                                    case "REGISTRO_PACIFICO_PINALEGRO":
                                        if (dsEntradaDatos.Tables["DatosTransaccion"].Columns.Contains("Referencia_Adicional"))
                                            Referencia_Adicional = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Referencia_Adicional"].ToString();

                                        Referencia_Adicional += "!" + dsEntrada.Tables["Detalle"].Rows[0]["Referencia"].ToString();
                                        BanderaActualizar = "S";
                                        //if (Referencia.Length > 168)
                                        //    Referencia_Adicional = Referencia_Adicional + Referencia.Substring(169).Trim();
                                        break;
                                    case "REGISTRO_PACIFICO_PPSBONO":

                                        // SE DEVE VALIDAR EL VALOR QUE ESTA RETORNANDO HABER SI ES IGUAL AL ENVIADO   
                                        EventLog.WriteEntry("EasySwitch", "dsEntradaDatos:" + dsEntrada.GetXml());
                                        if (dsEntradaDatos.Tables["DatosTransaccion"].Columns.Contains("Referencia_Adicional"))
                                        {
                                            Referencia_Adicional = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Referencia_Adicional"].ToString();
                                            Referencia_Adicional += "!" + dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["NumeroId_Cliente"].ToString().Substring(0, 6) + "XXXX";
                                            string strRef = dsEntrada.Tables["Detalle"].Rows[0]["Referencia"].ToString().PadRight(100, ' ');
                                            //EventLog.WriteEntry("EasySwitch", "Referencia de bono:" + strRef);
                                            Referencia_Adicional += "!" + "PAGO ACEPTADO";
                                        }
                                        BanderaActualizar = "S";
                                        //strValor = Convert.ToDouble(Convert.ToInt32(dsEntrada.Tables["Detalle"].Rows[0]["Referencia"].ToString().Substring(39,13)) / 100).ToString("######.00");
                                        //EventLog.WriteEntry("EasySwitch", "Valor de la respuesta:" + strValor);
                                        //EventLog.WriteEntry("EasySwitch", "Valor que pago:" + dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Valor"]);
                                        //if (Convert.ToDecimal(dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Valor"])!=Convert.ToDecimal(strValor))                                             
                                        //{
                                        //    // Si es que no son iguales hay que enviar el reverso automatico de esta transaccion


                                        //    EventLog.WriteEntry("EasySwitch", "Los valores no son iguales hay que reverar");
                                        //    Codigo_Retorno = "9961";
                                        //    Descripcion_Retorno = ":SE ENVIO EL REVERSO AUTOMATICO DEBIDO A QUE EL VALOR DE "+dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Valor"] + " NO ES IGUAL AL DEL MIES "+strValor;
                                        //    Descripcion_Retorno = "0001!" + Descripcion_Retorno;
                                        //    //strIdOrigen= string.Empty;
                                        //    DataSet dsEntrada1 = new DataSet();

                                        //    DataSet dsEntradaDatos1 = adm.getDataSetFromString(strXmlSalida);
                                        //    //if (dsEntradaDatos1.Tables.Contains("Cabecera"))
                                        //    //{
                                        //    //    strIdOrigen = dsEntradaDatos1.Tables["Cabecera"].Rows[0]["NumeroTransaccion"].ToString();
                                        //    //}

                                        //    GenerarReversoAutomatico(strTransaccion, strTransaccion.Split('_')[1].ToString(), dsEntrada1, true, "", strXmlSalida, strIdOrigen);

                                        //}
                                        //EventLog.WriteEntry("EasySwitch", "Despues de la funcion de Reverso");
                                        break;
                                    case "REGISTRO_PACIFICO_BONO":
                                        Codigo_Retorno = Referencia.Substring(101, 4);
                                        //if (Codigo_Retorno == "0000") //pago correcto en banred
                                        //{
                                        strValor = Convert.ToDouble(Convert.ToInt32(Referencia.Substring(40, 15)) / 100).ToString("######.00");
                                        NombreContrapartida = Referencia.Substring(0, 20).Trim() + " " + Referencia.Substring(20, 20).Trim();
                                        Descripcion_Retorno += " : Pague a " + NombreContrapartida + " la suma de " + strValor + " dólares";
                                        Valor = strValor;
                                        BanderaActualizar = "S";
                                        Referencia_Adicional = Referencia.Substring(55, 30).Trim() + "!" + Referencia.Substring(85, 8).Trim() + "!" + Referencia.Substring(93, 8).Trim() + "!" + Referencia.Substring(105, 30).Trim() + "!" + Referencia.Substring(135, 34).Trim() + "!";

                                        if (Referencia.Length > 168)
                                            Referencia_Adicional = Referencia_Adicional + Referencia.Substring(169).Trim();
                                        Codigo_Retorno = "0001";
                                        //}
                                        //else
                                        //{
                                        //    Descripcion_Retorno = Referencia.Substring(105, 30).Trim();
                                        //    Referencia_Adicional = string.Empty;
                                        //    NombreContrapartida = string.Empty;
                                        //    Valor = "0";
                                        //}                                    

                                        Descripcion_Retorno = "0001!" + Descripcion_Retorno;
                                        break;
                                    case "REGISTRO_PACIFICO_CTG":

                                        BanderaActualizar = "S";
                                        Referencia_Adicional = Referencia.Trim().Substring(0, 12) + "!" + Referencia.Trim().Substring(12, (Referencia.Length - 12)).Trim();
                                        break;
                                    case "REGISTRO_PACIFICO_VISAC":
                                    case "REGISTRO_PACIFICO_MASTER":
                                        //Contrapartida = EnmascararTarjeta(Contrapartida);
                                        EventLog.WriteEntry("EasySwitch", "ContrapartidaVisaMaster:" + Contrapartida);
                                        NombreContrapartida = Referencia.Trim();
                                        Descripcion_Retorno += " Gracias " + NombreContrapartida + " por su pago.";
                                        Descripcion_Retorno = "0001!" + Descripcion_Retorno;
                                        break;
                                    case "REGISTRO_PACIFICO_CNTTTSV":
                                        BanderaActualizar = "S";
                                        Referencia_Adicional = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Referencia_Adicional"] + "!" + Referencia.Trim().Substring(0, 12);
                                        break;
                                    case "REGISTRO_PACIFICO_SRITDOM":
                                    case "REGISTRO_PACIFICO_SRIMAT":
                                    case "REGISTRO_PACIFICO_SRIRISE":
                                    case "REGISTRO_PACIFICO_MUNIAMBATO":
                                        BanderaActualizar = "S";
                                        Referencia_Adicional = Referencia.Trim();
                                        break;
                                    case "REGISTRO_PACIFICO_MONEY":
                                        BanderaActualizar = "S";
                                        NombreContrapartida = CreateRandomPassword(10);
                                        break;
                                    case "REGISTRO_PACIFICO_ANT":
                                        if (dsEntradaDatos.Tables["DatosTransaccion"].Columns.Contains("Comision"))
                                            ValorComision = String.Format("{0:0.00}", Convert.ToDouble(dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Comision"].ToString()));
                                        BanderaActualizar = "S";
                                        CalcularDesgloceIva(valorIva, ref ValorComision, ref Referencia_TX, strTran);
                                        break;
                                    case "REGISTRO_PACIFICO_AGROCALIDAD":
                                        if (dsEntradaDatos.Tables["DatosTransaccion"].Columns.Contains("Comision"))
                                            ValorComision = String.Format("{0:0.00}", Convert.ToDouble(dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Comision"].ToString()));
                                        BanderaActualizar = "S";
                                        CalcularDesgloceIva(valorIva, ref ValorComision, ref Referencia_TX, strTran);
                                        break;
                                    case "REGISTRO_PACIFICO_MUNIQUITOEL":
                                        BanderaActualizar = "S";
                                        Referencia_Adicional = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Referencia_Adicional"] + "!" + Referencia.Substring(0, 15);
                                        break;
                                    case "REGISTRO_PACIFICO_ANTCO":
                                    case "REGISTRO_PACIFICO_ANTO":
                                        BanderaActualizar = "S";
                                        Referencia_Adicional = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Referencia_Adicional"] + "!" + DateTime.Now.ToString("yyyyMMdd") + dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Id_Item"];
                                        break;
                                    //agregado por luis.lopez(12/08/2014). Para enviar el Concepto a GetXMLSalidaPago en ReferenciaAdicional
                                    case "REGISTRO_PACIFICO_MRLREV":
                                        if (dsEntradaDatos.Tables["ComboDescripcion"].Columns.Contains("ContraPartida-2"))
                                        {
                                            Referencia_Adicional = dsEntradaDatos.Tables["ComboDescripcion"].Rows[0]["ContraPartida-2"].ToString();
                                        }
                                        break;
                                    case "REGISTRO_PACIFICO_JUDICATURAEMP":
                                        BanderaActualizar = "S";
                                        if (dsEntradaDatos.Tables["DatosTransaccion"].Columns.Contains("Referencia_Adicional"))
                                            if (!string.IsNullOrEmpty(dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Referencia_Adicional"].ToString()))
                                                Referencia_Adicional = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Referencia_Adicional"] + "!" + Referencia.Substring(26, 6);
                                            else
                                                Referencia_Adicional = Referencia.Substring(26, 6);
                                        else
                                            Referencia_Adicional = Referencia.Substring(26, 6);
                                        break;
                                    case "REGISTRO_PACIFICO_JUDICATURAPER":
                                        BanderaActualizar = "S";
                                        if (dsEntradaDatos.Tables["DatosTransaccion"].Columns.Contains("Referencia_Adicional"))
                                            if (!string.IsNullOrEmpty(dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Referencia_Adicional"].ToString()))
                                                Referencia_Adicional = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Referencia_Adicional"] + "!" + Referencia.Substring(20, 6);
                                            else
                                                Referencia_Adicional = Referencia.Substring(20, 6);
                                        else
                                            Referencia_Adicional = Referencia.Substring(20, 6);
                                        break;
                                    case "REGISTRO_PACIFICO_MOVIDELNOROL":
                                        if (dsEntradaDatos.Tables["DatosTransaccion"].Columns.Contains("Referencia_Adicional"))
                                        {
                                            string fecha = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Fecha_Inicio_Proceso"].ToString();
                                            string fechaF = fecha.Substring(0, 10).Replace("-", "");
                                            Referencia_Adicional = Referencia_Adicional + "!" + dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Id_Item"].ToString() + dsEntradaDatos.Tables["DatosUsuario"].Rows[0]["CAN"].ToString() + fechaF;
                                        }
                                        break;
                                    case "REGISTRO_PACIFICO_ANTOCITAC":
                                    case "REGISTRO_PACIFICO_ANTOCONV":
                                    case "REGISTRO_PACIFICO_ANTOSOLIC":
                                        if (dsEntradaDatos.Tables["DatosTransaccion"].Columns.Contains("Referencia_Adicional"))
                                        {
                                            string fecha = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Fecha_Inicio_Proceso"].ToString();
                                            string fechaF = fecha.Substring(0, 10).Replace("-", "");
                                            Referencia_Adicional = Referencia_Adicional + "!" + fechaF + dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Id_Item"].ToString();
                                        }
                                        break;
                                    case "REGISTRO_PACIFICO_DEPOSITOS":
                                        if (dsEntradaDatos.Tables["DatosTransaccion"].Columns.Contains("Referencia_Adicional"))
                                        {
                                            string contrapartida = string.Empty;
                                            string datoEnmascarado = string.Empty;
                                            if (dsEntradaDatos.Tables["DatosTransaccion"].Columns.Contains("Contrapartida"))
                                            {
                                                contrapartida = (string)dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Contrapartida"];
                                                if (!string.IsNullOrEmpty(contrapartida))
                                                    datoEnmascarado = EnmascararDatos(contrapartida);
                                            }
                                            DateTime dateTransaccion = DateTime.Now;
                                            string fecha = string.Format("{0:yyyy-MM-dd}", dateTransaccion);
                                            string hora = string.Format("{0:HH:mm:ss}", dateTransaccion);
                                            string fechaCompleta = string.Format("{0}      {1}", fecha, hora);
                                            Referencia_Adicional = Referencia_Adicional + "!" + datoEnmascarado + "!" + fechaCompleta + "!" + Secuencial_Banco + "!" + (string)dsEntradaDatos.Tables["DatosUsuario"].Rows[0]["Oficina"] + " - " + (string)dsEntradaDatos.Tables["DatosUsuario"].Rows[0]["Nombre_Sucursal"];
                                        }
                                        break;
                                    //Para Ref Comprobante
                                    //case "REGISTRO_PACIFICO_BABAHOYOEP":

                                    //    Referencia = Referencia + "|" + dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Referencia_Adicional"].ToString();

                                    //    break;
                                    default:
                                        break;
                                }
                            }
                            Secuencial = Secuencial.PadLeft(9, '0');

//EventLog.WriteEntry("EasySwitch", "Secuencial_Banco:" + Secuencial_Banco);
                            strRespuesta = GetXMLSalidaPago(Fecha_Proceso, Codigo_Retorno, Descripcion_Retorno, Secuencial_Banco, RucBanco, Localidad,
                                                            PuntoVenta, Secuencial, AutorizacionSRI, DireccionBanco, FechaVigenciaSri, BanderaNotaVenta, Secuencial_Banco_Comision, Codigo_Tercero,
                                                            TituloEmpresa, RucEmpresa, TelefonoEmpresa, DireccionEmpresa, FechaOrden, Referencia, BanderaComprobante, BanderaActualizar, NombreContrapartida, Valor, Referencia_Adicional, strFechainicioSRI, strFechaResolucionSRI, strTran, strIdOrigen, Referencia_TX);
 // EventLog.WriteEntry("EasySwitch", "strRespuesta:" + strRespuesta);
                            break;
                        case "REVERSO":

                            Fecha_Proceso = dsEntrada.Tables["Cabecera"].Rows[0]["FechaContable"].ToString();
                            Codigo_Retorno = dsEntrada.Tables["Cabecera"].Rows[0]["CodigoRetorno"].ToString();
                            Descripcion_Retorno = dsEntrada.Tables["Cabecera"].Rows[0]["MensajeRetorno"].ToString();

                            TraducirMensajesDeRespuesta(ref Codigo_Retorno, ref Descripcion_Retorno, Codigo_Retorno, ref MailsA, dsCatalogo);

                            strRespuesta = GetXMLSalidaReverso(Fecha_Proceso, Codigo_Retorno, Descripcion_Retorno);
                            break;
                        default:
                            break;

                    }
                }
                else
                {
                    string[] lstRespuesta;
                    string mails = string.Empty;
                    switch (strTran)
                    {
                        case "CONSULTA_FARMA_RIFA":
                            lstRespuesta = strXmlSalida.Split('!');
                            Codigo_Retorno = lstRespuesta[0].ToString();
                            MensajeRetorno = lstRespuesta[1].ToString();
                            Numero_Documento = string.Empty;

                            TraducirMensajesDeRespuesta(ref Codigo_Retorno, ref MensajeRetorno, Codigo_Retorno, ref mails, dsCatalogo);
                            NumeroId_Cliente = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Contrapartida"].ToString();
                            Contrapartida = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Contrapartida"].ToString();
                            NombreContrapartida = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["NombreContrapartida"].ToString();
                            Numero_Documento = dsEntradaDatos.Tables["DatosTransaccion"].Rows[0]["Numero_Documento"].ToString();

                            Referencia = Referencia_Adicional;
                            DataSet dsFehas = adm.ObtenerTablas("'RIFA'", "'VALOR'");
                            Valor = "1.00";
                            if (dsFehas.Tables["Tablas"].Rows.Count > 0)
                            {
                                Valor = dsFehas.Tables["Tablas"].Rows[0]["TablaReferencia"].ToString();
                            }
                            Moneda = "USD";


                            strRespuesta = GetXMLSalidaConsulta(strRespuesta, Referencia_Adicional, NombreContrapartida, Valor, Fecha_Proceso, Codigo_Retorno, CodigoBanco, Referencia, Codigo_Tercero, NumeroId_Cliente, TipoId_Cliente, MensajeRetorno, Moneda, Contrapartida, Genera_XML, Referencia_SWIFT, ValorComision, strXmlSalida, Numero_Documento);
                            break;
                        case "REGISTRO_FARMA_RIFA":
                            lstRespuesta = strXmlSalida.Split('|');
                            Codigo_Retorno = lstRespuesta[0].ToString();
                            MensajeRetorno = lstRespuesta[1].ToString();

                            TraducirMensajesDeRespuesta(ref Codigo_Retorno, ref MensajeRetorno, Codigo_Retorno, ref mails, dsCatalogo);

                            if (Codigo_Retorno == "0001")
                            {
                                DataSet dsFeChas = new DataSet();
                                dsFeChas = adm.ObtenerTablas("'RIFA'", "'FECHAS'");
                                if (dsFeChas.Tables["Tablas"].Rows.Count > 0)
                                {
                                    Referencia = dsFeChas.Tables["Tablas"].Rows[0]["TablaReferencia"].ToString();
                                    BanderaActualizar = "S";
                                }
                            }

                            strRespuesta = GetXMLSalidaPago(Fecha_Proceso, Codigo_Retorno, Descripcion_Retorno, Secuencial_Banco, RucBanco, Localidad,
                                                            PuntoVenta, Secuencial, AutorizacionSRI, DireccionBanco, FechaVigenciaSri, BanderaNotaVenta, Secuencial_Banco_Comision, Codigo_Tercero,
                                                            TituloEmpresa, RucEmpresa, TelefonoEmpresa, DireccionEmpresa, FechaOrden, Referencia, BanderaComprobante, BanderaActualizar, NombreContrapartida, Valor, Referencia_Adicional, strFechainicioSRI, strFechaResolucionSRI, strTran, strIdOrigen, "");
                            break;
                        case "REVERSO_FARMA_RIFA":

                            lstRespuesta = strXmlSalida.Split('|');
                            Codigo_Retorno = lstRespuesta[0].ToString();
                            MensajeRetorno = lstRespuesta[1].ToString();

                            TraducirMensajesDeRespuesta(ref Codigo_Retorno, ref MensajeRetorno, Codigo_Retorno, ref mails, dsCatalogo);

                            strRespuesta = GetXMLSalidaReverso(DateTime.Now.ToString(), Codigo_Retorno, Descripcion_Retorno);
                            break;
                        case "REGISTRO_FARMA_CARPETA":

                            lstRespuesta = strXmlSalida.Split('|');
                            Codigo_Retorno = lstRespuesta[0].ToString();
                            MensajeRetorno = lstRespuesta[1].ToString();

                            TraducirMensajesDeRespuesta(ref Codigo_Retorno, ref MensajeRetorno, Codigo_Retorno, ref mails, dsCatalogo);

                            if (Codigo_Retorno == "0001")
                            {
                                Referencia = lstRespuesta[2].ToString();
                                BanderaActualizar = "S";
                                Secuencial_Banco = Referencia;
                                Descripcion_Retorno = MensajeRetorno;
                            }

                            strRespuesta = GetXMLSalidaPago(Fecha_Proceso, Codigo_Retorno, Descripcion_Retorno, Secuencial_Banco, RucBanco, Localidad, PuntoVenta, Secuencial, AutorizacionSRI, DireccionBanco, FechaVigenciaSri, BanderaNotaVenta, Secuencial_Banco_Comision, Codigo_Tercero,
                                           TituloEmpresa, RucEmpresa, TelefonoEmpresa, DireccionEmpresa, FechaOrden, Referencia, BanderaComprobante, BanderaActualizar, NombreContrapartida, Valor, Referencia_Adicional, strFechainicioSRI, strFechaResolucionSRI, strTran, strIdOrigen, "");

                            break;
                        default:
                            break;
                    }
                }

            }
            catch (Exception e)
            {
                EventLog.WriteEntry("EasySwitch", "EasySwitch.Pacifico_Procesos_TransaformarTramaSalida.Error:" + e.Message, EventLogEntryType.Error);
            }

            finally
            {
                if (dsEntrada != null)
                    dsEntrada.Dispose();
                if (dsEntradaDatos != null)
                    dsEntradaDatos.Dispose();
            }
            GrabarAppLog("Pacifico_Procesos.TransformarTramaSalida:FIN DE TRANSFORMACION DE TRAMA DE SALIDA SWITCH Pacifico:" + strRespuesta, "I");
            return strRespuesta;
        }

        private static void CalcularDesgloceIva(double valorIva, ref string ValorComision, ref string Referencia_TX, string TipoTransaccion)
        {
            //por temas de regulacion el banco nos envia el valor de la comision sin el iva
            //por lo que hay que calcular el 12 % del iva a este valor y la suma de estos dos valores enviar hacia el teller
            //|subtotal12%|iva0%|iva 12%|subtotal0%|valor de comision total

            if (valorIva > 0)
            {
                if (Referencia_TX.Contains("|"))
                    Referencia_TX += "|!" + ValorComision;
                else
                {
                    if (TipoTransaccion.Contains("REGISTRO"))
                    {
                        ValorComision = Math.Round(Convert.ToDouble(ValorComision) / (1 + (valorIva / 100)), 2).ToString();
                    }

                    Referencia_TX += "!" + ValorComision;

                }
                //ValorComision = String.Format("{0:0.00}", Convert.ToDouble(ValorComision) + (Convert.ToDouble(ValorComision) * (valorIva / 100)));
                if (TipoTransaccion.Contains("REGISTRO"))
                {
                    ValorComision = Math.Round((Convert.ToDouble(ValorComision) - (Convert.ToDouble(ValorComision) * (valorIva / 100))), 2).ToString();
                }
                else
                    ValorComision = Math.Round((Convert.ToDouble(ValorComision) + (Convert.ToDouble(ValorComision) * (valorIva / 100))), 2).ToString();

                Referencia_TX += "!0.00!" + Math.Round((Convert.ToDouble(ValorComision) * (valorIva / 100)), 2).ToString();
                Referencia_TX += "!0.00!" + ValorComision;
            }
            else
                //el valor del iva es 0%                                    
                Referencia_TX = "|!0.00!0.00!0.00!" + ValorComision + "!" + ValorComision;
        }

        public static string CreateRandomPassword(int PasswordLength)
        {
            //string _allowedChars = "ABCDEFGHJKLMNPQRSTUVWXYZ123456789";
            //Byte[] randomBytes = new Byte[PasswordLength];
            //char[] chars = new char[PasswordLength];
            //int allowedCharCount = _allowedChars.Length;

            //for (int i = 0; i < PasswordLength; i++)
            //{
            //    Random randomObj = new Random();
            //    randomObj.NextBytes(randomBytes);
            //    chars[i] = _allowedChars[(int)randomBytes[i] % allowedCharCount];
            //}

            Random r = new Random();
            int aleat2 = r.Next(100000000, 999999999);
            return aleat2.ToString();
        }

        private static string GetXMLSalidaConsulta(string strRespuesta, string Referencia_Adicional, string NombreContrapartida, string Valor, string Fecha_Proceso, string Codigo_Retorno, string CodigoBanco, string Referencia, string Codigo_Tercero, string NumeroId_Cliente, string TipoId_Cliente, string MensajeRetorno, string Moneda, string Contrapartida, string Genera_XML, string Referencia_SWIFT, string ValorComision, string strXmlEntrada, string Numero_Documento)
        {
            string[] lstRespuesta1 = strXmlEntrada.Split('!');
            string[] lstRespuesta;

            if (Codigo_Retorno == "0001")
            {
                string[] lstItems = lstRespuesta1[2].ToString().Split('@');
                XmlDocument xmldatos = new System.Xml.XmlDocument();
                XmlNode dsSalida = xmldatos.CreateElement("dsSalida");

                for (int i = 0; i < lstItems.Length; i++)
                {
                    lstRespuesta = lstItems[i].Split('|');
                    Referencia_Adicional = lstRespuesta[0].ToString() + "|" + lstRespuesta[1].ToString() + "|" + lstRespuesta[2].ToString() + "|" + lstRespuesta[3].ToString();
                    Referencia = Referencia_Adicional;

                    XmlNode dtDatosTransaccion = xmldatos.CreateElement("dtDatosTransaccion");
                    XmlNode datos = xmldatos.CreateElement("NumeroId_Cliente"); datos.InnerText = NumeroId_Cliente; dtDatosTransaccion.AppendChild(datos);
                    datos = xmldatos.CreateElement("TipoId_Cliente"); datos.InnerText = TipoId_Cliente; dtDatosTransaccion.AppendChild(datos);
                    datos = xmldatos.CreateElement("Fecha_Proceso"); datos.InnerText = Fecha_Proceso; dtDatosTransaccion.AppendChild(datos);
                    datos = xmldatos.CreateElement("Codigo_Retorno"); datos.InnerText = Codigo_Retorno; dtDatosTransaccion.AppendChild(datos);
                    datos = xmldatos.CreateElement("MensajeRetorno"); datos.InnerText = MensajeRetorno; dtDatosTransaccion.AppendChild(datos);
                    datos = xmldatos.CreateElement("Valor"); datos.InnerText = Valor; dtDatosTransaccion.AppendChild(datos);
                    datos = xmldatos.CreateElement("Moneda"); datos.InnerText = Moneda; dtDatosTransaccion.AppendChild(datos);
                    datos = xmldatos.CreateElement("NombreContrapartida"); datos.InnerText = NombreContrapartida; dtDatosTransaccion.AppendChild(datos);
                    datos = xmldatos.CreateElement("Referencia"); datos.InnerText = Referencia; dtDatosTransaccion.AppendChild(datos);
                    datos = xmldatos.CreateElement("Referencia_Adicional"); datos.InnerText = Referencia_Adicional; dtDatosTransaccion.AppendChild(datos);
                    datos = xmldatos.CreateElement("Contrapartida"); datos.InnerText = Contrapartida; dtDatosTransaccion.AppendChild(datos);
                    datos = xmldatos.CreateElement("Genera_XML"); datos.InnerText = Genera_XML; dtDatosTransaccion.AppendChild(datos);
                    datos = xmldatos.CreateElement("Referencia_SWIFT"); datos.InnerText = Referencia_SWIFT; dtDatosTransaccion.AppendChild(datos);
                    datos = xmldatos.CreateElement("Banco"); datos.InnerText = CodigoBanco; dtDatosTransaccion.AppendChild(datos);
                    datos = xmldatos.CreateElement("Comision"); datos.InnerText = ValorComision; dtDatosTransaccion.AppendChild(datos);
                    datos = xmldatos.CreateElement("Codigo_Tercero"); datos.InnerText = Codigo_Tercero; dtDatosTransaccion.AppendChild(datos);
                    datos = xmldatos.CreateElement("Numero_Documento"); datos.InnerText = Numero_Documento; dtDatosTransaccion.AppendChild(datos);
                    dsSalida.AppendChild(dtDatosTransaccion);
                }

                xmldatos.AppendChild(dsSalida);
                strRespuesta = xmldatos.InnerXml;
            }
            return strRespuesta;
        }

        private void TraducirMensajesDeRespuesta(ref string CODIGORETORNO, ref string TRADUCCION_RETORNO, string CODIGOBATCH, ref string MailsA, DataSet dsCatalogo)
        {
            adm.TraducirMensajesDeRespuesta(ref CODIGORETORNO, ref TRADUCCION_RETORNO, CODIGOBATCH, ref MailsA, dsCatalogo);
        }

        private string GetXMLSalidaPago(string Fecha_Proceso, string Codigo_Retorno, string Descripcion_Retorno, string Secuencial_Banco, string RucBanco, string Localidad,
                                       string PuntoVenta, string Secuencial, string AutorizacionSRI, string DireccionBanco, string FechaVigenciaSri, string BanderaNotaVenta, string Secuencial_Banco_Comision, string Codigo_Tercero,
                                       string TituloEmpresa, string RucEmpresa, string TelefonoEmpresa, string DireccionEmpresa, string FechaOrden, string Referencia, string BanderaComprobante, string BanderaActualizar, string NombreContrapartida, string Valor, string ReferenciaAdicional, string strFechainicioSRI, string strFechaResolucionSRI, string strTran, string strIdOrigen, string Referencia_TX)
        {
            XmlDocument xmldatos = new System.Xml.XmlDocument();
            XmlNode dsSalida = xmldatos.CreateElement("dsSalidaPago");
            XmlNode dtDatosTransaccion = xmldatos.CreateElement("dtDatosTransaccion");
            XmlNode datos = xmldatos.CreateElement("Fecha_Proceso"); datos.InnerText = Fecha_Proceso; dtDatosTransaccion.AppendChild(datos);
            datos = xmldatos.CreateElement("Codigo_Retorno"); datos.InnerText = Codigo_Retorno; dtDatosTransaccion.AppendChild(datos);
            datos = xmldatos.CreateElement("Descripcion_Retorno"); datos.InnerText = Descripcion_Retorno; dtDatosTransaccion.AppendChild(datos);
            datos = xmldatos.CreateElement("Secuencial_Banco"); datos.InnerText = Secuencial_Banco; dtDatosTransaccion.AppendChild(datos);
            datos = xmldatos.CreateElement("Secuencial_Banco_Comision"); datos.InnerText = Secuencial_Banco_Comision; dtDatosTransaccion.AppendChild(datos);
            datos = xmldatos.CreateElement("Codigo_Tercero"); datos.InnerText = Codigo_Tercero; dtDatosTransaccion.AppendChild(datos);
            datos = xmldatos.CreateElement("SecuencialTBBA"); datos.InnerText = strIdOrigen; dtDatosTransaccion.AppendChild(datos);
            if (BanderaNotaVenta == "S")
            {
                XmlNode dtNotaVenta = xmldatos.CreateElement("dtNotaVenta");
                datos = xmldatos.CreateElement("RucBanco"); datos.InnerText = RucBanco; dtNotaVenta.AppendChild(datos);
                datos = xmldatos.CreateElement("Localidad"); datos.InnerText = Localidad; dtNotaVenta.AppendChild(datos);
                datos = xmldatos.CreateElement("PuntoVenta"); datos.InnerText = PuntoVenta; dtNotaVenta.AppendChild(datos);
                datos = xmldatos.CreateElement("Secuencial"); datos.InnerText = (strTran == "REGISTRO_PACIFICO_IEPI") ? Referencia : Secuencial; dtNotaVenta.AppendChild(datos);
                datos = xmldatos.CreateElement("AutorizacionSRI"); datos.InnerText = AutorizacionSRI; dtNotaVenta.AppendChild(datos);
                datos = xmldatos.CreateElement("DireccionBanco"); datos.InnerText = DireccionBanco; dtNotaVenta.AppendChild(datos);
                datos = xmldatos.CreateElement("FechaVigenciaSri"); datos.InnerText = FechaVigenciaSri; dtNotaVenta.AppendChild(datos);
                datos = xmldatos.CreateElement("FechaInicioSRI"); datos.InnerText = strFechainicioSRI; dtNotaVenta.AppendChild(datos);
                datos = xmldatos.CreateElement("FechaResolucionSRI"); datos.InnerText = strFechaResolucionSRI; dtNotaVenta.AppendChild(datos);
                dsSalida.AppendChild(dtNotaVenta);
            }
            if (BanderaComprobante == "S")
            {
                XmlNode dtComprobante = xmldatos.CreateElement("dtComprobante");
                datos = xmldatos.CreateElement("TituloEmpresa"); datos.InnerText = TituloEmpresa; dtComprobante.AppendChild(datos);
                datos = xmldatos.CreateElement("RucEmpresa"); datos.InnerText = RucEmpresa; dtComprobante.AppendChild(datos);
                datos = xmldatos.CreateElement("TelefonoEmpresa"); datos.InnerText = TelefonoEmpresa; dtComprobante.AppendChild(datos);
                datos = xmldatos.CreateElement("DireccionEmpresa"); datos.InnerText = DireccionEmpresa; dtComprobante.AppendChild(datos);
                datos = xmldatos.CreateElement("FechaOrden"); datos.InnerText = FechaOrden; dtComprobante.AppendChild(datos);
                datos = xmldatos.CreateElement("Referencia"); datos.InnerText = Referencia; dtComprobante.AppendChild(datos);
                dsSalida.AppendChild(dtComprobante);
            }
            //EventLog.WriteEntry("easysoft", "GetXMLSalidaPago strTran= " + strTran);

            switch (strTran)
            {
                case "REGISTRO_PACIFICO_BONO":
                    if (BanderaActualizar == "S")
                    {
                        XmlNode dtComprobante = xmldatos.CreateElement("dtActualizar");
                        datos = xmldatos.CreateElement("NombreContrapartida"); datos.InnerText = NombreContrapartida; dtComprobante.AppendChild(datos);
                        datos = xmldatos.CreateElement("Valor"); datos.InnerText = Valor; dtComprobante.AppendChild(datos);
                        datos = xmldatos.CreateElement("Referencia_Adicional"); datos.InnerText = ReferenciaAdicional; dtComprobante.AppendChild(datos);

                        dsSalida.AppendChild(dtComprobante);
                    }
                    break;
                case "REGISTRO_PACIFICO_VISAC":
                case "REGISTRO_PACIFICO_MASTER":
                case "REGISTRO_PACIFICO_MONEY":
                    if (BanderaActualizar == "S")
                    {
                        XmlNode dtComprobante = xmldatos.CreateElement("dtActualizar");
                        datos = xmldatos.CreateElement("NombreContrapartida"); datos.InnerText = NombreContrapartida; dtComprobante.AppendChild(datos);

                        dsSalida.AppendChild(dtComprobante);
                    }
                    break;
                case "REGISTRO_PACIFICO_CNTTTSV":
                case "REGISTRO_PACIFICO_SRITDOM":
                case "REGISTRO_PACIFICO_SRIMAT":
                case "REGISTRO_PACIFICO_SRIRISE":
                case "REGISTRO_PACIFICO_CTG":
                case "REGISTRO_PACIFICO_MUNIAMBATO":
                case "REGISTRO_PACIFICO_MUNIQUITO":
                case "REGISTRO_PACIFICO_UTPL":
                case "REGISTRO_PACIFICO_MUNIGYE":
                case "REGISTRO_PACIFICO_PINALEGRO":
                case "REGISTRO_PACIFICO_PPSBONO":
                case "REGISTRO_PACIFICO_JUDICATURAPER":
                case "REGISTRO_PACIFICO_JUDICATURAEMP":
                    if (BanderaActualizar == "S")
                    {
                        XmlNode dtComprobante = xmldatos.CreateElement("dtActualizar");
                        datos = xmldatos.CreateElement("Referencia_Adicional"); datos.InnerText =
                            (ReferenciaAdicional.Contains("|")) ? ReferenciaAdicional.Replace("|", "!") : ReferenciaAdicional; dtComprobante.AppendChild(datos);

                        dsSalida.AppendChild(dtComprobante);
                    }
                    break;

                case "REGISTRO_FARMA_CARPETA":
                case "REGISTRO_FARMA_RIFA":
                case "REGISTRO_RAPIPAGOS_BARCETON":
                    if (BanderaActualizar == "S")
                    {
                        XmlNode dtComprobante = xmldatos.CreateElement("dtActualizar");
                        datos = xmldatos.CreateElement("Referencia"); datos.InnerText = Referencia; dtComprobante.AppendChild(datos);
                        datos = xmldatos.CreateElement("Referencia_Adicional"); datos.InnerText = Referencia; dtComprobante.AppendChild(datos);
                        dsSalida.AppendChild(dtComprobante);
                    }
                    break;
                case "REGISTRO_PACIFICO_AGROCALIDAD":
                case "REGISTRO_PACIFICO_ANT":
                    if (BanderaActualizar == "S")
                    {
                        XmlNode dtComprobante1 = xmldatos.CreateElement("dtActualizar");
                        datos = xmldatos.CreateElement("Referencia_TX"); datos.InnerText = Referencia_TX; dtComprobante1.AppendChild(datos);
                        dsSalida.AppendChild(dtComprobante1);
                    }
                    break;
                case "REGISTRO_PACIFICO_ANTCO":
                case "REGISTRO_PACIFICO_ANTO":
                case "REGISTRO_PACIFICO_MUNIQUITOEL":

                    if (BanderaActualizar == "S")
                    {
                        XmlNode dtComprobante1 = xmldatos.CreateElement("dtActualizar");
                        datos = xmldatos.CreateElement("Referencia_Adicional"); datos.InnerText = ReferenciaAdicional; dtComprobante1.AppendChild(datos);
                        dsSalida.AppendChild(dtComprobante1);
                    }
                    break;
                //agregado por luis.lopez(13/08/2014) --Para el caso de pagos sin consulta                
                case "REGISTRO_PACIFICO_MRLREV":
                    //Se crea nodo para que se envie el concepto a Referencia Adicional de Tabla Items
                    XmlNode dtActualizar = xmldatos.CreateElement("dtActualizar");
                    datos = xmldatos.CreateElement("Referencia_Adicional"); datos.InnerText = ReferenciaAdicional; dtActualizar.AppendChild(datos);
                    dsSalida.AppendChild(dtActualizar);
                    break;
                case "REGISTRO_PACIFICO_AMT":
                    // EventLog.WriteEntry("easysoft", "GetXMLSalidaPago REGISTRO_PACIFICO_AMT ");
                    //Se crea nodo para que se envie el concepto a Referencia de Tabla Items
                    XmlNode dtReferencia = xmldatos.CreateElement("dtActualizar");
                    datos = xmldatos.CreateElement("Referencia");
                    datos.InnerText = Referencia;
                    dtReferencia.AppendChild(datos);
                    dsSalida.AppendChild(dtReferencia);
                    // EventLog.WriteEntry("easysoft", "GetXMLSalidaPago dsSalida=" + dsSalida);
                    break;
                case "REGISTRO_PACIFICO_IEPI":
                    XmlNode dtIepi = xmldatos.CreateElement("dtActualizar");
                    datos = xmldatos.CreateElement("Referencia");
                    datos.InnerText = Referencia;
                    dtIepi.AppendChild(datos);
                    dsSalida.AppendChild(dtIepi);
                    break;
                case "REGISTRO_PACIFICO_MOVIDELNOROL":
                    XmlNode dtMovidelnor = xmldatos.CreateElement("dtActualizar");
                    datos = xmldatos.CreateElement("Referencia_Adicional"); datos.InnerText = ReferenciaAdicional; dtMovidelnor.AppendChild(datos);
                    dsSalida.AppendChild(dtMovidelnor);
                    break;
                case "REGISTRO_PACIFICO_ANTOCITAC":
                case "REGISTRO_PACIFICO_ANTOCONV":
                case "REGISTRO_PACIFICO_ANTOSOLIC":
                    XmlNode dtactualizar = xmldatos.CreateElement("dtActualizar");
                    datos = xmldatos.CreateElement("Referencia_Adicional"); datos.InnerText = ReferenciaAdicional; dtactualizar.AppendChild(datos);
                    dsSalida.AppendChild(dtactualizar);
                    break;
                case "REGISTRO_PACIFICO_DEPOSITOS":
                    dtactualizar = xmldatos.CreateElement("dtActualizar");
                    datos = xmldatos.CreateElement("Referencia_Adicional"); datos.InnerText = ReferenciaAdicional; dtactualizar.AppendChild(datos);
                    dsSalida.AppendChild(dtactualizar);
                    break;
                default:
                    break;
            }
            dsSalida.AppendChild(dtDatosTransaccion);
            xmldatos.AppendChild(dsSalida);
            return xmldatos.InnerXml;
        }

        private string EnmascararCedula(string NumeroId_Cliente)
        {

            if (NumeroId_Cliente.Length >= 10)
            {
                NumeroId_Cliente = NumeroId_Cliente.Substring(0, 6) + "XXXX";
            }
            else
            {
                NumeroId_Cliente = "XXXXXXXXXX";
            }

            return NumeroId_Cliente;
        }

        //private string EnmascararTarjeta(string Contrapartida)
        //{

        //    if (Contrapartida.Length >= 10)
        //    {
        //        Contrapartida = Contrapartida.Substring(0, 8) + "XXXXXX" + Contrapartida.Substring(15, 1);
        //    }
        //    else
        //    {
        //        Contrapartida = Contrapartida.Substring(0, 5) + "XXXXXX";
        //    }

        //    return Contrapartida;
        //}

        private string EnmascararDatos(string Dato)
        {
            string datoEnmascarado = Dato;
            string strMascara = string.IsNullOrEmpty(ConfigurationManager.AppSettings["Mascara"]) ? "##XXXXXX##XXXX" : ConfigurationManager.AppSettings["Mascara"];
            string strCodifica = string.IsNullOrEmpty(ConfigurationManager.AppSettings["Codifica_Mascara"]) ? "X|0|X|1|X|2|X|3|X|4|X|5|X|6|X|7|X|8|X|9|X" : ConfigurationManager.AppSettings["Codifica_Mascara"];
            try
            {
                //2018-09-03 se cambio por que la util no tiene los metodos
                //datoEnmascarado = EasySoft.Util.EasyString.Enmascarar(Dato, strMascara, strCodifica);
                datoEnmascarado = Enmascarar(Dato, strMascara, strCodifica);
            }
            catch (Exception ex)
            {
                EventLog.WriteEntry("EasySwitch", string.Format("EnmascararDatos InnerException={0} -  Message={1}  - Source={2} - StackTrace={3}  ", ex.InnerException, ex.Message, ex.Source, ex.StackTrace));
            }
            return datoEnmascarado;
        }

        private static int BusquedaValor(string[] Array_busqueda, string valor)
        {
            for (int index = 0; index < Array_busqueda.Length; ++index)
            {
                if (Array_busqueda[index] == valor)
                    return index;
            }
            return 0;
        }

        public static string Enmascarar(string stringOriginal, string Mascara, string codifica)
        {
            char[] chArray = stringOriginal.ToCharArray();
            string[] Array_busqueda = codifica.Split('|');
            if (!string.IsNullOrEmpty(Mascara))
            {
                int num1 = Math.Min(stringOriginal.Length, Mascara.Length);
                for (int index = 0; index < num1; ++index)
                {
                    if ((int)Mascara[index] != 35)
                    {
                        int num2 = BusquedaValor(Array_busqueda, chArray[index].ToString());
                        chArray[index] = Convert.ToChar(Array_busqueda[num2 + 1]);
                    }
                }
            }
            return new string(chArray);
        }
        private string GetXMLSalidaReverso(string Fecha_Proceso, string Codigo_Retorno, string Descripcion_Retorno)
        {
            XmlDocument xmldatos = new System.Xml.XmlDocument();
            XmlNode dsSalida = xmldatos.CreateElement("dsSalidaReverso");
            XmlNode dtDatosTransaccion = xmldatos.CreateElement("dtDatosTransaccion");
            XmlNode datos = xmldatos.CreateElement("Fecha_Proceso"); datos.InnerText = Fecha_Proceso; dtDatosTransaccion.AppendChild(datos);
            datos = xmldatos.CreateElement("Codigo_Retorno"); datos.InnerText = Codigo_Retorno; dtDatosTransaccion.AppendChild(datos);
            datos = xmldatos.CreateElement("Descripcion_Retorno"); datos.InnerText = Descripcion_Retorno; dtDatosTransaccion.AppendChild(datos);

            dsSalida.AppendChild(dtDatosTransaccion);

            xmldatos.AppendChild(dsSalida);
            return xmldatos.InnerXml;
        }

        /// <summary>
        /// Punto de entrada para envio a puntomatico
        /// </summary>
        /// <param name="strOperador"></param>
        /// <param name="strTransaccion"></param>
        /// <param name="strHilo"></param>
        /// <param name="strEstado"></param>
        /// <returns></returns>
        public string Procesar_Transaccion_Log(string strOperador, string strTransaccion, string strHilo, string strEstado)
        {
            //return ad.Obtener_Transaccion_Switch_Log(strTrama, ref lngID_log, strOperador, bolProcesoActivo);
            //Se indica la eliminacion del objeto luego del fin de la llamada para evitar que se quede abeirto luego de la llamada de un Vb script.

            var administradorReintentos = new AdministradorReintentos();

            var watchers = new Stopwatch();

            var strTrama = string.Empty;
            long lngID_log = 0;
            var bolProcesoActivo = true;
            var strRespuesta = string.Empty;
            int IdTransaccion = 0;
            int intCant = 0;
            var strCodigoRetorno = string.Empty;
            var strMensajeProceso = string.Empty;
            var strIdOrigen = "0";
            int i = 0;
            EventLog.WriteEntry("EasySwitch", "Pacifico_Procesos.Procesar_Transaccion_Log:INICIO EL PROCESO DEL SWITCH # " + strHilo + "Pacifico", EventLogEntryType.Information);
            Guid key;
            var existeRespuestaServicio = true;
            var finDeReintentosPorConfirmacion = false;

            while (bolProcesoActivo)
            {
                existeRespuestaServicio = true;
                finDeReintentosPorConfirmacion = false;
                key = Guid.NewGuid();
                i++;
                try
                {
                    watchers.Reset();
                    watchers.Start();

                    strRespuesta = adm.Obtener_Transaccion_Switch_Log(ref strTrama, ref lngID_log, strOperador, ref strTransaccion, ref IdTransaccion, strHilo, strEstado, ref intCant);

                    watchers.Stop();


                    EventLog.WriteEntry("EasySwitch", $"1. {key.ToString()} Tiempo de la consulta Milisegundos: { watchers.ElapsedMilliseconds }", EventLogEntryType.Information);


                    if (strRespuesta == "NOHAYTRAMA") Thread.Sleep(800);
                    else
                    {


                        #region envio al banco
                        //var ws = new WSSFinancieroCobrosPagos();
                        var ws = new WSPacifico.ProcesaCPTPortTypeClient();
                        ws.Endpoint.Address = new EndpointAddress(Util.AccessPoint.GetParametro("EASYSWITCHPLUS", "WEBSERVICE"));
                        try
                        {
                            watchers.Reset();
                            watchers.Start();
                            try
                            {
                                strRespuesta = ws.ProcesaCobrosYPagos(strTrama);
                                //servicio no disponnible
                                //strRespuesta = "<trama><Cabecera><FechaContable></FechaContable><CodigoRetorno>0015</CodigoRetorno><MensajeRetorno>Servicio no disponible</MensajeRetorno></Cabecera></trama>";

                                //proceso ok
                                // strRespuesta = "<trama><Cabecera><FechaContable>20110316</FechaContable><CodigoRetorno>0001</CodigoRetorno><MensajeRetorno>Proceso OK.</MensajeRetorno><CantidadRegistros>01</CantidadRegistros></Cabecera><Detalle><Rubro><Identificacion>C</Identificacion><Servicio>AU</Servicio><Valor>000000000000210</Valor><CodigoMoneda>USD</CodigoMoneda><FechaInicial>20110210</FechaInicial><FechaFinal>20110317</FechaFinal><Nombre>SIMBA¥A LINCANGO ROSA MAR</Nombre><OrdenBanco>00000000</OrdenBanco><Secuencial>0000000</Secuencial><Codigo>00049194484</Codigo><Referencia>20110222                                                                                            </Referencia><ValorCapital>000000000000000</ValorCapital><ValorInteres>000000000000000</ValorInteres><ValorMora>000000000000000</ValorMora><ValorMulta>000000000000000</ValorMulta><CobroComision>S</CobroComision><ValorComision>000000000000035</ValorComision></Rubro></Detalle></trama>"; 

                                //no existe informacion
                                //strRespuesta = "<trama><Cabecera><FechaContable>20120126</FechaContable><CodigoRetorno>0047</CodigoRetorno><MensajeRetorno>NO EXISTE INFORMACION</MensajeRetorno></Cabecera></trama>";
                                // EventLog.WriteEntry("easysoft", " andi pagostrRespuesta="+strRespuesta);
                            }
                            catch (Exception ex)
                            {
                                EventLog.WriteEntry("EasySwitch", "Pacifico_Procesos.Procesar_Transaccion_Log:Error:" + ex.Message, EventLogEntryType.Error);
                                //iteracion con respuesta
                                existeRespuestaServicio = false;
                            }
                            watchers.Stop();

                            EventLog.WriteEntry("EasySwitch", $"2. {key.ToString()} Tiempo del envio al servicio Cobros y pagos Milisegundos: { watchers.ElapsedMilliseconds }", EventLogEntryType.Information);

                            if (existeRespuestaServicio)
                            {
                                EventLog.WriteEntry("EasySwitch", "Respuesta del Host:" + strRespuesta);
                                //strRespuesta = adm.Actualizar_Transaccion_Switch_Log_Tran(lngID_log, "PROCESADO", strRespuesta); 
                                DataSet dsRespuesta = adm.getDataSetFromString(strRespuesta);
                                DataSet dsEntradaDatos = adm.getDataSetFromString(strTrama);

                                if (dsRespuesta.Tables.Contains("Cabecera"))
                                {
                                    strCodigoRetorno = dsRespuesta.Tables["Cabecera"].Rows[0]["CodigoRetorno"].ToString();
                                    strMensajeProceso = dsRespuesta.Tables["Cabecera"].Rows[0]["MensajeRetorno"].ToString();
                                }
                                if (dsEntradaDatos.Tables.Contains("Cabecera"))
                                {
                                    strIdOrigen = dsEntradaDatos.Tables["Cabecera"].Rows[0]["NumeroTransaccion"].ToString();
                                }


                                //Evaluacion de la condicion de fin de reintentos
                                if (strMensajeProceso.Contains("Proceso OK."))
                                    finDeReintentosPorConfirmacion = true;
                            }


                            watchers.Reset();

                            if (!administradorReintentos.PuedeIterar(lngID_log) || finDeReintentosPorConfirmacion)
                            //if (administradorReintentos.PuedeIterar(lngID_log) || finDeReintentosPorConfirmacion)
                            {
                                watchers.Start();
                                strRespuesta = adm.Actualizar_Transaccion_Switch_Log_Tran(lngID_log, "PROCESADO", strRespuesta,
                                    DateTime.Now.ToString("yyyyMMdd HH:mm:ss:fff"), strCodigoRetorno + "|" + strMensajeProceso, string.Empty, string.Empty);
                                watchers.Stop();

                            }
                            else
                            {
                                //Quitar estado PROCESANDO a PENDIENTE

                                watchers.Start();
                                strRespuesta = adm.Actualizar_Transaccion_Switch_Log_Tran(lngID_log, "PENDIENTE");
                                watchers.Stop();
                            }
                            EventLog.WriteEntry("EasySwitch", $"3. {key.ToString()} Tiempo de actualiozacion Milisegundos: { watchers.ElapsedMilliseconds }", EventLogEntryType.Information);



                            EventLog.WriteEntry("EasySwitch", "Pacifico_Procesos.Procesar_Transaccion_Log:Despues de Enviar:WSProcesosPacifico.WS840:DatosS:" + strRespuesta, EventLogEntryType.Information);
                        }
                        catch (Exception e)
                        {
                            EventLog.WriteEntry("EasySwitch", "Pacifico_Procesos.Procesar_Transaccion_Log:Error:" + e.Message, EventLogEntryType.Error);
                            if (!strTransaccion.Contains("REVERSO"))// si no es reverso automatico ahi si le pone envio dudoso para que realice un REVERSO AUTO, pero sino que siga reintentando
                            {
                                strRespuesta = adm.Actualizar_Transaccion_Switch_Log_Tran(lngID_log, "ERROR", e.Message);
                                //bolProcesoActivo = false;
                                //CUANDO SE PRESENTA ALGUN ERRO HAY QUE ENVIAR A REALIZAR EL REVERSO AUTOMATICO
                                var dsEntrada = new DataSet();

                                var dsEntradaDatos = adm.getDataSetFromString(strTrama);
                                if (dsEntradaDatos.Tables.Contains("Cabecera"))
                                {
                                    strIdOrigen = dsEntradaDatos.Tables["Cabecera"].Rows[0]["NumeroTransaccion"].ToString();
                                }

                                GenerarReversoAutomatico(strTransaccion, strOperador, dsEntrada, true, Convert.ToString(IdTransaccion), strTrama, strIdOrigen);
                            }
                            else
                            {
                                string strRespuesta1 = adm.Actualizar_Transaccion_Switch_Log_Tran(lngID_log, "PENDIENTE", string.Empty);
                            }
                        }

                        #endregion

                    }

                    if (i == 120)
                        bolProcesoActivo = false;
                }
                catch (Exception ee)
                {
                    EventLog.WriteEntry("EasySwitch", "Pacifico_Procesos.Procesar_Transaccion_Log:Error:" + ee.Message, EventLogEntryType.Error);
                    strRespuesta = adm.Actualizar_Transaccion_Switch_Log_Tran(lngID_log, "ENVIO_DUDOSO", ee.Message);
                    //bolProcesoActivo = false;
                }
                strIdOrigen = string.Empty;
            }
            EventLog.WriteEntry("EasySwitch", "Pacifico_Procesos.Procesar_Transaccion_Log:FIN DEL SWITCH Pacifico", EventLogEntryType.Information);
            return strRespuesta;
        }

        public void ProcesarTransaccionLogv2(string operador, string transaccion, string hilo, string estado)
        {
            //return ad.Obtener_Transaccion_Switch_Log(strTrama, ref lngID_log, strOperador, bolProcesoActivo);
            //Se indica la eliminacion del objeto luego del fin de la llamada para evitar que se quede abeirto luego de la llamada de un Vb script.

            var watchers = new Stopwatch();

            var strTrama = string.Empty;
            long lngID_log = 0;
            var bolProcesoActivo = true;
            var strRespuesta = string.Empty;
            int IdTransaccion = 0;
            int intCant = 0;
            var strCodigoRetorno = string.Empty;
            var strMensajeProceso = string.Empty;
            var strIdOrigen = "0";
            int i = 0;
            EventLog.WriteEntry("EasySwitch", "Pacifico_Procesos.Procesar_Transaccion_Log:INICIO EL PROCESO DEL SWITCH # " + hilo + "Pacifico", EventLogEntryType.Information);
            Guid key;

            while (bolProcesoActivo)
            {
                key = Guid.NewGuid();
                i++;
                try
                {
                    watchers.Reset();
                    watchers.Start();

                    strRespuesta = adm.Obtener_Transaccion_Switch_Log(ref strTrama, ref lngID_log, operador, ref transaccion, ref IdTransaccion, hilo, estado, ref intCant);

                    watchers.Stop();


                    EventLog.WriteEntry("EasySwitch", $"1. {key.ToString()} Tiempo de la consulta Milisegundos: { watchers.ElapsedMilliseconds }", EventLogEntryType.Information);


                    if (strRespuesta == "NOHAYTRAMA") Thread.Sleep(800);
                    else
                    {
                        var ws = new WSPacifico.ProcesaCPTPortTypeClient();
                        ws.Endpoint.Address = new EndpointAddress(Util.AccessPoint.GetParametro("EASYSWITCHPLUS", "WEBSERVICE"));



                        ws.ProcesaCobrosYPagosCompleted += Ws_ProcesaCobrosYPagosCompleted;


                        EventLog.WriteEntry("EasySwitch", $"2.1. {key.ToString()} Tiempo del envio al servicio Cobros y pagos Milisegundos: { DateTime.Now }", EventLogEntryType.Information);
                        watchers.Reset();
                        watchers.Start();
                        ws.ProcesaCobrosYPagosAsync(strTrama, new SendServiceDto()
                        {
                            Key = key.ToString(),
                            Trama = strTrama,
                            IdLog = lngID_log,
                            Transaccion = transaccion,
                            IdTransaccion = IdTransaccion,
                            Operador = operador
                        });
                        watchers.Stop();

                    }

                    if (i == 120)
                        bolProcesoActivo = false;
                }
                catch (Exception ee)
                {
                    EventLog.WriteEntry("EasySwitch", "Pacifico_Procesos.Procesar_Transaccion_Log:Error:" + ee.Message + ee.StackTrace, EventLogEntryType.Error);
                    strRespuesta = adm.Actualizar_Transaccion_Switch_Log_Tran(lngID_log, "ENVIO_DUDOSO", ee.Message);
                    //bolProcesoActivo = false;
                }
                strIdOrigen = string.Empty;
            }
            EventLog.WriteEntry("EasySwitch", "Pacifico_Procesos.Procesar_Transaccion_Log:FIN DEL SWITCH Pacifico", EventLogEntryType.Information);
        }

        private void Ws_ProcesaCobrosYPagosCompleted(object sender, ProcesaCobrosYPagosCompletedEventArgs evt)
        {
            var strRespuesta = evt.Result;
            var data = (SendServiceDto)evt.UserState;

            var strCodigoRetorno = string.Empty;
            var strMensajeProceso = string.Empty;
            string strIdOrigen = "0";
            try
            {
                var watchers = new Stopwatch();

                EventLog.WriteEntry("EasySwitch", $"2.2. {data.Key} Tiempo de la respuesta al servicio Cobros y pagos Milisegundos: { DateTime.Now }",
                                            EventLogEntryType.Information);


                EventLog.WriteEntry("EasySwitch", "Respuesta del Host:" + strRespuesta);
                //strRespuesta = adm.Actualizar_Transaccion_Switch_Log_Tran(lngID_log, "PROCESADO", strRespuesta); 
                DataSet dsRespuesta = adm.ObtenerDataSetDeXml(strRespuesta);

                EventLog.WriteEntry("EasySwitch", "s: trama enviada:" + data.Trama + "idlog: " + data.IdLog);
                DataSet dsEntradaDatos = adm.ObtenerDataSetDeXml(data.Trama);

                if (dsRespuesta.Tables.Contains("Cabecera"))
                {
                    strCodigoRetorno = dsRespuesta.Tables["Cabecera"].Rows[0]["CodigoRetorno"].ToString();
                    strMensajeProceso = dsRespuesta.Tables["Cabecera"].Rows[0]["MensajeRetorno"].ToString();
                }
                if (dsEntradaDatos.Tables.Contains("Cabecera"))
                {
                    strIdOrigen = dsEntradaDatos.Tables["Cabecera"].Rows[0]["NumeroTransaccion"].ToString();
                }

                watchers.Reset();
                watchers.Start();
                strRespuesta = adm.Actualizar_Transaccion_Switch_Log_Tran(data.IdLog, "PROCESADO", strRespuesta,
                    DateTime.Now.ToString("yyyyMMdd HH:mm:ss:fff"), strCodigoRetorno + "|" + strMensajeProceso, string.Empty, string.Empty);
                watchers.Stop();


                EventLog.WriteEntry("EasySwitch", $"3. {data.Key} Tiempo de actualiozacion Milisegundos: { watchers.ElapsedMilliseconds }", EventLogEntryType.Information);



                EventLog.WriteEntry("EasySwitch", "Pacifico_Procesos.Procesar_Transaccion_Log:Despues de Enviar:WSProcesosPacifico.WS840:DatosS:" + strRespuesta, EventLogEntryType.Information);
            }
            catch (Exception e)
            {
                EventLog.WriteEntry("EasySwitch", "Pacifico_Procesos.Procesar_Transaccion_Log:Error:" + e.Message + e.StackTrace, EventLogEntryType.Error);
                if (!data.Transaccion.Contains("REVERSO"))// si no es reverso automatico ahi si le pone envio dudoso para que realice un REVERSO AUTO, pero sino que siga reintentando
                {
                    strRespuesta = adm.Actualizar_Transaccion_Switch_Log_Tran(data.IdLog, "ERROR", e.Message);
                    //bolProcesoActivo = false;
                    //CUANDO SE PRESENTA ALGUN ERRO HAY QUE ENVIAR A REALIZAR EL REVERSO AUTOMATICO
                    var dsEntrada = new DataSet();

                    var dsEntradaDatos = adm.ObtenerDataSetDeXml(data.Trama);
                    if (dsEntradaDatos.Tables.Contains("Cabecera"))
                    {
                        strIdOrigen = dsEntradaDatos.Tables["Cabecera"].Rows[0]["NumeroTransaccion"].ToString();
                    }

                    GenerarReversoAutomatico(data.Transaccion, data.Operador, dsEntrada, true, Convert.ToString(data.IdTransaccion), data.Trama, strIdOrigen);
                }
                else
                {
                    string strRespuesta1 = adm.Actualizar_Transaccion_Switch_Log_Tran(data.IdLog, "PENDIENTE", string.Empty);
                }
            }
        }

        /// <summary>
        /// Función que procesa las solicitudes al WS de retiros
        /// </summary>
        /// <param name="strTrama"></param>
        /// <param name="strXmlEntrada"></param>
        /// <returns></returns>
        public string ProcesaCobrosYPagosRetiros(string strTrama, string strXmlEntrada)
        {
            EventLog.WriteEntry("EasySwitch", "1 ProcesaCobrosYPagosRetiros strXmlEntrada=" + strXmlEntrada);
            DataSet dsXmlEntrada = adm.getDataSetFromString(strXmlEntrada);
            string strMensajeProcesoRetiro = string.Empty;
            string idServicio = string.Empty;
             string tipoTransaccion = string.Empty, tipo = string.Empty;
            string NumeroIdCliente = string.Empty;
            string strRespuesta = string.Empty;
            string nombreCliente = string.Empty;
            string cuentaCliente = string.Empty;
            var Fuente_Informacion = string.Empty;

            var new_ws = new WSNewPacifico2.TBBAFinancieroClient();

            new_ws.Endpoint.Address = new EndpointAddress(Util.AccessPoint.GetParametro("EASYSWITCHPLUS", "NEW_WEBSERVICE"));

            EventLog.WriteEntry("EasySwitch", "Va por el nuevo web service. id_Servicio= " + idServicio + "\nurl del web service= " + new_ws.Endpoint.Address + "\ntipoTransaccion= " + tipoTransaccion + "\n strTrama: " + strTrama);
            var watch = new Stopwatch();
            watch.Start();


            if (dsXmlEntrada.Tables["DatosTransaccion"].Columns.Contains("Tipo"))
            {
                tipo = dsXmlEntrada.Tables["DatosTransaccion"].Rows[0]["Tipo"].ToString();
            }
            if (dsXmlEntrada.Tables["DatosUsuario"].Columns.Contains("TipoTransaccion"))
            {
                tipoTransaccion = dsXmlEntrada.Tables["DatosUsuario"].Rows[0]["TipoTransaccion"].ToString();
            }
            //PARA MASTERCARD
            if (dsXmlEntrada.Tables["DatosTransaccion"].Columns.Contains("Fuente_Informacion"))
            {
                Fuente_Informacion = dsXmlEntrada.Tables["DatosTransaccion"].Rows[0]["Fuente_Informacion"].ToString();
            }
             var transaccion = string.Empty;
            if (!string.IsNullOrEmpty(tipoTransaccion))
                transaccion = tipoTransaccion + "_" + Fuente_Informacion;
            else
                transaccion = tipo + "_" + Fuente_Informacion;
            //PACIFICO_RET
            //PACIFICO_MASTER
            EventLog.WriteEntry("EasySwitch", "Pagos y cobros new ws transaccion=" + transaccion);
            switch (transaccion)
            {

                case "CONSULTA_PACIFICO_SALDOS":

                    WSNewPacifico2.validaCuentaClientePeticion peticionValidarCuenta = new WSNewPacifico2.validaCuentaClientePeticion();

                    DatosEnvio envioVC = new DatosEnvio();
                    llenarDatosEnvio(strTrama, ref envioVC);
                    peticionValidarCuenta.idMensaje = envioVC.idMensaje;
                    peticionValidarCuenta.idUsuario = envioVC.idUsuario;
                    peticionValidarCuenta.canal = envioVC.canal;
                    peticionValidarCuenta.token = envioVC.token;
                    peticionValidarCuenta.localidad = envioVC.localidad;
                    peticionValidarCuenta.agencia = envioVC.agencia;
                    peticionValidarCuenta.fechaHoraprograma = envioVC.fechaHoraprograma;
                    peticionValidarCuenta.ip = envioVC.ip;
                    peticionValidarCuenta.macAddress = envioVC.macAddress;
                    peticionValidarCuenta.hostName = envioVC.hostName;
                    peticionValidarCuenta.medioOTP = (WSNewPacifico2.medioOTPEnum)Enum.Parse(typeof(WSNewPacifico2.medioOTPEnum), envioVC.medioOTP.ToUpper());
                    peticionValidarCuenta.medioOTPSpecified = true;
                    peticionValidarCuenta.tipoIdentificacion = (WSNewPacifico2.tipoIdentificacionEnum)Enum.Parse(typeof(WSNewPacifico2.tipoIdentificacionEnum), envioVC.tipoIdentificacion);
                    peticionValidarCuenta.tipoIdentificacionSpecified = true;
                    peticionValidarCuenta.identificacion = envioVC.identificacion;
                    peticionValidarCuenta.numeroCuenta = envioVC.numeroCuenta;
                    peticionValidarCuenta.tipoCuenta = (WSNewPacifico2.tipoCuentaEnum)Enum.Parse(typeof(WSNewPacifico2.tipoCuentaEnum), envioVC.tipoCuenta.ToString());
                    peticionValidarCuenta.tipoCuentaSpecified = true;


                    EventLog.WriteEntry("EasySwitch", "Datos que se envian al nuevo servicio de pacifico: \nfechaCaducidad= " + peticionValidarCuenta.agencia
                        + "\n" + "fechaContable= " + peticionValidarCuenta.fechaHoraprograma + "\nfechaHora= " + peticionValidarCuenta.fechaHora + "\n" + "hostName= " + peticionValidarCuenta.hostName + "\nidentificacion= " + peticionValidarCuenta.identificacion + "\ncuenta= " + peticionValidarCuenta.numeroCuenta + "\nidMensaje= " + peticionValidarCuenta.idMensaje + "\nip= " + peticionValidarCuenta.ip + "\nmacAddress= " + peticionValidarCuenta.macAddress + "\ntipoCuenta= " + peticionValidarCuenta.tipoCuenta.ToString() + "\nmedioOTP=" + peticionValidarCuenta.medioOTP + "\ntipoIdentificacion=" + peticionValidarCuenta.tipoIdentificacion);

                    try
                    {
                        if (ConfigurationManager.AppSettings["AceptarCertificado"] == "SI")
                        {
                            ServicePointManager.ServerCertificateValidationCallback = delegate (object s, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors) { return true; };
                        }

                        WSNewPacifico2.validaCuentaClienteRespuesta respuesta = new_ws.validarCuentaCliente(peticionValidarCuenta);
                    }
                    catch (Exception ex)
                    { }
                    break;
                case "REGISTRO_PACIFICO_SALDOS":
                    EventLog.WriteEntry("EasySwitch", "REGISTRO_PACIFICO_saldos strTrama=" + strTrama);


                    // llenarPeticionRetiroParaWS3(ref petConsultaCta, strTrama, nombreCliente, cuentaCliente);
                    DatosEnvio envio = new DatosEnvio();
                    llenarDatosEnvio(strTrama, ref envio);
                    WSNewPacifico2.consultaSaldoCuentaPeticion petConsultaCta = new WSNewPacifico2.consultaSaldoCuentaPeticion();
                    petConsultaCta.idMensaje = envio.idMensaje;
                    petConsultaCta.idUsuario = envio.idUsuario;
                    petConsultaCta.canal = envio.canal;
                    petConsultaCta.token = envio.token;
                    petConsultaCta.localidad = envio.localidad;
                    petConsultaCta.agencia = envio.agencia;
                    petConsultaCta.fechaHoraprograma = envio.fechaHoraprograma;
                    petConsultaCta.ip = envio.ip;
                    petConsultaCta.macAddress = envio.macAddress;
                    petConsultaCta.hostName = envio.hostName;
                    petConsultaCta.codigoOTP = envio.codigoOTP;
                    petConsultaCta.medioOTP = (WSNewPacifico2.medioOTPEnum)Enum.Parse(typeof(WSNewPacifico2.medioOTPEnum), envio.medioOTP.ToUpper());
                    petConsultaCta.medioOTPSpecified = true;
                    EventLog.WriteEntry("EasySwitch", "REGISTRO_PACIFICO_saldos antes tipoIdentificacion");
                    petConsultaCta.tipoIdentificacion = (WSNewPacifico2.tipoIdentificacionEnum)Enum.Parse(typeof(WSNewPacifico2.tipoIdentificacionEnum), envio.tipoIdentificacion);
                    petConsultaCta.tipoIdentificacionSpecified = true;
                    EventLog.WriteEntry("EasySwitch", "REGISTRO_PACIFICO_saldos  tipoIdentificacion=" + petConsultaCta.tipoIdentificacion);
                    petConsultaCta.identificacion = envio.identificacion;
                    petConsultaCta.numeroCuenta = envio.numeroCuenta;
                    petConsultaCta.tipoCuenta = (WSNewPacifico2.tipoCuentaEnum)Enum.Parse(typeof(WSNewPacifico2.tipoCuentaEnum), envio.tipoCuenta.ToString());
                    petConsultaCta.tipoCuentaSpecified = true;



                    EventLog.WriteEntry("EasySwitch", "petConsultaCta2.agencia=s" + envio.agencia.ToString());
                    WSNewPacifico2.consultaSaldoCuentaRespuesta respuesta1 = new_ws.consultarSaldoCuenta(petConsultaCta);
                    EventLog.WriteEntry("EasySwitch", "despues respuesta");
                    EventLog.WriteEntry("EasySwitch", "despues Tipo=" + respuesta1.tipo);
                    EventLog.WriteEntry("EasySwitch", "despues codigo=" + respuesta1.codigo);
                    EventLog.WriteEntry("EasySwitch", "despues descripcion=" + respuesta1.descripcion);
                    EventLog.WriteEntry("EasySwitch", "despues idMensaje=" + respuesta1.idMensaje);
                    EventLog.WriteEntry("EasySwitch", "despues saldoDisponible=" + respuesta1.saldoDisponible);
                    EventLog.WriteEntry("EasySwitch", "despues saldoTotal=" + respuesta1.saldoTotal);



                    break;
                case "CONSULTA_PACIFICO_MASTER_1":
                    WSNewPacifico2.consultaTarjetasPeticion petConsulta = new WSNewPacifico2.consultaTarjetasPeticion();
                    EventLog.WriteEntry("EasySwitch", "CONSULTA_PACIFICO_MASTER_1 strTrama=" + strTrama);
                    llenarPeticionConsultaNuevoWS(ref petConsulta, strTrama);

                    EventLog.WriteEntry("EasySwitch", "Datos que se envian al nuevo servicio de pacificoMastercard: \nfechaCaducidad= " + petConsulta.fechaHora + "\n" + "fechaContable= " + petConsulta.fechaContable + "\nfechaHora= " + petConsulta.fechaHora + "\n" + "hostName= " + petConsulta.hostName + "\nidentificacion= " + petConsulta.identificacion + "\nidentificacionCajero= " + petConsulta.identificacionCajero + "\nidMensaje= " + petConsulta.idMensaje + "\nip= " + petConsulta.ip + "\nmacAddress= " + petConsulta.macAddress + "\nidentificacionCajero= " + petConsulta.identificacionCajero.ToString() + "\nToken=" + petConsulta.token + "\ntipoIdentificacion=" + petConsulta.tipoIdentificacion);
                    try
                    {
                        EventLog.WriteEntry("EasySwitch", "antes respuesta");
                        WSNewPacifico2.consultaTarjetasRespuesta respuesta = new_ws.consultarTarjetas(petConsulta);
                        EventLog.WriteEntry("EasySwitch", "despues respuesta");

                        nombreCliente = Convert.ToString(respuesta.tarjetasCliente);//Recibo nombre y cuenta en la Consulta para reenviar en el Registro
                        cuentaCliente = respuesta.coreMensaje;
                        EventLog.WriteEntry("EasySwitch", string.Format("Respuesta Master codigo={0} - coreCodigo={1} - coreMensaje={2} - descripcion={3} - duracionTarea={4} - idMensaje={5} - tarjetasCliente={6} - tipo={7}", respuesta.codigo, respuesta.coreCodigo, respuesta.coreMensaje, respuesta.descripcion
                            , respuesta.duracionTarea, respuesta.idMensaje, respuesta.tarjetasCliente.Length, respuesta.tipo));

                        //tarjeta cliente
                        WSNewPacifico2.tarjetaCliente[] tar = new WSNewPacifico2.tarjetaCliente[100];
                        tar = respuesta.tarjetasCliente;

                        var tarjetas = tar[0];
                        EventLog.WriteEntry("EasySwitch", "tarjetas=" + tarjetas);



                        if (respuesta.codigo == "000")
                        {
                            respuesta.descripcion = "PROCESO OK.";
                            respuesta.codigo = "0001";
                        }
                        strMensajeProcesoRetiro = respuesta.descripcion;

                        strRespuesta = string.Format("<trama><Cabecera><CodigoRetorno>{0}</CodigoRetorno><MensajeRetorno>{1}</MensajeRetorno><DuracionTarea>{2}</DuracionTarea><IdMensaje>{3}</IdMensaje><Nombre>{4}</Nombre><NumeroCuenta>{5}</NumeroCuenta><Tipo>{6}</Tipo><FechaContable>{7}</FechaContable><tipoIdentificacion>{8}</tipoIdentificacion></Cabecera></trama>",
                        respuesta.codigo, strMensajeProcesoRetiro, respuesta.duracionTarea, respuesta.idMensaje, tarjetas.nombreTitular, tarjetas.referenciaTarjeta, tarjetas.marca.tipo, petConsulta.fechaContable, petConsulta.tipoIdentificacion.ToString());
                        EventLog.WriteEntry("EasySwitch", "tarjetas.marca.tipo=" + tarjetas.marca.tipo);
                    }
                    catch (Exception ex)
                    {
                        EventLog.WriteEntry("EasySwitch", string.Format("CONSULTA_PACIFICO_MASTER InnerException={0} - Message={0} - Source={0} - StackTrace={0}", ex.InnerException, ex.Message, ex.Source, ex.StackTrace));
                    }
                    break;

                case "REGISTRO_PACIFICO_MASTER_1":
                    EventLog.WriteEntry("EasySwitch", "Se ejecutará codigo de REGISTRO_PACIFICO_MASTER_1 ");
                    // WSNewPacifico2.retiraCuentaPeticion peticionRetiro = new WSNewPacifico2.retiraCuentaPeticion();
                    WSNewPacifico2.pagoTarjetaPeticion petRetiro = new WSNewPacifico2.pagoTarjetaPeticion();
                    llenarPeticionPagoTarjeta(ref petRetiro, strTrama, nombreCliente, cuentaCliente);

                    EventLog.WriteEntry("Easyswitch", "Datos que se envian al nuevo servicio de pacifico: \n" + petRetiro.agencia + "\n" + petRetiro.canal + "\n" + petRetiro.fechaContable + "\n" + petRetiro.fechaHora + "\n" + petRetiro.hostName + "\n" + petRetiro.idMensaje + "\n" + petRetiro.identificacionClienteTarjeta + "\n" + petRetiro.identificacionCajero + "\n" + petRetiro.idUsuario + "\n" + petRetiro.ip + "\n" + petRetiro.localidad + "\n" + petRetiro.macAddress + "\n" + petRetiro.token + "\n" + petRetiro.oficinaCPT + "\n" + petRetiro.tipoCuenta + "\n" + petRetiro.tipoIdentificacionClienteTarjeta + "\n" + petRetiro.nombreClienteTarjeta + "\n" + petRetiro.numeroCuenta + "\n" + petRetiro.numeroTarjetaEncriptada + "\n" + petRetiro.valorTransaccion);

                    try
                    {
                        if (ConfigurationManager.AppSettings["AceptarCertificado"] == "SI")
                        {
                            ServicePointManager.ServerCertificateValidationCallback = delegate (object s, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors) { return true; };
                        }

                        WSNewPacifico2.pagoTarjetaRespuesta respuesta = new_ws.pagarTarjeta(petRetiro);

                        if (respuesta.codigo == "0001")
                            respuesta.descripcion = "PROCESO OK.";

                        strMensajeProcesoRetiro = respuesta.descripcion;

                        strRespuesta = string.Format("<trama><Cabecera><FechaContable>{8}</FechaContable><CodigoRetorno>{0}</CodigoRetorno><MensajeRetorno>{1}</MensajeRetorno><DuracionTarea>{2}</DuracionTarea><IdMensaje>{3}</IdMensaje><OrdenBanco>{4}</OrdenBanco><Referencia>{5}</Referencia><Secuencial>{6}</Secuencial><Tipo>{7}</Tipo><tipoIdentificacion>{9}</tipoIdentificacion></Cabecera></trama>",
                            respuesta.codigo, strMensajeProcesoRetiro, respuesta.duracionTarea, respuesta.idMensaje, respuesta.numeroAutorizacion, respuesta.coreCodigo, respuesta.numeroComprobante, respuesta.tipo, petRetiro.fechaContable, petRetiro.tipoIdentificacionClienteTarjeta.ToString());
                        EventLog.WriteEntry("EasySwitch", "Respuesta del nuevo servicio de pacifico en registro master\ncodigo= " + respuesta.codigo + "\ndescripcion= " + respuesta.descripcion + "\nsecuencial= " + respuesta.numeroComprobante + "\nOrdenBanco= " + respuesta.numeroAutorizacion + "\nreferencia= " + respuesta.coreCodigo);


                    }
                    catch (Exception ex)
                    {
                        EventLog.WriteEntry("EasySwitch", "Sucedio un error al consumir webService para hacer el retiro de efectivo de la cuenta\nMessage= " + ex.Message + "\nSource= " + ex.Source + "\nStackTrace= " + ex.StackTrace + "\nInnerException= " + ex.InnerException + "\nData= " + ex.Data + "\nTargetSite= " + ex.TargetSite);
                        throw;
                    }

                    break;
            }


            // switch (tipoTransaccion)
            switch (transaccion)
            {
                //   case "CONSULTA":
                
                case "CONSULTA_PACIFICO_RET":
                    {

                        WSNewPacifico2.consultaCuentaPeticion peticionConsulta = new WSNewPacifico2.consultaCuentaPeticion();

                        llenarPeticionConsultaParaWS(ref peticionConsulta, strTrama);

                        EventLog.WriteEntry("EasySwitch", "Datos que se envian al nuevo servicio de pacifico: \nfechaCaducidad= " + peticionConsulta.fechaCaducidad + "\n" + "fechaContable= " + peticionConsulta.fechaContable + "\nfechaHora= " + peticionConsulta.fechaHora + "\n" + "hostName= " + peticionConsulta.hostName + "\nidentificacion= " + peticionConsulta.identificacion + "\nidentificacionCajero= " + peticionConsulta.identificacionCajero + "\nidMensaje= " + peticionConsulta.idMensaje + "\nip= " + peticionConsulta.ip + "\nmacAddress= " + peticionConsulta.macAddress + "\ntipoCuenta= " + peticionConsulta.tipoCuenta.ToString() + "\nmedioOTP=" + peticionConsulta.medioOTP + "\ntipoIdentificacion=" + peticionConsulta.tipoIdentificacion);

                        try
                        {
                            if (ConfigurationManager.AppSettings["AceptarCertificado"] == "SI")
                            {
                                ServicePointManager.ServerCertificateValidationCallback = delegate (object s, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors) { return true; };
                            }

                            WSNewPacifico2.consultaCuentaRespuesta respuesta = new_ws.consultarCuenta(peticionConsulta);

                            nombreCliente = respuesta.nombre;//Recibo nombre y cuenta en la Consulta para reenviar en el Registro
                            cuentaCliente = respuesta.numeroCuenta;

                            if (respuesta.codigo == "0001")
                                respuesta.descripcion = "PROCESO OK.";

                            //strMensajeProcesoRetiro = respuesta.codigo + '|' + respuesta.descripcion;
                            strMensajeProcesoRetiro = respuesta.descripcion;
                            EventLog.WriteEntry("EasySwitch", "Antes de enviar la respuesta PASO 1" + respuesta.codigo + respuesta.numeroCuenta + respuesta.numeroTelefono);
                            strRespuesta = string.Format("<trama><Cabecera><FechaContable>{8}</FechaContable><CodigoRetorno>{0}</CodigoRetorno><MensajeRetorno>{1}</MensajeRetorno><DuracionTarea>{2}</DuracionTarea><IdMensaje>{3}</IdMensaje><Nombre>{4}</Nombre><NumeroCuenta>{5}</NumeroCuenta><Tipo>{7}</Tipo><tipoIdentificacion>{9}</tipoIdentificacion></Cabecera></trama>",
                            respuesta.codigo, strMensajeProcesoRetiro, respuesta.duracionTarea, respuesta.idMensaje, respuesta.nombre, respuesta.numeroCuenta, "", respuesta.tipo, peticionConsulta.fechaContable, peticionConsulta.tipoIdentificacion.ToString());
                            EventLog.WriteEntry("EasySwitch", "Respuesta del nuevo servicio de pacifico \ncodigo= " + respuesta.codigo + "\ndescripcion= " + respuesta.descripcion + "\nnombre= " + respuesta.nombre + "\nnumeroCuenta= " + respuesta.numeroCuenta);
                            EventLog.WriteEntry("EasySwitch", string.Format(" Transaccion={0} - numero tarjeta retiros={1}", transaccion, peticionConsulta.numeroTarjeta));
                        }
                        catch (Exception ex)
                        {
                            EventLog.WriteEntry("EasySwitch", "Sucedio un error al consumir webService para hacer la consulta de cuenta\nMessage= " + ex.Message + "\nSource= " + ex.Source + "\nStackTrace= " + ex.StackTrace + "\nInnerException= " + ex.InnerException + "\nData= " + ex.Data + "\nTargetSite= " + ex.TargetSite);
                            throw;
                        }


                        break;
                    }
                //case "REGISTRO":
                case "REGISTRO_PACIFICO_RET":
                    {
                        EventLog.WriteEntry("EasySwitch", "Se ejecutará codigo de retiro registro ");
                        WSNewPacifico2.retiraCuentaPeticion peticionRetiro = new WSNewPacifico2.retiraCuentaPeticion();

                        llenarPeticionRetiroParaWS3(ref peticionRetiro, strTrama, nombreCliente, cuentaCliente);

                        EventLog.WriteEntry("Easyswitch", "Datos que se envian al nuevo servicio de pacifico: \n" + peticionRetiro.agencia + "\n" + peticionRetiro.canal + "\n" + peticionRetiro.fechaContable + "\n" + peticionRetiro.fechaHora + "\n" + peticionRetiro.hostName + "\n" + peticionRetiro.idMensaje + "\n" + peticionRetiro.identificacion + "\n" + peticionRetiro.identificacionCajero + "\n" + peticionRetiro.idUsuario + "\n" + peticionRetiro.ip + "\n" + peticionRetiro.localidad + "\n" + peticionRetiro.macAddress + "\n" + peticionRetiro.token + "\n" + peticionRetiro.codigoMoneda + "\n" + peticionRetiro.codigoOTP + "\n" + peticionRetiro.oficinaCPT + "\n" + peticionRetiro.medioOTP + "\n" + peticionRetiro.tipoCuenta + "\n" + peticionRetiro.tipoIdentificacion + "\n" + peticionRetiro.nombreCliente + "\n" + peticionRetiro.numeroCuenta + "\n" + peticionRetiro.numeroCuentaRedTBBA + "\n" + peticionRetiro.numeroCuentaRetiro + "\n" + peticionRetiro.valor);

                        try
                        {
                            if (ConfigurationManager.AppSettings["AceptarCertificado"] == "SI")
                            {
                                ServicePointManager.ServerCertificateValidationCallback = delegate (object s, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors) { return true; };
                            }

                            WSNewPacifico2.retiraCuentaRespuesta respuesta = new_ws.retirarCuenta(peticionRetiro);

                            if (respuesta.codigo == "0001")
                                respuesta.descripcion = "PROCESO OK.";

                            //strMensajeProcesoRetiro = respuesta.codigo + '|' + respuesta.descripcion;
                            //2020-04-23 cambio solicitado por Karla Pesantez
                            //strMensajeProcesoRetiro = respuesta.descripcion;
                            strMensajeProcesoRetiro = respuesta.referencia;

                            strRespuesta = string.Format("<trama><Cabecera><FechaContable>{8}</FechaContable><CodigoRetorno>{0}</CodigoRetorno><MensajeRetorno>{1}</MensajeRetorno><DuracionTarea>{2}</DuracionTarea><IdMensaje>{3}</IdMensaje><OrdenBanco>{4}</OrdenBanco><Referencia>{5}</Referencia><Secuencial>{6}</Secuencial><Tipo>{7}</Tipo><tipoIdentificacion>{9}</tipoIdentificacion></Cabecera></trama>",
                             respuesta.codigo, strMensajeProcesoRetiro, respuesta.duracionTarea, respuesta.idMensaje, respuesta.ordenBanco, respuesta.referencia, respuesta.secuencial, respuesta.tipo, peticionRetiro.fechaContable, peticionRetiro.tipoIdentificacion.ToString());
                            EventLog.WriteEntry("EasySwitch", "Respuesta del nuevo servicio de pacifico en registro\ncodigo= " + respuesta.codigo + "\ndescripcion= " + respuesta.descripcion + "\nsecuencial= " + respuesta.secuencial + "\nOrdenBanco= " + respuesta.ordenBanco + "\nreferencia= " + respuesta.referencia);
                        }
                        catch (Exception ex)
                        {
                            EventLog.WriteEntry("EasySwitch", "Sucedio un error al consumir webService para hacer el retiro de efectivo de la cuenta\nMessage= " + ex.Message + "\nSource= " + ex.Source + "\nStackTrace= " + ex.StackTrace + "\nInnerException= " + ex.InnerException + "\nData= " + ex.Data + "\nTargetSite= " + ex.TargetSite);
                            throw;
                        }

                        break;
                    }
                case "REVERSO":
                    {
                        WSNewPacifico2.reversaRetiroCuentaPeticion peticionReverso = new WSNewPacifico2.reversaRetiroCuentaPeticion();
                        llenarPeticionReversoParaWS(ref peticionReverso, strTrama);

                        EventLog.WriteEntry("EasySwitch", "Datos que se envian al nuevo servicio de pacifico: \n" + "fechaContable= " + peticionReverso.fechaContable + "\nfechaHora= " + peticionReverso.fechaHora + "\n" + "hostName= " + peticionReverso.hostName + "\nidMensaje= " + peticionReverso.idMensaje + "\nip= " + peticionReverso.ip + "\nmacAddress= " + peticionReverso.macAddress);

                        if (ConfigurationManager.AppSettings["AceptarCertificado"] == "SI")
                        {
                            ServicePointManager.ServerCertificateValidationCallback = delegate (object s, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors) { return true; };
                        }
                        WSNewPacifico2.reversaRetiroCuentaRespuesta respuesta = new_ws.reversarRetiroCuenta(peticionReverso);
                        if (respuesta.codigo == "0001")
                            respuesta.descripcion = "PROCESO OK.";

                        //strMensajeProcesoRetiro = respuesta.codigo + '|' + respuesta.descripcion;
                        strMensajeProcesoRetiro = respuesta.descripcion;

                        strRespuesta = string.Format("<trama><Cabecera><CodigoRetorno>{0}</CodigoRetorno><MensajeRetorno>{1}</MensajeRetorno><DuracionTarea>{2}</DuracionTarea><IdMensaje>{3}</IdMensaje><Tipo>{4}</Tipo></Cabecera></trama>",
                            respuesta.codigo, strMensajeProcesoRetiro, respuesta.duracionTarea, respuesta.idMensaje, respuesta.tipo);

                        EventLog.WriteEntry("EasySwitch", "Respuesta del nuevo servicio de pacifico en reverso\ncodigo= " + respuesta.codigo + "\ndescripcion= " + respuesta.descripcion);

                        break;
                    }
                default:
                    break;
            }


            watch.Stop();
            EventLog.WriteEntry("EasySwitch", "Tiempo de invocaion al servicio en modo ONLINE en milisegundos:" + watch.ElapsedMilliseconds, EventLogEntryType.Warning);

            return strRespuesta;

        }


        public string Procesar_Transaccion_Online(string strTrama, long lngID_log, string strTransaccion, string strOperador, double valorIva, string strXmlEntrada)
        {
            EventLog.WriteEntry("EasySwitch", "Entrando a Procesar_Transaccion_Online() | linea 10620" +
                "\nstrTrama= " + strTrama + "\nlngID_log= " + lngID_log + "\nstrTransaccion= " + strTransaccion + "\nstrOperador= " + strOperador + "\nvalorIva= " + valorIva + "\nstrXmlEntrada");
            //return ad.Obtener_Transaccion_Switch_Log(strTrama, ref lngID_log, strOperador, bolProcesoActivo);            
            //long lngID_log = 0;
            bool bolProcesoActivo = true;
            string strRespuesta = string.Empty;
            int IdTransaccion = 0;
            int intCant = 0;
            string strCodigoRetorno = string.Empty;
            string strMensajeProceso = string.Empty;
            string strIdOrigen = "0";
            string strTramaRespuesta = string.Empty;
            string strRespuestaAux = string.Empty;
            string strFechaRespuesta = string.Empty;
            bool ERROR = false;
            string MENSAJE = string.Empty;

            try
            {
                try
                {


                    //Hugo Alcívar::2018/09/08::Retiro en efectivo::Elección del nuevo web Service
                    EventLog.WriteEntry("EasySwitch", "1 getDataSetFromString strXmlEntrada=" + strXmlEntrada);
                    DataSet dsXmlEntrada = adm.getDataSetFromString(strXmlEntrada);
                    EventLog.WriteEntry("EasySwitch", "2 getDataSetFromString dsXmlEntrada=" + dsXmlEntrada.GetXml());
                    string idServicio = string.Empty;
                    string _codigoServicio = string.Empty;

                    if (dsXmlEntrada.Tables["DatosTransaccion"].Columns.Contains("Id_Servicio"))
                    {
                        idServicio = dsXmlEntrada.Tables["DatosTransaccion"].Rows[0]["Id_Servicio"].ToString();
                    }
                    if (dsXmlEntrada.Tables["DatosTransaccion"].Columns.Contains("codigo_servicio"))
                    {
                        _codigoServicio = dsXmlEntrada.Tables["DatosTransaccion"].Rows[0]["codigo_servicio"].ToString();
                    }
                    EventLog.WriteEntry("EasySwitch", "2 getDataSetFromString dsXmlEntrada=" + idServicio + " " + adm.VaPorNuevoWebService(idServicio));
                    if (adm.VaPorNuevoWebService(idServicio))//Roger: Servicios que se van por nuevos WS
                    {
                        //switch (_codigoServicio)
                        //{
                        //    case "RT":
                        EventLog.WriteEntry("EasySwitch", "1 ProcesaCobrosYPagosRetiros strTrama=" + strTrama);
                        EventLog.WriteEntry("EasySwitch", "1 ProcesaCobrosYPagosRetiros strXmlEntrada=" + strXmlEntrada);
                        strRespuesta = ProcesaCobrosYPagosRetiros(strTrama, strXmlEntrada);
                        EventLog.WriteEntry("EasySwitch", "Procesar_Transaccion_Online Retiros|strRespuesta = ProcesaCobrosYPagosRetiros(strTrama, strXmlEntrada)" +
                            "\nstrRespuesta= " + strRespuesta + "\nstrTrama= " + strTrama);
                        //        break;
                        //    case "VE":
                        //        //strRespuesta = ProcesaCobrosYPagosAvances(strTrama, strXmlEntrada);
                        //        EventLog.WriteEntry("EasySwitch", "Procesar_Transaccion_Online Avance efectivo" +
                        //            "\nstrRespuesta= " + strRespuesta + "\nstrTrama= " + strTrama);
                        //        break;
                        //    default:
                        //        break;
                        //}

                    }
                    else//Servicios que se van por WS WSSFinancieroCobrosPagos
                    {

                        // WSPacifico.WSSFinancieroCobrosPagos ws = new WSSFinancieroCobrosPagos();
                        //WSPrueba.WSSFinancieroCobrosPagos ws = new WSPrueba.WSSFinancieroCobrosPagos();
                        var ws = new WSPacifico.ProcesaCPTPortTypeClient();
                        ws.Endpoint.Address = new EndpointAddress(Util.AccessPoint.GetParametro("EASYSWITCHPLUS", "WEBSERVICE"));
                        //System.Net.NetworkCredential cred = new NetworkCredential("mcastro", "mcastro");
                        //System.Net.WebProxy wp = new WebProxy("192.168.0.1", Convert.ToInt32("3128"));
                        //wp.Credentials = cred;
                        //ws.Proxy = wp;
                        //ws.Timeout = 600000;//6 minutos
                        var watch = new Stopwatch();
                        watch.Start();
                        //PRUEBA REVERSO                  
                        strRespuesta = ws.ProcesaCobrosYPagos(strTrama);

                        EventLog.WriteEntry("EasySwitch", "Procesar_Transaccion_Online | linea 10656| strRespuesta = ws.ProcesaCobrosYPagos(strTrama)" +
                            "\nstrRespuesta= " + strRespuesta + "\nstrTrama= " + strTrama);

                        // strRespuesta = "ERRROR";
                        watch.Stop();
                        EventLog.WriteEntry("EasySwitch", "Tiempo de invocaion al servicio en modo ONLINE en milisegundos:" + watch.ElapsedMilliseconds, EventLogEntryType.Warning);
                    }
                    strFechaRespuesta = DateTime.Now.ToString("yyyyMMdd HH:mm:ss:fff");
                    //EventLog.WriteEntry("EasySwitch", "Respuesta del Host:" + strRespuesta);
                    strTramaRespuesta = strRespuesta;
                    //strRespuesta = adm.Actualizar_Transaccion_Switch_Log_Tran(lngID_log, "PROCESADO", strRespuesta); 
                    DataSet dsRespuesta = adm.getDataSetFromString(strRespuesta);
                    DataSet dsEntradaDatos = adm.getDataSetFromString(strTrama);

                    if (dsRespuesta.Tables.Contains("Cabecera"))
                    {
                        strCodigoRetorno = dsRespuesta.Tables["Cabecera"].Rows[0]["CodigoRetorno"].ToString();
                        strMensajeProceso = dsRespuesta.Tables["Cabecera"].Rows[0]["MensajeRetorno"].ToString();
                    }
                    if (dsEntradaDatos.Tables.Contains("Cabecera"))
                    {
                        strIdOrigen = dsEntradaDatos.Tables["Cabecera"].Rows[0]["NumeroTransaccion"].ToString();
                    }

                    strRespuestaAux = strRespuesta;

                    strRespuesta = "0001|RESPUESTA_OK";
                    strRespuesta += "|" + TransformarTramaSalida(strTramaRespuesta, strTransaccion, strXmlEntrada, "ONLINE", strIdOrigen, valorIva);
                    //strRespuesta += "|" + DateTime.Now.ToString("yyyyMMdd HH:mm:ss:fff");
                    EventLog.WriteEntry("EasySwitch", "XMLRespuesta:" + strRespuesta);
                    string strUpdate = adm.Actualizar_Transaccion_Switch_Log_Tran(lngID_log, "PROCESADO", strRespuestaAux, DateTime.Now.ToString("yyyyMMdd HH:mm:ss:fff"), strCodigoRetorno + "|" + strMensajeProceso, string.Empty, strRespuesta);
                    //GrabarAppLog("Pacifico_Procesos.Procesar_Transaccion_Online:Despues de Enviar a pacifico :Despues de Actualizar_Transaccion_Switch_Log_Tran:" + strUpdate, "I");

                }
                catch (Exception e)
                {
                    GrabarAppLog("Pacifico_Procesos.Procesar_Transaccion_Online:Error:" + e.Message, "E");

                    ERROR = true;
                    MENSAJE = e.Message;

                }

            }
            catch (Exception ee)
            {
                GrabarAppLog("Pacifico_Procesos.Procesar_Transaccion_Online:Error:" + ee.Message, "E");
                strRespuesta = adm.Actualizar_Transaccion_Switch_Log_Tran(lngID_log, "ENVIO_DUDOSO", ee.Message);
                //bolProcesoActivo = false;
                ERROR = true;
                MENSAJE = ee.Message;
            }

            finally
            {
                if (ERROR == true)
                {
                    switch (strTransaccion.Split('_')[0].ToString())
                    {
                        case "REVERSO":
                            string strRespuesta1 = adm.Actualizar_Transaccion_Switch_Log_Tran(lngID_log, "PENDIENTE", string.Empty);
                            break;
                        case "REGISTRO":
                            //strRespuesta = adm.Actualizar_Transaccion_Switch_Log_Tran(lngID_log, "ERROR", e.Message);
                            strRespuesta = adm.Actualizar_Transaccion_Switch_Log_Tran(lngID_log, "ERROR", string.Empty);
                            //bolProcesoActivo = false;
                            //CUANDO SE PRESENTA ALGUN ERRO HAY QUE ENVIAR A REALIZAR EL REVERSO AUTOMATICO
                            DataSet dsEntrada = new DataSet();

                            DataSet dsEntradaDatos = adm.getDataSetFromString(strTrama);
                            if (dsEntradaDatos.Tables.Contains("Cabecera"))
                            {
                                strIdOrigen = dsEntradaDatos.Tables["Cabecera"].Rows[0]["NumeroTransaccion"].ToString();
                            }

                            GenerarReversoAutomatico(strTransaccion, strOperador, dsEntrada, true, Convert.ToString(IdTransaccion), strTrama, strIdOrigen);
                            break;
                        default:
                            strRespuesta = adm.Actualizar_Transaccion_Switch_Log_Tran(lngID_log, "ERROR", MENSAJE);
                            break;
                    }
                }
            }


            strIdOrigen = string.Empty;

            GrabarAppLog("Pacifico_Procesos.Procesar_Transaccion_Online:FIN DEL SWITCH Pacifico", "I");
            EventLog.WriteEntry("EasySwitch", "Procesar_Transaccion_Online()|Esto esta retornando este metodo:\n strRespuesta= " + strRespuesta);
            return strRespuesta;
        }

        /// <summary>
        /// 2020-04-20 Nuevo formato ddatos
        /// </summary>
        /// <param name="peticionConsulta"></param>
        /// <param name="strTrama"></param>
        private void llenarPeticionConsultaNuevoWS(ref WSNewPacifico2.consultaTarjetasPeticion peticionConsulta, string strTrama)
        {
            var trace = "llenarPeticionConsultaNuevoWS";
            EventLog.WriteEntry("EasySwitch", "1 Tar Funcion llenar inicio:" + strTrama);
            try
            {
                #region llenar data
                DataSet dsXmlEntrada = adm.getDataSetFromString(strTrama);
                EventLog.WriteEntry("EasySwitch", "2 Tar  Funcion llenar inicio dsXmlEntrada:" + dsXmlEntrada.GetXml());
                //1
                if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("IdMensaje"))
                {
                    peticionConsulta.idMensaje = (string)dsXmlEntrada.Tables["Detalle"].Rows[0]["IdMensaje"];
                }
                trace = "luego de  idMensaje";
                EventLog.WriteEntry("EasySwitch", "idMensaje=" + peticionConsulta.idMensaje);

                //2
                if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("idUsuario"))
                {
                    peticionConsulta.idUsuario = dsXmlEntrada.Tables["Detalle"].Rows[0]["idUsuario"].ToString();
                }
                trace = "luego de  idUsuario";
                EventLog.WriteEntry("EasySwitch", "idUsuario=" + peticionConsulta.idUsuario);
                //3
                if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("canal"))
                {
                    peticionConsulta.canal = dsXmlEntrada.Tables["Detalle"].Rows[0]["canal"].ToString();
                }
                trace = "luego de  canal";
                EventLog.WriteEntry("EasySwitch", "canal" + peticionConsulta.canal);

                //4
                if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("token"))
                {
                    peticionConsulta.token = dsXmlEntrada.Tables["Detalle"].Rows[0]["token"].ToString();
                }
                trace = "luego de  token";

                //5 localidad
                if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("Localidad"))
                {
                    if (!string.IsNullOrEmpty((string)dsXmlEntrada.Tables["Detalle"].Rows[0]["Localidad"]))
                        peticionConsulta.token = dsXmlEntrada.Tables["Detalle"].Rows[0]["Localidad"].ToString();
                    else
                        peticionConsulta.token = "1";
                }

                //6
                if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("agencia"))
                {
                    if (!string.IsNullOrEmpty((string)dsXmlEntrada.Tables["Detalle"].Rows[0]["agencia"]))
                        peticionConsulta.agencia = int.Parse(dsXmlEntrada.Tables["Detalle"].Rows[0]["agencia"].ToString());
                }
                trace = "luego de  agencia";

                //7
                if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("fechaHora"))
                {
                    peticionConsulta.fechaHoraprograma = DateTime.Now.ToString("yyyy-MM-ddTHH:mm:ss");
                }
                EventLog.WriteEntry("EasySwitch", "Funcion llenar peticionConsulta.fechaHora: " + peticionConsulta.fechaHoraprograma);
                trace = "luego de  fechaHora";

                //8
                if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("ip"))
                {
                    peticionConsulta.ip = dsXmlEntrada.Tables["Detalle"].Rows[0]["ip"].ToString();
                    //peticionConsulta.ip = "";
                }
                trace = "luego de  ip";

                //9
                if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("macAddress"))
                {
                    peticionConsulta.macAddress = dsXmlEntrada.Tables["Detalle"].Rows[0]["macAddress"].ToString();
                    //peticionConsulta.macAddress = "";
                }
                trace = "luego de  macAddress";

                //10
                if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("hostName"))
                {
                    peticionConsulta.hostName = dsXmlEntrada.Tables["Detalle"].Rows[0]["hostName"].ToString();
                    //peticionConsulta.hostName = "";
                }
                trace = "luego de  hostName";


                //11
                if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("fechaContable"))
                {
                    //EventLog.WriteEntry("EasySwitch", "Funcion llenar caducidad: " + dsXmlEntrada.Tables["Detalle"].Rows[0]["fechaContable"].ToString());

                    // var data = dsXmlEntrada.Tables["Detalle"].Rows[0]["fechaContable"].ToString().Split('/');
                    // string convertedDate = data[0] + data[1] + data[2];
                    peticionConsulta.fechaContable = peticionConsulta.fechaHora;
                }
                trace = "luego de  fechaContable";

                //12
                if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("identificacionCajero"))
                {
                    peticionConsulta.identificacionCajero = dsXmlEntrada.Tables["Detalle"].Rows[0]["identificacionCajero"].ToString();
                }
                trace = "luego de  identificacionCajero";

                //13
                if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("oficinaCPT"))
                {
                    peticionConsulta.oficinaCPT = dsXmlEntrada.Tables["Detalle"].Rows[0]["oficinaCPT"].ToString();
                }
                trace = "luego de  oficinaCPT";

                //14
                if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("tipoIdentificacion"))
                {
                    if (!string.IsNullOrEmpty((string)dsXmlEntrada.Tables["Detalle"].Rows[0]["tipoIdentificacion"]))
                        peticionConsulta.tipoIdentificacion = (WSNewPacifico2.tipoIdentificacionEnum)Enum.Parse(typeof(WSNewPacifico2.tipoIdentificacionEnum)
                                                            , dsXmlEntrada.Tables["Detalle"].Rows[0]["tipoIdentificacion"].ToString());
                    peticionConsulta.tipoIdentificacionSpecified = true;
                    EventLog.WriteEntry("EasySwitch", "3 Master peticionConsulta.tipoIdentificacion=" + peticionConsulta.tipoIdentificacion);
                }
                trace = "luego de  tipoIdentificacion";

                //15, La identificacion del usuario viene en el campo numeroTarjeta
                if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("numeroTarjeta"))
                {
                    if (!string.IsNullOrEmpty((string)dsXmlEntrada.Tables["Detalle"].Rows[0]["numeroTarjeta"]))
                        peticionConsulta.identificacion = dsXmlEntrada.Tables["Detalle"].Rows[0]["numeroTarjeta"].ToString();
                }
                trace = "luego de  identificacion";

                EventLog.WriteEntry("EasySwitch", "Tar Funcion llenar fin");
                #endregion
            }
            catch (Exception ex)
            {
                EventLog.WriteEntry("EasySwitch", string.Format("Funcion llenarPeticionConsultaNuevoWS error InnerException={0} - Message={1} - Source={2} - StackTrace={3} - trace={4}", ex.InnerException, ex.Message, ex.Source, ex.StackTrace, trace));
            }
        }

        //Roger::2018/05/09::Retiro en efectivo::Lleno los parámetros del Nuevo Web Service para Consulta
        private void llenarPeticionConsultaParaWS(ref WSNewPacifico2.consultaCuentaPeticion peticionConsulta, string strTrama)
        {
            EventLog.WriteEntry("EasySwitch", "Funcion llenar inicio:" + strTrama);
            try
            {
                #region llenar data
                DataSet dsXmlEntrada = adm.getDataSetFromString(strTrama);
                EventLog.WriteEntry("EasySwitch", "2 Funcion llenar inicio dsXmlEntrada:" + dsXmlEntrada.GetXml());
                if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("agencia"))
                {
                    peticionConsulta.agencia = int.Parse(dsXmlEntrada.Tables["Detalle"].Rows[0]["agencia"].ToString());
                }
                if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("canal"))
                {
                    peticionConsulta.canal = dsXmlEntrada.Tables["Detalle"].Rows[0]["canal"].ToString();
                }
                if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("fechaCaducidad"))
                {
                    EventLog.WriteEntry("EasySwitch", "Funcion llenar caducidad: " + dsXmlEntrada.Tables["Detalle"].Rows[0]["fechaCaducidad"].ToString());

                    var data = dsXmlEntrada.Tables["Detalle"].Rows[0]["fechaCaducidad"].ToString().Split('/');
                    string convertedDate = data[0] + data[1] + data[2];

                    //Console.WriteLine("Your date " + myDate.ToString("MMyyyy"));
                    peticionConsulta.fechaCaducidad = data[1] + data[2];
                    EventLog.WriteEntry("EasySwitch", "Funcion llenar caducidad: " + peticionConsulta.fechaCaducidad);


                }
                /*if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("fechaContable"))
                {
                    peticionConsulta.fechaContable = DateTime.ParseExact(dsXmlEntrada.Tables["Detalle"].Rows[0]["fechaContable"].ToString(), "yyyyMMdd", null);

                }*/
                if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("fechaContable"))
                {
                    //peticionConsulta.fechaContable = DateTime.ParseExact(DateTime.Now.ToString("yyyy-MM-ddTHH:mm:ss"), "yyyy-MM-ddTHH:mm:ss", null);//peticionRetiro.fechaHora = DateTime.ParseExact(dsXmlEntrada.Tables["Detalle"].Rows[0]["fechaHora"].ToString(), "yyyy-MM-ddTHH:mm:ss", null);
                    //2020 - 03 - 09T12: 42:45

                    peticionConsulta.fechaContableprograma = DateTime.Now.ToString("yyyy-MM-ddTHH:mm:ss");


                }
                EventLog.WriteEntry("EasySwitch", "Funcion llenar peticionConsulta.fechaContable: " + peticionConsulta.fechaContable);
                EventLog.WriteEntry("EasySwitch", "Funcion llenar peticionConsulta.fechaContableprograma: " + peticionConsulta.fechaContableprograma);


                if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("fechaHora"))
                //peticionConsulta.fechaHora = DateTime.ParseExact(DateTime.Now.ToString("yyyy-MM-ddTHH:mm:ss"), "yyyy-MM-ddTHH:mm:ss", null);//peticionRetiro.fechaHora = DateTime.ParseExact(dsXmlEntrada.Tables["Detalle"].Rows[0]["fechaHora"].ToString(), "yyyy-MM-ddTHH:mm:ss", null);
                //peticionConsulta.fechaHora = DateTime.ParseExact(DateTime.Now.ToString("yyyy-MM-ddTHH:mm:ss"), "yyyy-MM-ddTHH:mm:ss", (IFormatProvider)null);
                {
                    //var dt1 = DateTime.UtcNow;
                    //peticionConsulta.fechaHora =
                    peticionConsulta.fechaHoraprograma = DateTime.Now.ToString("yyyy-MM-ddTHH:mm:ss");
                }
                EventLog.WriteEntry("EasySwitch", "Funcion llenar peticionConsulta.fechaHora: " + peticionConsulta.fechaHora);


                /*if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("fechaHora"))
                {
                    peticionConsulta.fechaHora = DateTime.ParseExact(dsXmlEntrada.Tables["Detalle"].Rows[0]["fechaHora"].ToString(), "yyyyMMdd", null);
                }*/
                if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("hostName"))
                {
                    peticionConsulta.hostName = dsXmlEntrada.Tables["Detalle"].Rows[0]["hostName"].ToString();
                    //peticionConsulta.hostName = "";
                }
                if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("identificacion"))
                {
                    peticionConsulta.identificacion = dsXmlEntrada.Tables["Detalle"].Rows[0]["identificacion"].ToString();
                }
                if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("identificacion"))
                {
                    peticionConsulta.identificacion = dsXmlEntrada.Tables["Detalle"].Rows[0]["identificacion"].ToString();
                }
                if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("identificacionCajero"))
                {
                    peticionConsulta.identificacionCajero = dsXmlEntrada.Tables["Detalle"].Rows[0]["identificacionCajero"].ToString();
                }
                if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("idMensaje"))
                {
                    peticionConsulta.idMensaje = dsXmlEntrada.Tables["Detalle"].Rows[0]["idMensaje"].ToString();
                }
                if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("idUsuario"))
                {
                    peticionConsulta.idUsuario = dsXmlEntrada.Tables["Detalle"].Rows[0]["idUsuario"].ToString();
                }

                if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("ip"))
                {
                    peticionConsulta.ip = dsXmlEntrada.Tables["Detalle"].Rows[0]["ip"].ToString();
                    //peticionConsulta.ip = "";
                }
                if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("localidad"))
                {
                    peticionConsulta.localidad = int.Parse(dsXmlEntrada.Tables["Detalle"].Rows[0]["localidad"].ToString());
                }
                if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("macAddress"))
                {
                    peticionConsulta.macAddress = dsXmlEntrada.Tables["Detalle"].Rows[0]["macAddress"].ToString();
                    //peticionConsulta.macAddress = "";
                }
                if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("medioOTP"))
                {
                    peticionConsulta.medioOTP = (WSNewPacifico2.medioOTPEnum)Enum.Parse(typeof(WSNewPacifico2.medioOTPEnum), dsXmlEntrada.Tables["Detalle"].Rows[0]["medioOTP"].ToString().ToUpper());
                    peticionConsulta.medioOTPSpecified = true;
                }
                EventLog.WriteEntry("EasySwitch", "Funcion llenar medio peticionConsulta.medioOTP=" + peticionConsulta.medioOTP);
                if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("token"))
                {
                    peticionConsulta.token = dsXmlEntrada.Tables["Detalle"].Rows[0]["token"].ToString();
                }
                if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("numeroTarjeta"))
                {
                    peticionConsulta.numeroTarjeta = dsXmlEntrada.Tables["Detalle"].Rows[0]["numeroTarjeta"].ToString();
                }
                if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("oficinaCPT"))
                {
                    peticionConsulta.oficinaCPT = dsXmlEntrada.Tables["Detalle"].Rows[0]["oficinaCPT"].ToString();
                }
                if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("tipoCuenta"))
                {
                    peticionConsulta.tipoCuenta = (WSNewPacifico2.tipoCuentaEnum)Enum.Parse(typeof(WSNewPacifico2.tipoCuentaEnum), dsXmlEntrada.Tables["Detalle"].Rows[0]["tipoCuenta"].ToString());
                    peticionConsulta.tipoCuentaSpecified = true;
                }

                EventLog.WriteEntry("EasySwitch", "Funcion llenar TipoIdentificacion: " + dsXmlEntrada.Tables["Detalle"].Rows[0]["TipoIdentificacion"].ToString());

                if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("tipoIdentificacion"))
                {
                    peticionConsulta.tipoIdentificacion = (WSNewPacifico2.tipoIdentificacionEnum)Enum.Parse(typeof(WSNewPacifico2.tipoIdentificacionEnum)
                                                            , dsXmlEntrada.Tables["Detalle"].Rows[0]["tipoIdentificacion"].ToString());
                    peticionConsulta.tipoIdentificacionSpecified = true;
                    EventLog.WriteEntry("EasySwitch", "3 peticionConsulta.tipoIdentificacion=" + peticionConsulta.tipoIdentificacion);
                }
                //EventLog.WriteEntry("EasySwitch", "Funcion llenar fin");
                #endregion
            }
            catch (Exception ex)
            {
                EventLog.WriteEntry("EasySwitch", "Funcion llenarPeticionConsultaParaWS error" + ex.Message + "-->" + ex.StackTrace);
            }




        }
        private void llenarPeticionRetiroParaWS(ref WSNewPacifico2.retiraCuentaPeticion peticionRetiro, string strTrama)
        {
            #region llenar data

            ///<agencia>{0}</agencia><canal>{1}</canal><fechaHora>{2}</fechaHora><hostName>{3}</hostName><idMensaje>{4}</idMensaje><idUsuario>{5}</idUsuario><ip>{6}</ip><localidad>{7}</localidad><macAddress>{8}</macAddress><token>{9}</token><fechaContable>{10}</fechaContable><identificacionCajero>{11}</identificacionCajero><oficinaCPT>{12}</oficinaCPT><codigoMoneda>{13}</codigoMoneda><medioOTP>{14}</medioOTP><identificacion>{15}</identificacion><CodigoAdicional>{16}</CodigoAdicional><nombreCliente>{17}</nombreCliente><numeroCuenta>{18}</numeroCuenta><numeroCuentaRedTBBA>{19}</numeroCuentaRedTBBA><Referencia>{20}</Referencia><tipoCuenta>{21}</tipoCuenta><tipoIdentificacion>{22}</tipoIdentificacion><valor>{23}</valor><codigoOTP>{24}</codigoOTP><FechaCaducidad>{25}</FechaCaducidad></Detalle></ProcesaCobrosYPagos>' where Id_Transaccion=1376

            DataSet dsXmlEntrada = adm.getDataSetFromString(strTrama);

            EventLog.WriteEntry("EasySwitch", "Retiro-Ingresando Trama entrada:\n" + strTrama);

            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("agencia"))
            {
                peticionRetiro.agencia = int.Parse(dsXmlEntrada.Tables["Detalle"].Rows[0]["agencia"].ToString());
            }
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("canal"))
            {
                peticionRetiro.canal = dsXmlEntrada.Tables["Detalle"].Rows[0]["canal"].ToString();

            }
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("fechaHora"))
            {
                peticionRetiro.fechaHora = DateTime.ParseExact(dsXmlEntrada.Tables["Detalle"].Rows[0]["fechaHora"].ToString(), "ddMMyy", null);
            }
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("hostName"))
            {
                peticionRetiro.hostName = dsXmlEntrada.Tables["Detalle"].Rows[0]["hostName"].ToString();
            }
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("idMensaje"))
            {
                peticionRetiro.idMensaje = dsXmlEntrada.Tables["Detalle"].Rows[0]["idMensaje"].ToString();
            }
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("idUsuario"))
            {
                peticionRetiro.idUsuario = dsXmlEntrada.Tables["Detalle"].Rows[0]["idUsuario"].ToString();
            }

            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("ip"))
            {
                peticionRetiro.ip = dsXmlEntrada.Tables["Detalle"].Rows[0]["ip"].ToString();
            }
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("localidad"))
            {
                //peticionConsulta.localidad = int.Parse(dsXmlEntrada.Tables["Detalle"].Rows[0]["localidad"].ToString());
                peticionRetiro.localidad = 1;
            }
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("macAddress"))
            {
                peticionRetiro.macAddress = dsXmlEntrada.Tables["Detalle"].Rows[0]["macAddress"].ToString();
            }
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("token"))
            {
                peticionRetiro.token = dsXmlEntrada.Tables["Detalle"].Rows[0]["token"].ToString();

            }
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("codigoMoneda"))
            {
                peticionRetiro.codigoMoneda = dsXmlEntrada.Tables["Detalle"].Rows[0]["codigoMoneda"].ToString();
            }
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("codigoOTP"))
            {
                peticionRetiro.codigoOTP = dsXmlEntrada.Tables["Detalle"].Rows[0]["codigoOTP"].ToString();
                EventLog.WriteEntry("llenarPeticionRetiro", "codigoOTP" + peticionRetiro.codigoOTP);
            }

            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("fechaContable"))
            {
                //peticionRetiro.fechaContable = DateTime.ParseExact(dsXmlEntrada.Tables["Detalle"].Rows[0]["fechaContable"].ToString(), "yyyyMMdd", null);
                peticionRetiro.fechaContable = DateTime.ParseExact("05/08/2999", "ddMMyy", null);
            }


            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("identificacion"))
            {
                peticionRetiro.identificacion = dsXmlEntrada.Tables["Detalle"].Rows[0]["identificacion"].ToString();
                peticionRetiro.identificacion = "2251893265";
            }
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("identificacionCajero"))
            {
                peticionRetiro.identificacionCajero = dsXmlEntrada.Tables["Detalle"].Rows[0]["identificacionCajero"].ToString();
            }


            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("medioOTP"))
            {
                switch (dsXmlEntrada.Tables["Detalle"].Rows[0]["medioOTP"].ToString())
                {
                    case "M":
                        {
                            peticionRetiro.medioOTP = WSNewPacifico2.medioOTPEnum.MAIL;
                            break;
                        }
                    case "P":
                        {
                            peticionRetiro.medioOTP = WSNewPacifico2.medioOTPEnum.PACIFICID;
                            break;
                        }
                    case "S":
                        {
                            peticionRetiro.medioOTP = WSNewPacifico2.medioOTPEnum.SMS;
                            break;
                        }
                }
                peticionRetiro.medioOTP = WSNewPacifico2.medioOTPEnum.PACIFICID;
            }
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("nombreCliente"))
            {
                peticionRetiro.nombreCliente = dsXmlEntrada.Tables["Detalle"].Rows[0]["nombreCliente"].ToString();
            }
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("numeroCuenta"))
            {
                peticionRetiro.numeroCuenta = dsXmlEntrada.Tables["Detalle"].Rows[0]["numeroCuenta"].ToString();
            }
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("numeroCuentaRedTBBA"))
            {
                peticionRetiro.numeroCuentaRedTBBA = dsXmlEntrada.Tables["Detalle"].Rows[0]["numeroCuentaRedTBBA"].ToString();
            }
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("numeroCuenta"))
            {
                peticionRetiro.numeroCuentaRetiro = dsXmlEntrada.Tables["Detalle"].Rows[0]["numeroCuenta"].ToString();
            }


            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("oficinaCPT"))
            {
                peticionRetiro.oficinaCPT = dsXmlEntrada.Tables["Detalle"].Rows[0]["oficinaCPT"].ToString();
            }
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("tipoCuenta"))
            {
                switch (dsXmlEntrada.Tables["Detalle"].Rows[0]["tipoCuenta"].ToString())
                {
                    case "Ahorros":
                        {
                            peticionRetiro.tipoCuenta = WSNewPacifico2.tipoCuentaEnum.Ahorros;
                            break;
                        }
                    case "Corriente":
                        {
                            peticionRetiro.tipoCuenta = WSNewPacifico2.tipoCuentaEnum.Corriente;
                            break;
                        }
                    case "Exterior":
                        {
                            peticionRetiro.tipoCuenta = WSNewPacifico2.tipoCuentaEnum.Exterior;
                            break;
                        }
                    case "Lista":
                        {
                            peticionRetiro.tipoCuenta = WSNewPacifico2.tipoCuentaEnum.Lista;
                            break;
                        }
                }
            }
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("tipoIdentificacion"))
            {
                switch (dsXmlEntrada.Tables["Detalle"].Rows[0]["tipoIdentificacion"].ToString())
                {
                    case "C":
                        {
                            peticionRetiro.tipoIdentificacion = WSNewPacifico2.tipoIdentificacionEnum.Cedula;
                            break;
                        }
                    case "P":
                        {
                            peticionRetiro.tipoIdentificacion = WSNewPacifico2.tipoIdentificacionEnum.Pasaporte;
                            break;
                        }
                    case "R":
                        {
                            peticionRetiro.tipoIdentificacion = WSNewPacifico2.tipoIdentificacionEnum.Ruc;
                            break;
                        }
                }
            }


            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("valor"))
            {
                //peticionRetiro.valor = decimal.Parse(dsXmlEntrada.Tables["Detalle"].Rows[0]["valor"].ToString());
                peticionRetiro.valor = 5;
            }

            #endregion
        }

        //Roger::2018/05/09::Retiro en efectivo::Lleno los parámetros del Nuevo Web Service para Retiro
        private void llenarPeticionRetiroParaWS2(ref WSNewPacifico2.retiraCuentaPeticion peticionRetiro, string strTrama, string nombreCliente, string cuentaCliente)
        {

            Guid guid = new Guid();
            string f = DateTime.Now.ToString("'yyyy'-'MM'-'dd'T'HH':'mm':'ss.ffK'");
            string iDate = DateTime.Now.ToString("yyyy-MM-ddTHH:mm:ss.fffK");
            DateTime oDate = DateTime.Parse(iDate);
            /*
            try {
                EventLog.WriteEntry("DATOS CONSULTA", "LO QUE DEVUELVE POR REFERENCIA:\n " + respuestaNwsConsulta.nombre + "\nnumeroCuenta= " + respuestaNwsConsulta.numeroCuenta);
            }
            catch (Exception ex) {
                EventLog.WriteEntry("DATOS", "Sucedio un error al llenar el registro\nMessage= " + ex.Message + "\nSource= " + ex.Source + "\nStackTrace= " + ex.StackTrace + "\nInnerException= " + ex.InnerException + "\nData= " + ex.Data + "\nTargetSite= " + ex.TargetSite);
                throw;
            }*/

            #region llenar data
            DataSet dsXmlEntrada = adm.getDataSetFromString(strTrama);

            if (dsXmlEntrada.Tables["peticion"].Columns.Contains("agencia"))
                peticionRetiro.agencia = int.Parse(dsXmlEntrada.Tables["peticion"].Rows[0]["agencia"].ToString());
            if (dsXmlEntrada.Tables["peticion"].Columns.Contains("canal"))
                peticionRetiro.canal = dsXmlEntrada.Tables["peticion"].Rows[0]["canal"].ToString();
            if (dsXmlEntrada.Tables["peticion"].Columns.Contains("fechaHora"))
                peticionRetiro.fechaHora = DateTime.ParseExact(dsXmlEntrada.Tables["peticion"].Rows[0]["fechaHora"].ToString(), "yyyyMMdd", null);
            if (dsXmlEntrada.Tables["peticion"].Columns.Contains("hostName"))
                peticionRetiro.hostName = dsXmlEntrada.Tables["peticion"].Rows[0]["hostName"].ToString();
            if (dsXmlEntrada.Tables["peticion"].Columns.Contains("idMensaje"))
                peticionRetiro.idMensaje = dsXmlEntrada.Tables["peticion"].Rows[0]["idMensaje"].ToString();
            if (dsXmlEntrada.Tables["peticion"].Columns.Contains("idUsuario"))
                peticionRetiro.idUsuario = dsXmlEntrada.Tables["peticion"].Rows[0]["idUsuario"].ToString();
            if (dsXmlEntrada.Tables["peticion"].Columns.Contains("ip"))
                peticionRetiro.ip = dsXmlEntrada.Tables["peticion"].Rows[0]["ip"].ToString();
            if (dsXmlEntrada.Tables["peticion"].Columns.Contains("localidad"))
                peticionRetiro.localidad = int.Parse(dsXmlEntrada.Tables["peticion"].Rows[0]["localidad"].ToString());
            if (dsXmlEntrada.Tables["peticion"].Columns.Contains("macAddress"))
                peticionRetiro.macAddress = dsXmlEntrada.Tables["peticion"].Rows[0]["macAddress"].ToString();
            if (dsXmlEntrada.Tables["peticion"].Columns.Contains("token"))
                peticionRetiro.token = dsXmlEntrada.Tables["peticion"].Rows[0]["token"].ToString();
            if (dsXmlEntrada.Tables["peticion"].Columns.Contains("codigoMoneda"))
                peticionRetiro.codigoMoneda = dsXmlEntrada.Tables["peticion"].Rows[0]["codigoMoneda"].ToString();
            if (dsXmlEntrada.Tables["peticion"].Columns.Contains("codigoOTP"))
                peticionRetiro.codigoOTP = dsXmlEntrada.Tables["peticion"].Rows[0]["codigoOTP"].ToString();
            if (dsXmlEntrada.Tables["peticion"].Columns.Contains("fechaContable"))
                peticionRetiro.fechaContable = DateTime.ParseExact(dsXmlEntrada.Tables["peticion"].Rows[0]["fechaContable"].ToString(), "yyyyMMdd", null);
            if (dsXmlEntrada.Tables["peticion"].Columns.Contains("identificacion"))
                peticionRetiro.identificacion = dsXmlEntrada.Tables["peticion"].Rows[0]["identificacion"].ToString();
            if (dsXmlEntrada.Tables["peticion"].Columns.Contains("identificacionCajero"))
                peticionRetiro.identificacionCajero = dsXmlEntrada.Tables["peticion"].Rows[0]["identificacionCajero"].ToString();
            if (dsXmlEntrada.Tables["peticion"].Columns.Contains("medioOTP"))
                peticionRetiro.medioOTP = (WSNewPacifico2.medioOTPEnum)Enum.Parse(typeof(WSNewPacifico2.medioOTPEnum), dsXmlEntrada.Tables["peticion"].Rows[0]["medioOTP"].ToString());
            if (dsXmlEntrada.Tables["peticion"].Columns.Contains("nombreCliente"))
                peticionRetiro.nombreCliente = dsXmlEntrada.Tables["peticion"].Rows[0]["nombreCliente"].ToString();
            if (dsXmlEntrada.Tables["peticion"].Columns.Contains("numeroCuenta"))
                peticionRetiro.numeroCuenta = dsXmlEntrada.Tables["peticion"].Rows[0]["numeroCuenta"].ToString();
            if (dsXmlEntrada.Tables["peticion"].Columns.Contains("numeroCuentaRedTBBA"))
                peticionRetiro.numeroCuentaRedTBBA = dsXmlEntrada.Tables["peticion"].Rows[0]["numeroCuentaRedTBBA"].ToString();
            if (dsXmlEntrada.Tables["peticion"].Columns.Contains("numeroCuentaRetiro"))
                peticionRetiro.numeroCuentaRetiro = dsXmlEntrada.Tables["peticion"].Rows[0]["numeroCuentaRetiro"].ToString();
            if (dsXmlEntrada.Tables["peticion"].Columns.Contains("oficinaCPT"))
                peticionRetiro.oficinaCPT = dsXmlEntrada.Tables["peticion"].Rows[0]["oficinaCPT"].ToString();
            if (dsXmlEntrada.Tables["peticion"].Columns.Contains("tipoCuenta"))
                peticionRetiro.tipoCuenta = (WSNewPacifico2.tipoCuentaEnum)Enum.Parse(typeof(WSNewPacifico2.tipoCuentaEnum), dsXmlEntrada.Tables["peticion"].Rows[0]["tipoCuenta"].ToString());
            if (dsXmlEntrada.Tables["peticion"].Columns.Contains("tipoIdentificacion"))
                peticionRetiro.tipoIdentificacion = (WSNewPacifico2.tipoIdentificacionEnum)Enum.Parse(typeof(WSNewPacifico2.tipoIdentificacionEnum), dsXmlEntrada.Tables["peticion"].Rows[0]["tipoIdentificacion"].ToString());
            if (dsXmlEntrada.Tables["peticion"].Columns.Contains("valor"))
                peticionRetiro.valor = Decimal.Parse(dsXmlEntrada.Tables["peticion"].Rows[0]["valor"].ToString());

            #endregion
        }

        //Mastercard 2020-05-05
        private void llenarPeticionPagoTarjeta(ref WSNewPacifico2.pagoTarjetaPeticion peticionRetiro, string strTrama, string nombreCliente, string cuentaCliente)
        {
            EventLog.WriteEntry("PETICION-RETIRO", "llenar peticion llenarPeticionPagoTarjeta para WS3 strTrama=" + strTrama);
            #region llenar data
            DataSet dsXmlEntrada = adm.getDataSetFromString(strTrama);
            //1
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("idMensaje"))
                peticionRetiro.idMensaje = dsXmlEntrada.Tables["Detalle"].Rows[0]["idMensaje"].ToString();

            //2
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("idUsuario"))
                peticionRetiro.idUsuario = dsXmlEntrada.Tables["Detalle"].Rows[0]["idUsuario"].ToString();

            //3 canal
            //EventLog.WriteEntry("PETICION-RETIRO", "Paso1-agencia");
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("canal"))
                peticionRetiro.canal = dsXmlEntrada.Tables["Detalle"].Rows[0]["canal"].ToString();

            //4 
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("token"))
                peticionRetiro.token = dsXmlEntrada.Tables["Detalle"].Rows[0]["token"].ToString();

            //5
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("localidad"))
                peticionRetiro.localidad = int.Parse(dsXmlEntrada.Tables["Detalle"].Rows[0]["localidad"].ToString());

            //6
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("agencia"))
                peticionRetiro.agencia = int.Parse(dsXmlEntrada.Tables["Detalle"].Rows[0]["agencia"].ToString());

            //7
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("fechaHora"))
            {
                /*peticionRetiro.fechaHora = DateTime.ParseExact(DateTime.Now.ToString("yyyy-MM-ddTHH:mm:ss"), "yyyy-MM-ddTHH:mm:ss", null);//peticionRetiro.fechaHora = DateTime.ParseExact(dsXmlEntrada.Tables["Detalle"].Rows[0]["fechaHora"].ToString(), "yyyy-MM-ddTHH:mm:ss", null);
                peticionRetiro.fechaHoraSpecified = true;*/
                peticionRetiro.fechaHoraprograma = DateTime.Now.ToString("yyyy-MM-ddTHH:mm:ss");
            }

            //8
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("ip"))
                peticionRetiro.ip = dsXmlEntrada.Tables["Detalle"].Rows[0]["ip"].ToString();

            //9
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("macAddress"))
                peticionRetiro.macAddress = dsXmlEntrada.Tables["Detalle"].Rows[0]["macAddress"].ToString();

            //10
            //EventLog.WriteEntry("PETICION-RETIRO", "Paso1-DESPUES DE FECHA HORA");
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("hostName"))
                peticionRetiro.hostName = dsXmlEntrada.Tables["Detalle"].Rows[0]["hostName"].ToString();

            //11
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("fechaContable"))
            {
                peticionRetiro.fechaContable = peticionRetiro.fechaHora;
            }

            //12
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("identificacionCajero"))
                peticionRetiro.identificacionCajero = dsXmlEntrada.Tables["Detalle"].Rows[0]["identificacionCajero"].ToString();

            //13 oficina cpt
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("oficinaCPT"))
                peticionRetiro.oficinaCPT = dsXmlEntrada.Tables["Detalle"].Rows[0]["oficinaCPT"].ToString();

            //14
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("numeroCuenta"))
                peticionRetiro.numeroTarjetaEncriptada = dsXmlEntrada.Tables["Detalle"].Rows[0]["numeroCuenta"].ToString();

            //15
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("tipoIdentificacion"))
            {
                peticionRetiro.tipoIdentificacionClienteTarjeta = (WSNewPacifico2.tipoIdentificacionEnum)Enum.Parse(typeof(WSNewPacifico2.tipoIdentificacionEnum)
                    , dsXmlEntrada.Tables["Detalle"].Rows[0]["tipoIdentificacion"].ToString());
                peticionRetiro.tipoIdentificacionClienteTarjetaSpecified = true;
            }

            //16
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("identificacion"))
                peticionRetiro.identificacionClienteTarjeta = dsXmlEntrada.Tables["Detalle"].Rows[0]["identificacion"].ToString();

            //17
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("nombreCliente"))
                peticionRetiro.nombreClienteTarjeta = dsXmlEntrada.Tables["Detalle"].Rows[0]["nombreCliente"].ToString();

            //18
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("numeroCuenta"))
                peticionRetiro.numeroCuenta = dsXmlEntrada.Tables["Detalle"].Rows[0]["numeroCuenta"].ToString();

            //19        
            EventLog.WriteEntry("EasySwitch", "PagoTarjeta=" + (string)dsXmlEntrada.Tables["Detalle"].Rows[0]["TipoCuenta"]);
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("TipoCuenta"))
            {
                // peticionRetiro.tipoCuenta = (WSNewPacifico2.tipoCuentaEnum)Enum.Parse(typeof(WSNewPacifico2.tipoCuentaEnum), dsXmlEntrada.Tables["Detalle"].Rows[0]["TipoCuenta"].ToString());
                var tipoCuenta = "TarjetaCredito";
                //peticionRetiro.tipoCuenta = (WSNewPacifico2.tipoCuentaEnum)Enum.Parse(typeof(WSNewPacifico2.tipoCuentaEnum), (string)dsXmlEntrada.Tables["Detalle"].Rows[0]["TipoCuenta"]);
                peticionRetiro.tipoCuenta = (WSNewPacifico2.tipoCuentaEnum)Enum.Parse(typeof(WSNewPacifico2.tipoCuentaEnum), (string)tipoCuenta);
                //  peticionRetiro.tipoCuentaSpecified = true;
            }

            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("valor"))
            {
                //char[] charsToTrim = { '' };
                string Valor = dsXmlEntrada.Tables["Detalle"].Rows[0]["valor"].ToString();
                Valor = NumeroSinPuntoDecimal(Valor).PadLeft(15, '0');
                peticionRetiro.valorTransaccion = Decimal.Parse(Valor);
                peticionRetiro.valorTransaccionSpecified = true;
            }
            EventLog.WriteEntry("PETICION-RETIRO", "fINALIZANDO Trama entrada:\n");
            #endregion
        }


        //andi
        public void llenarDatosEnvio(string strTrama, ref DatosEnvio envio)
        {
            // DatosEnvio envio = new DatosEnvio();
              DataSet dsXmlEntrada = new DataSet();
            try
            {
                dsXmlEntrada = adm.getDataSetFromString(strTrama);
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("agencia"))
                envio.agencia = int.Parse(dsXmlEntrada.Tables["Detalle"].Rows[0]["agencia"].ToString());
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("canal"))
                envio.canal = dsXmlEntrada.Tables["Detalle"].Rows[0]["canal"].ToString();
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("fechaHora"))
            {
                envio.fechaHoraprograma = DateTime.Now.ToString("yyyy-MM-ddTHH:mm:ss");
            }
            //EventLog.WriteEntry("PETICION-RETIRO", "Paso1-DESPUES DE FECHA HORA");
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("hostName"))
                envio.hostName = dsXmlEntrada.Tables["Detalle"].Rows[0]["hostName"].ToString();
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("idMensaje"))
                envio.idMensaje = dsXmlEntrada.Tables["Detalle"].Rows[0]["idMensaje"].ToString();
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("idUsuario"))
                envio.idUsuario = dsXmlEntrada.Tables["Detalle"].Rows[0]["idUsuario"].ToString();
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("ip"))
                envio.ip = dsXmlEntrada.Tables["Detalle"].Rows[0]["ip"].ToString();
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("localidad"))
                envio.localidad = int.Parse(dsXmlEntrada.Tables["Detalle"].Rows[0]["localidad"].ToString());
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("macAddress"))
                envio.macAddress = dsXmlEntrada.Tables["Detalle"].Rows[0]["macAddress"].ToString();
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("token"))
                envio.token = dsXmlEntrada.Tables["Detalle"].Rows[0]["token"].ToString();
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("codigoMoneda"))
                envio.codigoMoneda = dsXmlEntrada.Tables["Detalle"].Rows[0]["codigoMoneda"].ToString();
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("codigoOTP"))
                envio.codigoOTP = dsXmlEntrada.Tables["Detalle"].Rows[0]["codigoOTP"].ToString();
            //EventLog.WriteEntry("EasySwitch", "Funcion llenar medio");
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("fechaContable"))
            {
                envio.fechaContableprograma = DateTime.Now.ToString("yyyy-MM-ddTHH:mm:ss");
            }
            //peticionRetiro.fechaContable = DateTime.ParseExact(dsXmlEntrada.Tables["Detalle"].Rows[0]["fechaContable"].ToString(), "yyyyMMdd", null);
            //EventLog.WriteEntry("PETICION-RETIRO", "Paso1-fechaContable");
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("identificacion"))
                envio.identificacion = dsXmlEntrada.Tables["Detalle"].Rows[0]["identificacion"].ToString();
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("identificacionCajero"))
                envio.identificacionCajero = dsXmlEntrada.Tables["Detalle"].Rows[0]["identificacionCajero"].ToString();
            //EventLog.WriteEntry("PETICION-RETIRO", "Paso1-cajero");
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("medioOTP"))
            {
                //peticionRetiro.medioOTP = (WSNewPacifico2.medioOTPEnum)Enum.Parse(typeof(WSNewPacifico2.medioOTPEnum), dsXmlEntrada.Tables["Detalle"].Rows[0]["medioOTP"].ToString());
                envio.medioOTP = dsXmlEntrada.Tables["Detalle"].Rows[0]["medioOTP"].ToString();
                //peticionRetiro.medioOTPSpecified = true;
            }
            //EventLog.WriteEntry("PETICION-RETIRO", "Paso1-medioOTP");
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("nombreCliente"))
                envio.nombreCliente = dsXmlEntrada.Tables["Detalle"].Rows[0]["nombreCliente"].ToString();
            //EventLog.WriteEntry("PETICION-RETIRO", "Paso2-nombre cliente");
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("numeroCuentaRetiro"))
                envio.numeroCuenta = dsXmlEntrada.Tables["Detalle"].Rows[0]["numeroCuentaRetiro"].ToString();
            //EventLog.WriteEntry("PETICION-RETIRO", "Paso3-numero cuenta");
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("numeroCuentaRedTBBA"))
                //peticionRetiro.numeroCuentaRedTBBA = "";
                envio.numeroCuentaRedTBBA = dsXmlEntrada.Tables["Detalle"].Rows[0]["numeroCuentaRedTBBA"].ToString();
            //EventLog.WriteEntry("PETICION-RETIRO", "Paso4-CuentaRedTBBA");
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("numeroCuentaRetiro"))
                envio.numeroCuentaRetiro = dsXmlEntrada.Tables["Detalle"].Rows[0]["numeroCuentaRetiro"].ToString();
            //EventLog.WriteEntry("PETICION-RETIRO", "Paso5-cuentaRetiro");
            //EventLog.WriteEntry("PETICION-RETIRO", "Ingresando Trama entrada:\n" + peticionRetiro.numeroCuenta + "-" + peticionRetiro.numeroCuentaRedTBBA + "-" + peticionRetiro.numeroCuentaRetiro);
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("oficinaCPT"))
                envio.oficinaCPT = dsXmlEntrada.Tables["Detalle"].Rows[0]["oficinaCPT"].ToString();
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("tipoCuenta"))
            {
                //peticionRetiro.tipoCuenta = (WSNewPacifico2.tipoCuentaEnum)Enum.Parse(typeof(WSNewPacifico2.tipoCuentaEnum), dsXmlEntrada.Tables["Detalle"].Rows[0]["tipoCuenta"].ToString());
                envio.tipoCuenta = dsXmlEntrada.Tables["Detalle"].Rows[0]["tipoCuenta"].ToString();
                //peticionRetiro.tipoCuentaSpecified = true;
            }
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("tipoIdentificacion"))
            {
                //peticionRetiro.tipoIdentificacion = (WSNewPacifico2.tipoIdentificacionEnum)Enum.Parse(typeof(WSNewPacifico2.tipoIdentificacionEnum)
                //    , dsXmlEntrada.Tables["Detalle"].Rows[0]["tipoIdentificacion"].ToString());
                //peticionRetiro.tipoIdentificacionSpecified = true;
                envio.tipoIdentificacion = dsXmlEntrada.Tables["Detalle"].Rows[0]["tipoIdentificacion"].ToString();
            }
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("valor"))
            {
                //char[] charsToTrim = { '' };
                string Valor = dsXmlEntrada.Tables["Detalle"].Rows[0]["valor"].ToString();
                Valor = NumeroSinPuntoDecimal(Valor).PadLeft(15, '0');
                envio.valor = Decimal.Parse(Valor);
                //peticionRetiro.valorSpecified = true;
            }
        }
        catch (Exception ex)
            {
                EventLog.WriteEntry("EasySwitch", string.Format("InnerException={0} - Message={1} - Source={2} - StackTrace={3}", ex.InnerException, ex.Message, ex.Source, ex.StackTrace));
            }
        }

        //Roger::2018/17/10::Retiro en efectivo::Lleno los parámetros del Nuevo Web Service para Retiro
        private void llenarPeticionRetiroParaWS3(ref WSNewPacifico2.retiraCuentaPeticion peticionRetiro, string strTrama, string nombreCliente, string cuentaCliente)
        {
            //EventLog.WriteEntry("PETICION-RETIRO", "llenar peticion retireo para WS3");
            #region llenar data
            DataSet dsXmlEntrada = adm.getDataSetFromString(strTrama);

            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("agencia"))
                peticionRetiro.agencia = int.Parse(dsXmlEntrada.Tables["Detalle"].Rows[0]["agencia"].ToString());
            //EventLog.WriteEntry("PETICION-RETIRO", "Paso1-agencia");
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("canal"))
                peticionRetiro.canal = dsXmlEntrada.Tables["Detalle"].Rows[0]["canal"].ToString();
            //EventLog.WriteEntry("PETICION-RETIRO", "Paso1-FECHA HORA");
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("fechaHora"))
            {
                /*peticionRetiro.fechaHora = DateTime.ParseExact(DateTime.Now.ToString("yyyy-MM-ddTHH:mm:ss"), "yyyy-MM-ddTHH:mm:ss", null);//peticionRetiro.fechaHora = DateTime.ParseExact(dsXmlEntrada.Tables["Detalle"].Rows[0]["fechaHora"].ToString(), "yyyy-MM-ddTHH:mm:ss", null);
                peticionRetiro.fechaHoraSpecified = true;*/
                peticionRetiro.fechaHoraprograma = DateTime.Now.ToString("yyyy-MM-ddTHH:mm:ss");
            }
            //EventLog.WriteEntry("PETICION-RETIRO", "Paso1-DESPUES DE FECHA HORA");
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("hostName"))
                peticionRetiro.hostName = dsXmlEntrada.Tables["Detalle"].Rows[0]["hostName"].ToString();
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("idMensaje"))
                peticionRetiro.idMensaje = dsXmlEntrada.Tables["Detalle"].Rows[0]["idMensaje"].ToString();
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("idUsuario"))
                peticionRetiro.idUsuario = dsXmlEntrada.Tables["Detalle"].Rows[0]["idUsuario"].ToString();
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("ip"))
                peticionRetiro.ip = dsXmlEntrada.Tables["Detalle"].Rows[0]["ip"].ToString();
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("localidad"))
                peticionRetiro.localidad = int.Parse(dsXmlEntrada.Tables["Detalle"].Rows[0]["localidad"].ToString());
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("macAddress"))
                peticionRetiro.macAddress = dsXmlEntrada.Tables["Detalle"].Rows[0]["macAddress"].ToString();
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("token"))
                peticionRetiro.token = dsXmlEntrada.Tables["Detalle"].Rows[0]["token"].ToString();
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("codigoMoneda"))
                peticionRetiro.codigoMoneda = dsXmlEntrada.Tables["Detalle"].Rows[0]["codigoMoneda"].ToString();
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("codigoOTP"))
                peticionRetiro.codigoOTP = dsXmlEntrada.Tables["Detalle"].Rows[0]["codigoOTP"].ToString();
            //EventLog.WriteEntry("EasySwitch", "Funcion llenar medio");
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("fechaContable"))
            {
                /*peticionRetiro.fechaContable = DateTime.ParseExact(DateTime.Now.ToString("yyyy-MM-ddTHH:mm:ss"), "yyyy-MM-ddTHH:mm:ss", null);//peticionRetiro.fechaHora = DateTime.ParseExact(dsXmlEntrada.Tables["Detalle"].Rows[0]["fechaHora"].ToString(), "yyyy-MM-ddTHH:mm:ss", null);
                peticionRetiro.fechaContableSpecified = true;*/
                peticionRetiro.fechaContableprograma = DateTime.Now.ToString("yyyy-MM-ddTHH:mm:ss");
            }
            //peticionRetiro.fechaContable = DateTime.ParseExact(dsXmlEntrada.Tables["Detalle"].Rows[0]["fechaContable"].ToString(), "yyyyMMdd", null);
            //EventLog.WriteEntry("PETICION-RETIRO", "Paso1-fechaContable");
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("identificacion"))
                peticionRetiro.identificacion = dsXmlEntrada.Tables["Detalle"].Rows[0]["identificacion"].ToString();
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("identificacionCajero"))
                peticionRetiro.identificacionCajero = dsXmlEntrada.Tables["Detalle"].Rows[0]["identificacionCajero"].ToString();
            //EventLog.WriteEntry("PETICION-RETIRO", "Paso1-cajero");
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("medioOTP"))
            {
                peticionRetiro.medioOTP = (WSNewPacifico2.medioOTPEnum)Enum.Parse(typeof(WSNewPacifico2.medioOTPEnum), dsXmlEntrada.Tables["Detalle"].Rows[0]["medioOTP"].ToString());
                peticionRetiro.medioOTPSpecified = true;
            }
            //EventLog.WriteEntry("PETICION-RETIRO", "Paso1-medioOTP");
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("nombreCliente"))
                peticionRetiro.nombreCliente = dsXmlEntrada.Tables["Detalle"].Rows[0]["nombreCliente"].ToString();
            //EventLog.WriteEntry("PETICION-RETIRO", "Paso2-nombre cliente");
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("numeroCuenta"))
                peticionRetiro.numeroCuenta = dsXmlEntrada.Tables["Detalle"].Rows[0]["numeroCuenta"].ToString();
            //EventLog.WriteEntry("PETICION-RETIRO", "Paso3-numero cuenta");
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("numeroCuentaRedTBBA"))
                //peticionRetiro.numeroCuentaRedTBBA = "";
                peticionRetiro.numeroCuentaRedTBBA = dsXmlEntrada.Tables["Detalle"].Rows[0]["numeroCuentaRedTBBA"].ToString();
            //EventLog.WriteEntry("PETICION-RETIRO", "Paso4-CuentaRedTBBA");
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("numeroCuentaRetiro"))
                peticionRetiro.numeroCuentaRetiro = dsXmlEntrada.Tables["Detalle"].Rows[0]["numeroCuentaRetiro"].ToString();
            //EventLog.WriteEntry("PETICION-RETIRO", "Paso5-cuentaRetiro");
            //EventLog.WriteEntry("PETICION-RETIRO", "Ingresando Trama entrada:\n" + peticionRetiro.numeroCuenta + "-" + peticionRetiro.numeroCuentaRedTBBA + "-" + peticionRetiro.numeroCuentaRetiro);
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("oficinaCPT"))
                peticionRetiro.oficinaCPT = dsXmlEntrada.Tables["Detalle"].Rows[0]["oficinaCPT"].ToString();
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("tipoCuenta"))
            {
                peticionRetiro.tipoCuenta = (WSNewPacifico2.tipoCuentaEnum)Enum.Parse(typeof(WSNewPacifico2.tipoCuentaEnum), dsXmlEntrada.Tables["Detalle"].Rows[0]["tipoCuenta"].ToString());
                peticionRetiro.tipoCuentaSpecified = true;
            }
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("tipoIdentificacion"))
            {
                peticionRetiro.tipoIdentificacion = (WSNewPacifico2.tipoIdentificacionEnum)Enum.Parse(typeof(WSNewPacifico2.tipoIdentificacionEnum)
                    , dsXmlEntrada.Tables["Detalle"].Rows[0]["tipoIdentificacion"].ToString());
                peticionRetiro.tipoIdentificacionSpecified = true;
            }
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("valor"))
            {
                //char[] charsToTrim = { '' };
                string Valor = dsXmlEntrada.Tables["Detalle"].Rows[0]["valor"].ToString();
                Valor = NumeroSinPuntoDecimal(Valor).PadLeft(15, '0');
                peticionRetiro.valor = Decimal.Parse(Valor);
                peticionRetiro.valorSpecified = true;
            }
            //EventLog.WriteEntry("PETICION-RETIRO", "fINALIZANDO Trama entrada:\n");
            #endregion
        }

        //Roger::2018/05/09::Retiro en efectivo::Lleno los parámetros del Nuevo Web Service para Reverso
        private void llenarPeticionReversoParaWS(ref WSNewPacifico2.reversaRetiroCuentaPeticion peticionReverso, string strTrama)
        {
            DataSet dsXmlEntrada = adm.getDataSetFromString(strTrama);
            #region llenar data normal

            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("agencia"))
                peticionReverso.agencia = int.Parse(dsXmlEntrada.Tables["Detalle"].Rows[0]["agencia"].ToString());
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("canal"))
                peticionReverso.canal = dsXmlEntrada.Tables["Detalle"].Rows[0]["canal"].ToString();
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("fechaHora"))
                peticionReverso.fechaHora = DateTime.ParseExact(DateTime.Now.ToString("yyyy-MM-ddTHH:mm:ss"), "yyyy-MM-ddTHH:mm:ss", null);//peticionReverso.fechaHora = DateTime.ParseExact(dsXmlEntrada.Tables["peticion"].Rows[0]["fechaHora"].ToString(), "yyyyMMdd", null);
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("hostName"))
                peticionReverso.hostName = dsXmlEntrada.Tables["Detalle"].Rows[0]["hostName"].ToString();
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("idMensaje"))
                peticionReverso.idMensaje = dsXmlEntrada.Tables["Detalle"].Rows[0]["idMensaje"].ToString();
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("idUsuario"))
                peticionReverso.idUsuario = dsXmlEntrada.Tables["Detalle"].Rows[0]["idUsuario"].ToString();
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("ip"))
                peticionReverso.ip = dsXmlEntrada.Tables["Detalle"].Rows[0]["ip"].ToString();
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("localidad"))
                peticionReverso.localidad = int.Parse(dsXmlEntrada.Tables["Detalle"].Rows[0]["localidad"].ToString());
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("macAddress"))
                peticionReverso.macAddress = dsXmlEntrada.Tables["Detalle"].Rows[0]["macAddress"].ToString();
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("token"))
                peticionReverso.token = dsXmlEntrada.Tables["Detalle"].Rows[0]["token"].ToString();
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("fechaContable"))
                peticionReverso.fechaContable = DateTime.ParseExact(dsXmlEntrada.Tables["peticion"].Rows[0]["fechaContable"].ToString(), "yyyyMMdd", null);
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("identificacionCajero"))
                peticionReverso.identificacionCajero = dsXmlEntrada.Tables["Detalle"].Rows[0]["identificacionCajero"].ToString();
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("motivo"))
                peticionReverso.motivo = dsXmlEntrada.Tables["Detalle"].Rows[0]["motivo"].ToString();
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("numeroTransaccion"))
                peticionReverso.numeroTransaccion = dsXmlEntrada.Tables["Detalle"].Rows[0]["numeroTransaccion"].ToString();
            if (dsXmlEntrada.Tables["Detalle"].Columns.Contains("oficinaCPT"))
                peticionReverso.oficinaCPT = dsXmlEntrada.Tables["Detalle"].Rows[0]["oficinaCPT"].ToString();

            /*
            peticionReverso.agencia = 0;
            peticionReverso.canal = "TSC";
            peticionReverso.fechaContable = DateTime.Now;
            peticionReverso.fechaHora = DateTime.Now;
            peticionReverso.hostName = adm.ObtenerHost();
            peticionReverso.motivo = "";
            peticionReverso.numeroTransaccion = "";
            peticionReverso.identificacionCajero = "ssaltos";
            Guid guid = new Guid();
            peticionReverso.idMensaje = guid.GetHashCode().ToString();
            peticionReverso.idUsuario = "bPacifico";
            peticionReverso.ip = adm.ObtenerIP();
            peticionReverso.localidad = 1;
            peticionReverso.macAddress = adm.ObtenerMac();
            peticionReverso.token = "12345789";
            peticionReverso.oficinaCPT = "18010001";
            */
            #endregion parse
            /*
            #region llenar data parse tags
            if (dsXmlEntrada.Tables["peticion"].Columns.Contains("agencia"))
                peticionReverso.agencia = int.Parse(dsXmlEntrada.Tables["peticion"].Rows[0]["agencia"].ToString());
            if (dsXmlEntrada.Tables["peticion"].Columns.Contains("canal"))
                peticionReverso.canal = dsXmlEntrada.Tables["peticion"].Rows[0]["canal"].ToString();
            if (dsXmlEntrada.Tables["peticion"].Columns.Contains("fechaHora"))
                peticionReverso.fechaHora = DateTime.ParseExact(DateTime.Now.ToString("yyyy-MM-ddTHH:mm:ss"), "yyyy-MM-ddTHH:mm:ss", null);//peticionReverso.fechaHora = DateTime.ParseExact(dsXmlEntrada.Tables["peticion"].Rows[0]["fechaHora"].ToString(), "yyyyMMdd", null);
            if (dsXmlEntrada.Tables["peticion"].Columns.Contains("hostName"))
                peticionReverso.hostName = dsXmlEntrada.Tables["peticion"].Rows[0]["hostName"].ToString();
            if (dsXmlEntrada.Tables["peticion"].Columns.Contains("idMensaje"))
                peticionReverso.idMensaje = dsXmlEntrada.Tables["peticion"].Rows[0]["idMensaje"].ToString();
            if (dsXmlEntrada.Tables["peticion"].Columns.Contains("idUsuario"))
                peticionReverso.idUsuario = dsXmlEntrada.Tables["peticion"].Rows[0]["idUsuario"].ToString();
            if (dsXmlEntrada.Tables["peticion"].Columns.Contains("ip"))
                peticionReverso.ip = dsXmlEntrada.Tables["peticion"].Rows[0]["ip"].ToString();
            if (dsXmlEntrada.Tables["peticion"].Columns.Contains("localidad"))
                peticionReverso.localidad = int.Parse(dsXmlEntrada.Tables["peticion"].Rows[0]["localidad"].ToString());
            if (dsXmlEntrada.Tables["peticion"].Columns.Contains("macAddress"))
                peticionReverso.macAddress = dsXmlEntrada.Tables["peticion"].Rows[0]["macAddress"].ToString();
            if (dsXmlEntrada.Tables["peticion"].Columns.Contains("token"))
                peticionReverso.token = dsXmlEntrada.Tables["peticion"].Rows[0]["token"].ToString();
            if (dsXmlEntrada.Tables["peticion"].Columns.Contains("fechaContable"))
                peticionReverso.fechaContable = DateTime.ParseExact(dsXmlEntrada.Tables["peticion"].Rows[0]["fechaContable"].ToString(), "yyyyMMdd", null);
            if (dsXmlEntrada.Tables["peticion"].Columns.Contains("identificacionCajero"))
                peticionReverso.identificacionCajero = dsXmlEntrada.Tables["peticion"].Rows[0]["identificacionCajero"].ToString();
            if (dsXmlEntrada.Tables["peticion"].Columns.Contains("motivo"))
                peticionReverso.motivo = dsXmlEntrada.Tables["peticion"].Rows[0]["motivo"].ToString();
            if (dsXmlEntrada.Tables["peticion"].Columns.Contains("numeroTransaccion"))
                peticionReverso.numeroTransaccion = dsXmlEntrada.Tables["peticion"].Rows[0]["numeroTransaccion"].ToString();
            if (dsXmlEntrada.Tables["peticion"].Columns.Contains("oficinaCPT"))
                peticionReverso.oficinaCPT = dsXmlEntrada.Tables["peticion"].Rows[0]["oficinaCPT"].ToString();

            #endregion
            */
        }

        public string Procesar_Transaccion_Online_Rapipagos(long lngID_log, string strTransaccion, string strXmlEntrada, string url, int IdOrigen, string Usuario, string Password)
        {
            //return ad.Obtener_Transaccion_Switch_Log(strTrama, ref lngID_log, strOperador, bolProcesoActivo);            
            //long lngID_log = 0;
            string strRespuesta = string.Empty;
            string IdTransaccion = "0";
            string strCodigoRetorno = string.Empty;
            string strMensajeProceso = string.Empty;
            string strTramaRespuesta = string.Empty;
            int monto = 0;
            int idCaja = 0;

            try
            {
                try
                {
                    XmlReader reader = XmlReader.Create(new StringReader(strXmlEntrada));
                    DataSet dsEntrada = new DataSet();
                    dsEntrada.ReadXml(reader);

                    monto = Convert.ToInt32(dsEntrada.Tables[0].Rows[0]["monto"].ToString());
                    idCaja = Convert.ToInt32(dsEntrada.Tables[0].Rows[0]["Caja"].ToString());


                    WSBarceton.SW_Barceton ws = new WSBarceton.SW_Barceton();
                    ws.Url = url;

                    //System.Net.NetworkCredential cred = new NetworkCredential("mcastro", "mcastro");
                    //System.Net.WebProxy wp = new WebProxy("192.168.0.1", Convert.ToInt32("3128"));
                    //wp.Credentials = cred;
                    //ws.Proxy = wp;
                    //ws.Timeout = 600000;//6 minutos

                    EventLog.WriteEntry("EasySwitch", "URL:" + ws.Url + " Usuario:" + Usuario + " Pass:" + Password + " Id_origen:" + IdOrigen + "caja:" + idCaja + " Monto:" + monto.ToString());
                    strRespuesta = ws.Donar(monto, Usuario, Password, IdOrigen, idCaja);
                    EventLog.WriteEntry("EasySwitch", "Respuesta del Host:" + strRespuesta);
                    strTramaRespuesta = strRespuesta;

                    if (strRespuesta.Contains("|"))
                    {
                        if (strRespuesta.Split('|')[0] == "OK")
                        {
                            strCodigoRetorno = "0001";
                            strMensajeProceso = "PROCESO OK.";
                            IdTransaccion = strRespuesta.Split('|')[1];
                        }
                        else
                        {
                            strCodigoRetorno = "9002";
                            strMensajeProceso = strRespuesta.Split('|')[1];
                        }
                    }


                    strRespuesta = adm.Actualizar_Transaccion_Switch_Log_Tran(lngID_log, "PROCESADO", strRespuesta, DateTime.Now.ToString("yyyyMMdd HH:mm:ss:fff"), strCodigoRetorno + "|" + strMensajeProceso, string.Empty, "");

                    strRespuesta = "0001|RESPUESTA_OK";
                    strRespuesta += "|" + GetXMLSalidaPago(DateTime.Now.ToString(), strCodigoRetorno, strMensajeProceso, IdTransaccion, "", "", "", "", "", "", "", "N", "", IdTransaccion, "", "", "", "", "", IdTransaccion, "S", "S", "", "", "", "", "", strTransaccion, IdOrigen.ToString(), "");
                    GrabarAppLog("Pacifico_Procesos.Procesar_Transaccion_Online_Rapipagos:Despues de Enviar:WSBarceton.SW_Barceton:" + strRespuesta, "I");

                }
                catch (Exception e)
                {
                    GrabarAppLog("Pacifico_Procesos.Procesar_Transaccion_Online_Rapipagos:Error:" + e.Message, "E");
                    strRespuesta = adm.Actualizar_Transaccion_Switch_Log_Tran(lngID_log, "ERROR", e.Message);

                }

            }
            catch (Exception ee)
            {
                GrabarAppLog("Pacifico_Procesos.Procesar_Transaccion_Online_Rapipagos:Error:" + ee.Message, "E");
                strRespuesta = adm.Actualizar_Transaccion_Switch_Log_Tran(lngID_log, "ENVIO_DUDOSO", ee.Message);
                //bolProcesoActivo = false;
            }


            GrabarAppLog("Pacifico_Procesos.Procesar_Transaccion_Online_Rapipagos:FIN DEL SWITCH Pacifico", "I");
            return strRespuesta;
        }

        private string TransformarTramaReverso(DataSet dsEntrada, string strXmlPlantilla, string strTransaccion)
        {
            string NumeroTransaccion = string.Empty;
            string Producto = string.Empty;
            string Servicio = string.Empty;
            string FechaTransaccion = string.Empty;
            string FechaContable = string.Empty;
            string HoraTransaccion = string.Empty;
            string CanalProceso = string.Empty;
            string UserWS = string.Empty;
            string PasswordWS = string.Empty;
            string UsuarioCajero = string.Empty;
            string OficinaCPT = string.Empty;
            string NumeroTransaccionReversar = string.Empty;
            string Motivo = "002";
            string NumeroTransaccionComision = string.Empty;
            string TipoCodigo = string.Empty;
            string strResultado = string.Empty;
            string servicio1 = string.Empty;
            string empresa = string.Empty;
            Object[] Parametros;

            try
            {
                foreach (DataRow dr in dsEntrada.Tables["Cabecera"].Rows)
                {
                    NumeroTransaccion = dr["NumeroTransaccion"].ToString();
                    FechaTransaccion = dr["FechaTransaccion"].ToString();
                    FechaContable = dr["FechaContable"].ToString();
                    HoraTransaccion = dr["HoraTransaccion"].ToString();
                    CanalProceso = dr["CanalProceso"].ToString();
                    UserWS = dr["UserWS"].ToString();
                    PasswordWS = dr["PasswordWS"].ToString();
                    UsuarioCajero = dr["UsuarioCajero"].ToString();
                    OficinaCPT = dr["OficinaCPT"].ToString();
                    Motivo = "002";
                    NumeroTransaccionReversar = dr["NumeroTransaccion"].ToString();
                    empresa = dr["Empresa"].ToString();
                }
                foreach (DataRow dr in dsEntrada.Tables["Detalle"].Rows)
                {
                    if (dsEntrada.Tables["Detalle"].Columns.Contains("NumeroTransaccionComision"))
                        NumeroTransaccionComision = dr["NumeroTransaccionComision"].ToString();
                    else
                        NumeroTransaccionComision = string.Empty;
                }

                switch (strTransaccion)
                {

                    #region CNT
                    case "REVERSO_PACIFICO_CNT":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "AP";
                        Parametros = new object[] { NumeroTransaccion,
                                        "EMETEL",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    #endregion

                    #region EEQ
                    case "REVERSO_PACIFICO_EEQ":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "LU";
                        Parametros = new object[] { NumeroTransaccion,
                                        "E.E.Q",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region EMAAP
                    case "REVERSO_PACIFICO_EMAAP":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "AU";

                        Parametros = new object[] { NumeroTransaccion,
                                        "EMAAP QUITO",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    #endregion
                    #region GLOBAL
                    case "REVERSO_PACIFICO_GLOBAL":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "3";
                        Servicio = "GV";
                        Parametros = new object[] { NumeroTransaccion,
                                        "GLOBALENVIOS",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region BONO
                    case "REVERSO_PACIFICO_BONO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "SP";
                        Parametros = new object[] { NumeroTransaccion,
                                        "PACIFICO EC",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region REGISTRO CIVIL
                    case "REVERSO_PACIFICO_RCIVIL":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "ZF";
                        Parametros = new object[] { NumeroTransaccion,
                                        "REG CIVIL",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar
                                        };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region EEASA
                    case "REVERSO_PACIFICO_EEASA":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "LU";

                        Parametros = new object[] { NumeroTransaccion,
                                        "EEASA",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region EMAPA AMBATO
                    case "REVERSO_PACIFICO_EMAPAA":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "A1";

                        Parametros = new object[] { NumeroTransaccion,
                                        "EMAPA AMBATO",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region EMAPA IBARRA
                    case "REVERSO_PACIFICO_EMAPAI":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "A1";

                        Parametros = new object[] { NumeroTransaccion,
                                        "EMAPA09",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region EMELNORTE
                    case "REVERSO_PACIFICO_ENORTE":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "LU";

                        Parametros = new object[] { NumeroTransaccion,
                                        "EMELNORTE",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region MATERCARD
                    case "REVERSO_PACIFICO_MASTER":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "PT";
                        Parametros = new object[] { NumeroTransaccion,
                                        "MASTERCARD",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region MOVISTAR
                    case "REVERSO_PACIFICO_MOVI":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "VT";
                        Parametros = new object[] { NumeroTransaccion,
                                        "BROADNET",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    #endregion
                    #region VISA CASH
                    case "REVERSO_PACIFICO_VISAC":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "VH";
                        Parametros = new object[] { NumeroTransaccion,
                                        "VISA CASH",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region MUNICIPIO AMBATO
                    case "REVERSO_PACIFICO_MUNIAMBATO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "OC";

                        Parametros = new object[] { NumeroTransaccion,
                                        "MUNICIPIOAMB",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region MUNICIPIO IBARRA
                    case "REVERSO_PACIFICO_MUNIIBARRA":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "OC";

                        Parametros = new object[] { NumeroTransaccion,
                                        "MUNICIPIOIBA",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region CTG
                    case "REVERSO_PACIFICO_CTG":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "Z1";

                        Parametros = new object[] { NumeroTransaccion,
                                        "CTG",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region CNTTTSV
                    case "REVERSO_PACIFICO_CNTTTSV":
                        //obtener el xml de plantilla para su remplazo                        
                        Producto = "4";
                        Servicio = "OC";

                        Parametros = new object[] { NumeroTransaccion,
                                        "CNTTTSV",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region SRIMAT
                    case "REVERSO_PACIFICO_SRIMAT":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "MS";

                        Parametros = new object[] { NumeroTransaccion,
                                        "SRI",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region SRIRISE
                    case "REVERSO_PACIFICO_SRIRISE":
                        //obtener el xml de plantilla para su remplazo                        
                        Producto = "4";
                        Servicio = "RI";
                        Parametros = new object[] { NumeroTransaccion,
                                        "SRI",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region SRITDOM
                    case "REVERSO_PACIFICO_SRITDOM":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "T6";

                        Parametros = new object[] { NumeroTransaccion,
                                        "SRI",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region CEP
                    case "REVERSO_PACIFICO_SRICEP":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "CE";

                        Parametros = new object[] { NumeroTransaccion,
                                        "SRI",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region AVON
                    case "REVERSO_PACIFICO_AVON":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "OC";
                        Parametros = new object[] { NumeroTransaccion,
                                        "AVON",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region CONECELL
                    case "REVERSO_PACIFICO_CONECELL":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "O2";
                        Parametros = new object[] { NumeroTransaccion,
                                        "CONECELL",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region CREDIMETRICA
                    case "REVERSO_PACIFICO_CREDIMETRICA":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "OC";
                        Parametros = new object[] { NumeroTransaccion,
                                        "CREDIRECTO",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region CREDITRUCK
                    case "REVERSO_PACIFICO_CREDITRUCK":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "OC";
                        Parametros = new object[] { NumeroTransaccion,
                                        "CREDITRUCK",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region EERSA
                    case "REVERSO_PACIFICO_EERSA":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "LU";
                        Parametros = new object[] { NumeroTransaccion,
                                        "EERSA",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region LEONISA
                    case "REVERSO_PACIFICO_LEONISA":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "OC";
                        Parametros = new object[] { NumeroTransaccion,
                                        "LEONISA",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region OTECEL
                    case "REVERSO_PACIFICO_OTECEL":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "BA";
                        Parametros = new object[] { NumeroTransaccion,
                                        "OTECEL",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region AGUAPEN
                    case "REVERSO_PACIFICO_AGUAPEN":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "AU";

                        Parametros = new object[] { NumeroTransaccion,
                                        "AGUAPEN",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region AMAGUA
                    case "REVERSO_PACIFICO_AMAGUA":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "AU";

                        Parametros = new object[] { NumeroTransaccion,
                                        "AMAGUA",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region EMAPAP
                    case "REVERSO_PACIFICO_EMAPAP":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "AU";

                        Parametros = new object[] { NumeroTransaccion,
                                        "PORTOAGUAS",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region TRIPLEORO
                    case "REVERSO_PACIFICO_TRIPLEORO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "AU";

                        Parametros = new object[] { NumeroTransaccion,
                                        "TRIPLEORO",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region CNEL GUAYAS-LOS RIOS
                    case "REVERSO_PACIFICO_CNELGYELR":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "LV";

                        Parametros = new object[] { NumeroTransaccion,
                                        "CNEL",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region TIEMPO AIRE CLARO
                    case "REVERSO_PACIFICO_CLARO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "AH";
                        Parametros = new object[] { NumeroTransaccion,
                                        "CONECELL",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region MUNICIPIO DE QUITO
                    case "REVERSO_PACIFICO_MUNIQUITO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "ZG";

                        Parametros = new object[] { NumeroTransaccion,
                                        "MUNICIPIOQUI",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_MUNIQUITOEL":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "MU";

                        Parametros = new object[] { NumeroTransaccion,
                                        "MUNICIPIOQUI",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region CNEL MILAGRO
                    case "REVERSO_PACIFICO_CNELMILA":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "LU";

                        Parametros = new object[] { NumeroTransaccion,
                                        "CNEL MILAGRO",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region INTERAGUA
                    case "REVERSO_PACIFICO_INTERAGUA":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "AU";

                        Parametros = new object[] { NumeroTransaccion,
                                        "INTERAGUA",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region TVCABLE GYE
                    case "REVERSO_PACIFICO_TVCABLE":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "TO";
                        Parametros = new object[] { NumeroTransaccion,
                                        "TV CABLE",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region TVCABLE UIO
                    case "REVERSO_PACIFICO_TVCABLEUIO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "TO";
                        Parametros = new object[] { NumeroTransaccion,
                                        "TVCABLE UIO",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region UNIVISA
                    case "REVERSO_PACIFICO_UNIVISA":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "TP";
                        Parametros = new object[] { NumeroTransaccion,
                                        "UNIVISA",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region ELECTRICA DE GYE
                    case "REVERSO_PACIFICO_ELEGYE":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "LV";

                        Parametros = new object[] { NumeroTransaccion,
                                        "EEE",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region CAE
                    case "REVERSO_PACIFICO_CAE":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "DU";
                        Parametros = new object[] { NumeroTransaccion,
                                        "CAE",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region CNEL EL ORO
                    case "REVERSO_PACIFICO_CNELORO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "LU";

                        Parametros = new object[] { NumeroTransaccion,
                                        "CNEL EL ORO",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion

                    #region CFN

                    case "REVERSO_PACIFICO_CFN":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "OC";
                        Parametros = new object[] { NumeroTransaccion,
                                        "CFN",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region COORP FATIMA

                    case "REVERSO_PACIFICO_COORPFATIMA":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "OC";
                        Parametros = new object[] { NumeroTransaccion,
                                        "CORP.FATIMA",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region EMAPA RIOBAMB

                    case "REVERSO_PACIFICO_EMAPARIO":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "AU";
                        Parametros = new object[] { NumeroTransaccion,
                                        "EMAPA RIOBAM",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region ETAPA

                    case "REVERSO_PACIFICO_ETAPA":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "OC";
                        Parametros = new object[] { NumeroTransaccion,
                                        "ETAPA",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region IFTH

                    case "REVERSO_PACIFICO_IFTH":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "OC";
                        Parametros = new object[] { NumeroTransaccion,
                                        "IFTH",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_IECEOL":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "CA";
                        Parametros = new object[] { NumeroTransaccion,
                            "BPE ESTUDIOS",Producto,Servicio,"0005",FechaTransaccion,
                            FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                            UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,Motivo
                        };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region MUNICIPIO DE MILAGRO

                    case "REVERSO_PACIFICO_MUNIMILAGRO":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "OC";
                        Parametros = new object[] { NumeroTransaccion,
                                        "MUNICIPIOMIL",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region JUDICIAL IBARRA

                    case "REVERSO_PACIFICO_JUDIBARRA":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "OC";
                        Parametros = new object[] { NumeroTransaccion,
                                        "JUD IBARRA",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region BSC
                    case "REVERSO_PACIFICO_BSC":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Parametros = new object[] { NumeroTransaccion,
                                        "BARCELONA",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion


                    #region UTPL
                    case "REVERSO_PACIFICO_UTPL":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "SC";
                        Parametros = new object[] { NumeroTransaccion,
                                        "UTPL",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region UNACH
                    case "REVERSO_PACIFICO_UNACH":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Parametros = new object[] { NumeroTransaccion,
                                        "UNACH",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region ESPOCH

                    case "REVERSO_PACIFICO_ESPOCH":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Parametros = new object[] { NumeroTransaccion,
                                        "ESPOCH",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region UIVERSIDAD MANABI

                    case "REVERSO_PACIFICO_UMANABI":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Parametros = new object[] { NumeroTransaccion,
                                        "U MANABI",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region ANT
                    case "REVERSO_PACIFICO_ANT":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "OC";
                        Parametros = new object[] { NumeroTransaccion,
                                        "ANT",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;


                    case "REVERSO_PACIFICO_ANTC":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "OC";
                        Parametros = new object[] { NumeroTransaccion,
                                        "ANT",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    case "REVERSO_PACIFICO_ANTT":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "OC";
                        Parametros = new object[] { NumeroTransaccion,
                                        "ANT",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_ANTCO":
                    case "REVERSO_PACIFICO_ANTO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "AN";
                        //si es convenio de pago el servicio es AT
                        if (strTransaccion == "REVERSO_PACIFICO_ANTCO")
                            Servicio = "AT";

                        Parametros = new object[] { NumeroTransaccion,
                                        "ANT",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region PPSBONO
                    case "REVERSO_PACIFICO_PPSBONO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "SP";

                        Parametros = new object[] { NumeroTransaccion,
                                        "PPSBONO",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region PRONACA
                    case "REVERSO_PACIFICO_PRONACA":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "OC";
                        Parametros = new object[] { NumeroTransaccion,
                                        "PRONACA",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    #endregion
                    #region AGROCALIDAD
                    case "REVERSO_PACIFICO_AGROCALIDAD":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "OC";
                        Parametros = new object[] { NumeroTransaccion,
                                        "AGROCALIDAD",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region SENATEL
                    case "REVERSO_PACIFICO_SENATEL":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "OC";
                        Parametros = new object[] { NumeroTransaccion,
                                        "SENATEL",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo};
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region Reverso UTN
                    case "REVERSO_PACIFICO_UTN":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "ZG";
                        Parametros = new object[] { NumeroTransaccion,
                                        "UTN",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision};
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    #endregion
                    #region BANCO AMAZONAS
                    case "REVERSO_PACIFICO_BCOAMAZONAS":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "ZG";
                        Parametros = new object[] { NumeroTransaccion,
                                        "BCO AMAZONAS",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo};
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region BANCO DMIRO
                    case "REVERSO_PACIFICO_BCOMIRO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "ZG";
                        Parametros = new object[] { NumeroTransaccion,
                                        "BCO D MIRO",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo};
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region TVCABLEOL
                    case "REVERSO_PACIFICO_TVCABLEOL":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "TP";
                        Parametros = new object[] { NumeroTransaccion,
                                        "TV CABLE",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region AMT (AGENCIA METROPOLITANA DE TRÁNSITO)
                    case "REVERSO_PACIFICO_AMT":
                        //EventLog.WriteEntry("easysoft", "Reverso plantillaXml=" + plantillaXml);
                        //EventLog.WriteEntry("easysoft", "Reverso numeroTransaccion=" + numeroTransaccion + "==>NumeroTransaccionReversar=" + NumeroTransaccionReversar + "==>Motivo=" + Motivo + "==>NumeroTransaccionComision=" + NumeroTransaccionComision);
                        ////obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "AN";
                        Parametros = new object[] { NumeroTransaccion,
                                        "METROPRO TRA",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        //EventLog.WriteEntry("easysoft", "Reverso strResultado=" + strResultado);
                        break;
                    #endregion
                    #region CNTOL
                    case "REVERSO_PACIFICO_CNTOL":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";

                        if (string.IsNullOrEmpty(Servicio))
                            if (string.IsNullOrEmpty(servicio1))
                                Servicio = "AP";
                            else
                                Servicio = servicio1;
                        else
                            if (Servicio == "BC")
                            Servicio = "BA";

                        Parametros = new object[] {
                            NumeroTransaccion,
                            "CNT",
                            Producto,
                            Servicio,
                            "0005",
                            FechaTransaccion,
                            FechaContable,
                            HoraTransaccion,
                            CanalProceso,
                            UserWS,
                            PasswordWS,
                            UsuarioCajero,
                            OficinaCPT,
                            NumeroTransaccionReversar,
                            Motivo,
                            NumeroTransaccionComision
                        };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region EPMAPS
                    case "REVERSO_PACIFICO_EPMAPS":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "AU";
                        Parametros = new object[] {NumeroTransaccion, "EPMAPS", Producto, Servicio,
                            "0005", FechaTransaccion, FechaContable, HoraTransaccion, CanalProceso,
                            UserWS, PasswordWS, UsuarioCajero, OficinaCPT, NumeroTransaccionReversar,
                            Motivo,NumeroTransaccionComision
                        };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region DPRATI
                    case "REVERSO_PACIFICO_DPRATI":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "OC";
                        Parametros = new object[] { NumeroTransaccion,
                                        "DEPRATI",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region EERCS (EMPRESA ELÉCTRICA REGIONAL CENTROSUR C.A.)
                    case "REVERSO_PACIFICO_EERCS":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "LV";
                        Parametros = new object[] {
                            NumeroTransaccion,
                            "EERCS CUENCA",
                            Producto,
                            Servicio,
                            "0005",
                            FechaTransaccion,
                            FechaContable,
                            HoraTransaccion,
                            CanalProceso,
                            UserWS,
                            PasswordWS,
                            UsuarioCajero,
                            OficinaCPT,
                            NumeroTransaccionReversar,
                            Motivo,
                            NumeroTransaccionComision
                        };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region ALIANZA PAIS
                    case "REVERSO_PACIFICO_ALIANZAPAIS":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "OC";
                        Parametros = new object[] { NumeroTransaccion,
                                        empresa,Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region EEQOnline
                    case "REVERSO_PACIFICO_EEQOL":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "LV";

                        Parametros = new object[] { NumeroTransaccion,
                                        "E.E.Q",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region JUDICATURA PERSONAS
                    case "REVERSO_PACIFICO_JUDICATURAPER":
                        //EventLog.WriteEntry("easysoft", "Reverso plantillaXml=" + plantillaXml);
                        //EventLog.WriteEntry("easysoft", "Reverso numeroTransaccion=" + numeroTransaccion + "==>NumeroTransaccionReversar=" + NumeroTransaccionReversar + "==>Motivo=" + Motivo + "==>NumeroTransaccionComision=" + NumeroTransaccionComision);
                        ////obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "PF";
                        Parametros = new object[] { NumeroTransaccion,
                                        "JUDICATURA",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        //EventLog.WriteEntry("easysoft", "Reverso strResultado=" + strResultado);
                        break;
                    #endregion
                    #region JUDICATURA EMPRESAS
                    case "REVERSO_PACIFICO_JUDICATURAEMP":
                        //EventLog.WriteEntry("easysoft", "Reverso plantillaXml=" + plantillaXml);
                        //EventLog.WriteEntry("easysoft", "Reverso numeroTransaccion=" + numeroTransaccion + "==>NumeroTransaccionReversar=" + NumeroTransaccionReversar + "==>Motivo=" + Motivo + "==>NumeroTransaccionComision=" + NumeroTransaccionComision);
                        ////obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "PF";
                        Parametros = new object[] { NumeroTransaccion,
                                        "JUDICATURA",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        //EventLog.WriteEntry("easysoft", "Reverso strResultado=" + strResultado);
                        break;
                    #endregion
                    #region SEGSCURE
                    case "REVERSO_PACIFICO_SEGSUCRE":
                        //EventLog.WriteEntry("easysoft", "Reverso plantillaXml=" + plantillaXml);
                        //EventLog.WriteEntry("easysoft", "Reverso numeroTransaccion=" + numeroTransaccion + "==>NumeroTransaccionReversar=" + NumeroTransaccionReversar + "==>Motivo=" + Motivo + "==>NumeroTransaccionComision=" + NumeroTransaccionComision);
                        ////obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "SO";
                        Parametros = new object[] { NumeroTransaccion,
                                        "SEG SUCRE",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        //EventLog.WriteEntry("easysoft", "Reverso strResultado=" + strResultado);
                        break;
                    #endregion
                    #region GOBIERNO TUNGURAHUA
                    case "REVERSO_PACIFICO_GOBTUNGURAHU":
                        //EventLog.WriteEntry("easysoft", "Reverso plantillaXml=" + plantillaXml);
                        //EventLog.WriteEntry("easysoft", "Reverso numeroTransaccion=" + numeroTransaccion + "==>NumeroTransaccionReversar=" + NumeroTransaccionReversar + "==>Motivo=" + Motivo + "==>NumeroTransaccionComision=" + NumeroTransaccionComision);
                        ////obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "ZF";
                        Parametros = new object[] { NumeroTransaccion,
                                        "GOBTUNGURAHU",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region EPAEP
                    case "REVERSO_PACIFICO_EPAEP":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "ZG";

                        Parametros = new object[] { NumeroTransaccion,
                                        "EPA EP",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region BCE DINERO ELECTRONICO RBCE
                    case "REVERSO_PACIFICO_RBCEDINERO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "DC";
                        Parametros = new object[] { NumeroTransaccion,
                                        "BCE DINERO",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo};
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region BCE DINERO ELECTRONICO DBCE
                    case "REVERSO_PACIFICO_DBCEDINERO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "DD";
                        Parametros = new object[] { NumeroTransaccion,
                                        "BCE DINERO",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region EMELEC
                    case "REVERSO_PACIFICO_EMELEC":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "OC";

                        Parametros = new object[] { NumeroTransaccion,
                                        "EMELEC SOCIO",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo};
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region TUAYUDACUENTA
                    case "REVERSO_PACIFICO_TUAYUDAC":

                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "ZF";
                        Parametros = new object[] { NumeroTransaccion,
                                        "PACIFI AYUDA",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo};
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region INTERAGUAOL
                    case "REVERSO_PACIFICO_INTERAGUAOL":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "A1";
                        Parametros = new object[] { NumeroTransaccion,
                                        "INTERAGUA",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision};
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region CISNERGIA
                    case "REVERSO_PACIFICO_CISNERGIA":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "LV";
                        Parametros = new object[] { NumeroTransaccion,
                                        "CISNERGIA",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region YANBAL
                    case "REVERSO_PACIFICO_YANBAL":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "ZG";
                        Parametros = new object[] { NumeroTransaccion,
                                        "YANBAL",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region MINISTERIO DEL INTERIOR RECAUDACION CON INFORMACIÓN
                    case "REVERSO_PACIFICO_MININTERCD":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "ZG";
                        Parametros = new object[] { NumeroTransaccion,
                                        "MIN GOBIERNO",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region SUPERCIAS
                    case "REVERSO_PACIFICO_SCIAS":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "LV";

                        Parametros = new object[] { NumeroTransaccion,
                                        "SUPERCIAS",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region MUNICIPIO DE GUAYAQUIL
                    case "REVERSO_PACIFICO_MUNIGYE":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "OC";

                        Parametros = new object[] { NumeroTransaccion,
                                        "MUNICIPIOGYE",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region ALEGRO
                    case "REVERSO_PACIFICO_PINALEGRO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "VP";
                        Parametros = new object[] { NumeroTransaccion,
                                        "BROADNET ALE",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region MRLRCM
                    case "REVERSO_PACIFICO_MRLRCM":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "MA"; //Consignacion/Multas

                        Parametros = new object[] {
                                                    NumeroTransaccion,
                                                    "MIN LABORALE",
                                                    Producto,
                                                    Servicio,
                                                    "0005",
                                                    FechaTransaccion,
                                                    FechaContable,
                                                    HoraTransaccion,
                                                    CanalProceso,
                                                    UserWS,
                                                    PasswordWS,
                                                    UsuarioCajero,
                                                    OficinaCPT,
                                                    NumeroTransaccionReversar,
                                                    Motivo,
                                                    NumeroTransaccionComision
                                                  };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region MRL
                    case "REVERSO_PACIFICO_MRLREV":
                        //obtener el xml de plantilla para su remplazo
                        Producto = "4";
                        Servicio = "MB"; //Compra de Pines (Especies Valoradas)

                        Parametros = new object[] {
                                                    NumeroTransaccion,
                                                    "MIN LABORALE",
                                                    Producto,
                                                    Servicio,
                                                    "0005",
                                                    FechaTransaccion,
                                                    FechaContable,
                                                    HoraTransaccion,
                                                    CanalProceso,
                                                    UserWS,
                                                    PasswordWS,
                                                    UsuarioCajero,
                                                    OficinaCPT,
                                                    NumeroTransaccionReversar,
                                                    Motivo,
                                                    NumeroTransaccionComision
                                                  };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region ARCOTEL (AGENCIA DE REGULACIÓN Y CONTROL DE LAS TELECOMUNICACIONES)
                    case "REVERSO_PACIFICO_ARCOTEL":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "ZG";
                        Parametros = new object[] { NumeroTransaccion,
                                        "ARCOTEL",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region ARCSA (AGENCIA DE REGULACIÓN, CONTROL Y VIGILANCIA SANITARIA)
                    case "REVERSO_PACIFICO_ARCSA":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "ZG";
                        Parametros = new object[] { NumeroTransaccion,
                                        "ARCSA",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region COLEGIOSOCP_StaCatalina
                    case "REVERSO_PACIFICO_STACATALINA":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "SC";
                        Parametros = new object[] { NumeroTransaccion,
                                        "COLEGIOS-OCP",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region EMAPA OTAVALO
                    case "REVERSO_PACIFICO_EMAPOTAV":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "AU";
                        Parametros = new object[] { NumeroTransaccion,
                                        "EMAPA OTAVAL",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region CNTVT (VENTA TIEMPO AIRE FIJO O MÓVIL)
                    case "REVERSO_PACIFICO_CNTVTA":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "VT";
                        Parametros = new object[] { NumeroTransaccion,
                                        "CNT",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,Motivo };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region EMOV (EMPRESA DE MOVILIDAD, TRÁNSITO Y TRASPORTE)
                    case "REVERSO_PACIFICO_EMOV":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "OC";
                        Parametros = new object[] { NumeroTransaccion,
                                        "EMOV EP",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region IEPI (INSTITUTO ECUATORINO DE LA PROPIEDAD INTELECTUAL)
                    case "REVERSO_PACIFICO_IEPI":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "ZG";
                        Parametros = new object[] { NumeroTransaccion,
                                        "IEPI",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region RECAUDACION SIN INFORMACIÓN
                    case "REVERSO_PACIFICO_MININTERSD":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "ZF";
                        Parametros = new object[] { NumeroTransaccion,
                                        "MIN GOBIERNO",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    case "REVERSO_PACIFICO_MUNIOTAVALO":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "OC";
                        Parametros = new object[] { NumeroTransaccion,
                                        "MUNICIPIOOTA",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_SRIAJUSTES":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "AI";
                        Parametros = new object[] { NumeroTransaccion,
                                        "SRI",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_ATMOL":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "AN";

                        Parametros = new object[] { NumeroTransaccion,
                            "ANT",Producto,Servicio,"0005",FechaTransaccion,
                            FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                            UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                            Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_IESSOL":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "IB";
                        Parametros = new object[] { NumeroTransaccion,
                            "IESS QUITO",Producto,Servicio,"0005",FechaTransaccion,
                            FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                            UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                            Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_CTEOL":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "CT";
                        Parametros = new object[] { NumeroTransaccion,
                                        "CTG",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSOPACIFICO_COMPELEC":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "CT";
                        Parametros = new object[] { NumeroTransaccion,
                                        "CTG",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_GOBMANABI":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "ZF";
                        Parametros = new object[] { NumeroTransaccion,
                                        "GOBMANABI",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_MUNIRIO":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "MU";
                        Parametros = new object[] { NumeroTransaccion,
                                        "MUNICIPIORIO",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_AMAGUAOL":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "ZG";

                        Parametros = new object[] { NumeroTransaccion,
                                        "AMAGUA",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_ANTOCITAC":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "AN";
                        Parametros = new object[] { NumeroTransaccion,
                                        "ANT",Producto,Servicio,"0005",FechaTransaccion,FechaContable,
                                        HoraTransaccion,CanalProceso,UserWS,PasswordWS,UsuarioCajero,OficinaCPT,
                                        NumeroTransaccionReversar,Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_ANTOCONV":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "AT";
                        Parametros = new object[] { NumeroTransaccion,
                                        "ANT",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_ANTOSOLIC":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "AN";
                        Parametros = new object[] { NumeroTransaccion,
                                        "ANT",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    case "REVERSO_PACIFICO_MOVIDELNOROL":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "ZG";
                        Parametros = new object[] { NumeroTransaccion,
                                        "MOVIDELNOR",Producto,Servicio,"0005",FechaTransaccion,FechaContable,HoraTransaccion,
                                        CanalProceso,UserWS,PasswordWS,UsuarioCajero,OficinaCPT,
                                        NumeroTransaccionReversar,Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #region PAGOS CNE
                    case "REVERSO_PACIFICO_CNE":
                        Producto = "3";
                        Servicio = "OP";
                        Parametros = new object[] { NumeroTransaccion,
                                        "CNE",Producto,Servicio,"0005",FechaTransaccion,FechaContable,HoraTransaccion,
                                        CanalProceso,UserWS,PasswordWS,UsuarioCajero,OficinaCPT,
                                        NumeroTransaccionReversar,Motivo };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region PAGOS AMT
                    case "REVERSO_PACIFICO_AMTCOMPROBANTES":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "ZF";
                        Parametros = new object[] { NumeroTransaccion,
                                        "METROPRO TRA",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,
                                        NumeroTransaccionReversar,Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    case "REVERSO_PACIFICO_AMTRUBROS":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "OC";
                        Parametros = new object[] { NumeroTransaccion,
                                        "METROPRO TRA",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,
                                        NumeroTransaccionReversar,Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    default:
                        break;
                }
            }
            catch (Exception e)
            {
                EventLog.WriteEntry("EasySwitch", "EasySoft.EasySwitch.Pacifico_Procesos.TransformarTramaReverso:Error:" + e.Message, EventLogEntryType.Error);
            }

            return strResultado;
        }

        private static string TransformarTramaReversov2(DataSet dsEntrada, string strXmlPlantilla, string strTransaccion)
        {
            string NumeroTransaccion = string.Empty;
            string Producto = string.Empty;
            string Servicio = string.Empty;
            string FechaTransaccion = string.Empty;
            string FechaContable = string.Empty;
            string HoraTransaccion = string.Empty;
            string CanalProceso = string.Empty;
            string UserWS = string.Empty;
            string PasswordWS = string.Empty;
            string UsuarioCajero = string.Empty;
            string OficinaCPT = string.Empty;
            string NumeroTransaccionReversar = string.Empty;
            string Motivo = "002";
            string NumeroTransaccionComision = string.Empty;
            string TipoCodigo = string.Empty;
            string strResultado = string.Empty;
            string servicio1 = string.Empty;
            string empresa = string.Empty;
            Object[] Parametros;

            try
            {
                foreach (DataRow dr in dsEntrada.Tables["Cabecera"].Rows)
                {
                    NumeroTransaccion = dr["NumeroTransaccion"].ToString();
                    FechaTransaccion = dr["FechaTransaccion"].ToString();
                    FechaContable = dr["FechaContable"].ToString();
                    HoraTransaccion = dr["HoraTransaccion"].ToString();
                    CanalProceso = dr["CanalProceso"].ToString();
                    UserWS = dr["UserWS"].ToString();
                    PasswordWS = dr["PasswordWS"].ToString();
                    UsuarioCajero = dr["UsuarioCajero"].ToString();
                    OficinaCPT = dr["OficinaCPT"].ToString();
                    Motivo = "002";
                    NumeroTransaccionReversar = dr["NumeroTransaccion"].ToString();
                    empresa = dr["Empresa"].ToString();
                }
                foreach (DataRow dr in dsEntrada.Tables["Detalle"].Rows)
                {
                    if (dsEntrada.Tables["Detalle"].Columns.Contains("NumeroTransaccionComision"))
                        NumeroTransaccionComision = dr["NumeroTransaccionComision"].ToString();
                    else
                        NumeroTransaccionComision = string.Empty;
                }

                switch (strTransaccion)
                {

                    #region CNT
                    case "REVERSO_PACIFICO_CNT":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "AP";
                        Parametros = new object[] { NumeroTransaccion,
                                        "EMETEL",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    #endregion
                    #region EEQ
                    case "REVERSO_PACIFICO_EEQ":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "LU";
                        Parametros = new object[] { NumeroTransaccion,
                                        "E.E.Q",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region EMAAP
                    case "REVERSO_PACIFICO_EMAAP":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "AU";

                        Parametros = new object[] { NumeroTransaccion,
                                        "EMAAP QUITO",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    #endregion
                    #region GLOBAL
                    case "REVERSO_PACIFICO_GLOBAL":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "3";
                        Servicio = "GV";
                        Parametros = new object[] { NumeroTransaccion,
                                        "GLOBALENVIOS",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region BONO
                    case "REVERSO_PACIFICO_BONO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "SP";
                        Parametros = new object[] { NumeroTransaccion,
                                        "PACIFICO EC",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region REGISTRO CIVIL
                    case "REVERSO_PACIFICO_RCIVIL":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "ZF";
                        Parametros = new object[] { NumeroTransaccion,
                                        "REG CIVIL",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar
                                        };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region EEASA
                    case "REVERSO_PACIFICO_EEASA":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "LU";

                        Parametros = new object[] { NumeroTransaccion,
                                        "EEASA",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region EMAPA AMBATO
                    case "REVERSO_PACIFICO_EMAPAA":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "A1";

                        Parametros = new object[] { NumeroTransaccion,
                                        "EMAPA AMBATO",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region EMAPA IBARRA
                    case "REVERSO_PACIFICO_EMAPAI":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "A1";

                        Parametros = new object[] { NumeroTransaccion,
                                        "EMAPA09",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region EMELNORTE
                    case "REVERSO_PACIFICO_ENORTE":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "LU";

                        Parametros = new object[] { NumeroTransaccion,
                                        "EMELNORTE",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region MATERCARD
                    case "REVERSO_PACIFICO_MASTER":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "PT";
                        Parametros = new object[] { NumeroTransaccion,
                                        "MASTERCARD",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region MOVISTAR
                    case "REVERSO_PACIFICO_MOVI":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "VT";
                        Parametros = new object[] { NumeroTransaccion,
                                        "BROADNET",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    #endregion
                    #region VISA CASH
                    case "REVERSO_PACIFICO_VISAC":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "VH";
                        Parametros = new object[] { NumeroTransaccion,
                                        "VISA CASH",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region MUNICIPIO AMBATO
                    case "REVERSO_PACIFICO_MUNIAMBATO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "OC";

                        Parametros = new object[] { NumeroTransaccion,
                                        "MUNICIPIOAMB",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region MUNICIPIO IBARRA
                    case "REVERSO_PACIFICO_MUNIIBARRA":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "OC";

                        Parametros = new object[] { NumeroTransaccion,
                                        "MUNICIPIOIBA",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region CTG
                    case "REVERSO_PACIFICO_CTG":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "Z1";

                        Parametros = new object[] { NumeroTransaccion,
                                        "CTG",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region CNTTTSV
                    case "REVERSO_PACIFICO_CNTTTSV":
                        //obtener el xml de plantilla para su remplazo                        
                        Producto = "4";
                        Servicio = "OC";

                        Parametros = new object[] { NumeroTransaccion,
                                        "CNTTTSV",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region SRIMAT
                    case "REVERSO_PACIFICO_SRIMAT":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "MS";

                        Parametros = new object[] { NumeroTransaccion,
                                        "SRI",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region SRIRISE
                    case "REVERSO_PACIFICO_SRIRISE":
                        //obtener el xml de plantilla para su remplazo                        
                        Producto = "4";
                        Servicio = "RI";
                        Parametros = new object[] { NumeroTransaccion,
                                        "SRI",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region SRITDOM
                    case "REVERSO_PACIFICO_SRITDOM":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "T6";

                        Parametros = new object[] { NumeroTransaccion,
                                        "SRI",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region CEP
                    case "REVERSO_PACIFICO_SRICEP":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "CE";

                        Parametros = new object[] { NumeroTransaccion,
                                        "SRI",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region AVON
                    case "REVERSO_PACIFICO_AVON":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "OC";
                        Parametros = new object[] { NumeroTransaccion,
                                        "AVON",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region CONECELL
                    case "REVERSO_PACIFICO_CONECELL":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "O2";
                        Parametros = new object[] { NumeroTransaccion,
                                        "CONECELL",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region CREDIMETRICA
                    case "REVERSO_PACIFICO_CREDIMETRICA":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "OC";
                        Parametros = new object[] { NumeroTransaccion,
                                        "CREDIRECTO",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region CREDITRUCK
                    case "REVERSO_PACIFICO_CREDITRUCK":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "OC";
                        Parametros = new object[] { NumeroTransaccion,
                                        "CREDITRUCK",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region EERSA
                    case "REVERSO_PACIFICO_EERSA":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "LU";
                        Parametros = new object[] { NumeroTransaccion,
                                        "EERSA",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region LEONISA
                    case "REVERSO_PACIFICO_LEONISA":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "OC";
                        Parametros = new object[] { NumeroTransaccion,
                                        "LEONISA",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region OTECEL
                    case "REVERSO_PACIFICO_OTECEL":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "BA";
                        Parametros = new object[] { NumeroTransaccion,
                                        "OTECEL",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region AGUAPEN
                    case "REVERSO_PACIFICO_AGUAPEN":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "AU";

                        Parametros = new object[] { NumeroTransaccion,
                                        "AGUAPEN",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region AMAGUA
                    case "REVERSO_PACIFICO_AMAGUA":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "AU";

                        Parametros = new object[] { NumeroTransaccion,
                                        "AMAGUA",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region EMAPAP
                    case "REVERSO_PACIFICO_EMAPAP":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "AU";

                        Parametros = new object[] { NumeroTransaccion,
                                        "PORTOAGUAS",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region TRIPLEORO
                    case "REVERSO_PACIFICO_TRIPLEORO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "AU";

                        Parametros = new object[] { NumeroTransaccion,
                                        "TRIPLEORO",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region CNEL GUAYAS-LOS RIOS
                    case "REVERSO_PACIFICO_CNELGYELR":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "LV";

                        Parametros = new object[] { NumeroTransaccion,
                                        "CNEL",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region TIEMPO AIRE CLARO
                    case "REVERSO_PACIFICO_CLARO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "AH";
                        Parametros = new object[] { NumeroTransaccion,
                                        "CONECELL",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region MUNICIPIO DE QUITO
                    case "REVERSO_PACIFICO_MUNIQUITO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "ZG";

                        Parametros = new object[] { NumeroTransaccion,
                                        "MUNICIPIOQUI",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_MUNIQUITOEL":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "MU";

                        Parametros = new object[] { NumeroTransaccion,
                                        "MUNICIPIOQUI",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region CNEL MILAGRO
                    case "REVERSO_PACIFICO_CNELMILA":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "LU";

                        Parametros = new object[] { NumeroTransaccion,
                                        "CNEL MILAGRO",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region INTERAGUA
                    case "REVERSO_PACIFICO_INTERAGUA":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "AU";

                        Parametros = new object[] { NumeroTransaccion,
                                        "INTERAGUA",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region TVCABLE GYE
                    case "REVERSO_PACIFICO_TVCABLE":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "TO";
                        Parametros = new object[] { NumeroTransaccion,
                                        "TV CABLE",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region TVCABLE UIO
                    case "REVERSO_PACIFICO_TVCABLEUIO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "TO";
                        Parametros = new object[] { NumeroTransaccion,
                                        "TVCABLE UIO",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region UNIVISA
                    case "REVERSO_PACIFICO_UNIVISA":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "TP";
                        Parametros = new object[] { NumeroTransaccion,
                                        "UNIVISA",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region ELECTRICA DE GYE
                    case "REVERSO_PACIFICO_ELEGYE":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "LV";

                        Parametros = new object[] { NumeroTransaccion,
                                        "EEE",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region CAE
                    case "REVERSO_PACIFICO_CAE":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "DU";
                        Parametros = new object[] { NumeroTransaccion,
                                        "CAE",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region CNEL EL ORO
                    case "REVERSO_PACIFICO_CNELORO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "LU";

                        Parametros = new object[] { NumeroTransaccion,
                                        "CNEL EL ORO",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion

                    #region CFN

                    case "REVERSO_PACIFICO_CFN":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "OC";
                        Parametros = new object[] { NumeroTransaccion,
                                        "CFN",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region COORP FATIMA

                    case "REVERSO_PACIFICO_COORPFATIMA":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "OC";
                        Parametros = new object[] { NumeroTransaccion,
                                        "CORP.FATIMA",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region EMAPA RIOBAMB

                    case "REVERSO_PACIFICO_EMAPARIO":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "AU";
                        Parametros = new object[] { NumeroTransaccion,
                                        "EMAPA RIOBAM",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region ETAPA

                    case "REVERSO_PACIFICO_ETAPA":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "OC";
                        Parametros = new object[] { NumeroTransaccion,
                                        "ETAPA",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region IFTH

                    case "REVERSO_PACIFICO_IFTH":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "OC";
                        Parametros = new object[] { NumeroTransaccion,
                                        "IFTH",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_IECEOL":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "CA";
                        Parametros = new object[] { NumeroTransaccion,
                            "BPE ESTUDIOS",Producto,Servicio,"0005",FechaTransaccion,
                            FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                            UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,Motivo
                        };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region MUNICIPIO DE MILAGRO

                    case "REVERSO_PACIFICO_MUNIMILAGRO":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "OC";
                        Parametros = new object[] { NumeroTransaccion,
                                        "MUNICIPIOMIL",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region JUDICIAL IBARRA

                    case "REVERSO_PACIFICO_JUDIBARRA":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "OC";
                        Parametros = new object[] { NumeroTransaccion,
                                        "JUD IBARRA",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region BSC
                    case "REVERSO_PACIFICO_BSC":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Parametros = new object[] { NumeroTransaccion,
                                        "BARCELONA",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion


                    #region UTPL
                    case "REVERSO_PACIFICO_UTPL":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "SC";
                        Parametros = new object[] { NumeroTransaccion,
                                        "UTPL",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region UNACH
                    case "REVERSO_PACIFICO_UNACH":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Parametros = new object[] { NumeroTransaccion,
                                        "UNACH",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region ESPOCH

                    case "REVERSO_PACIFICO_ESPOCH":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Parametros = new object[] { NumeroTransaccion,
                                        "ESPOCH",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region UIVERSIDAD MANABI

                    case "REVERSO_PACIFICO_UMANABI":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Parametros = new object[] { NumeroTransaccion,
                                        "U MANABI",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region ANT
                    case "REVERSO_PACIFICO_ANT":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "OC";
                        Parametros = new object[] { NumeroTransaccion,
                                        "ANT",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;


                    case "REVERSO_PACIFICO_ANTC":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "OC";
                        Parametros = new object[] { NumeroTransaccion,
                                        "ANT",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    case "REVERSO_PACIFICO_ANTT":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "OC";
                        Parametros = new object[] { NumeroTransaccion,
                                        "ANT",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_ANTCO":
                    case "REVERSO_PACIFICO_ANTO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "AN";
                        //si es convenio de pago el servicio es AT
                        if (strTransaccion == "REVERSO_PACIFICO_ANTCO")
                            Servicio = "AT";

                        Parametros = new object[] { NumeroTransaccion,
                                        "ANT",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region PPSBONO
                    case "REVERSO_PACIFICO_PPSBONO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "SP";

                        Parametros = new object[] { NumeroTransaccion,
                                        "PPSBONO",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region PRONACA
                    case "REVERSO_PACIFICO_PRONACA":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "OC";
                        Parametros = new object[] { NumeroTransaccion,
                                        "PRONACA",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    #endregion
                    #region AGROCALIDAD
                    case "REVERSO_PACIFICO_AGROCALIDAD":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "OC";
                        Parametros = new object[] { NumeroTransaccion,
                                        "AGROCALIDAD",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region SENATEL
                    case "REVERSO_PACIFICO_SENATEL":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "OC";
                        Parametros = new object[] { NumeroTransaccion,
                                        "SENATEL",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo};
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region Reverso UTN
                    case "REVERSO_PACIFICO_UTN":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "ZG";
                        Parametros = new object[] { NumeroTransaccion,
                                        "UTN",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision};
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    #endregion
                    #region BANCO AMAZONAS
                    case "REVERSO_PACIFICO_BCOAMAZONAS":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "ZG";
                        Parametros = new object[] { NumeroTransaccion,
                                        "BCO AMAZONAS",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo};
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region BANCO DMIRO
                    case "REVERSO_PACIFICO_BCOMIRO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "ZG";
                        Parametros = new object[] { NumeroTransaccion,
                                        "BCO D MIRO",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo};
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region TVCABLEOL
                    case "REVERSO_PACIFICO_TVCABLEOL":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "TP";
                        Parametros = new object[] { NumeroTransaccion,
                                        "TV CABLE",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion

                    case "REVERSO_PACIFICO_AMT":
                        //EventLog.WriteEntry("easysoft", "Reverso plantillaXml=" + plantillaXml);
                        //EventLog.WriteEntry("easysoft", "Reverso numeroTransaccion=" + numeroTransaccion + "==>NumeroTransaccionReversar=" + NumeroTransaccionReversar + "==>Motivo=" + Motivo + "==>NumeroTransaccionComision=" + NumeroTransaccionComision);
                        ////obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "AN";
                        Parametros = new object[] { NumeroTransaccion,
                                        "METROPRO TRA",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        //EventLog.WriteEntry("easysoft", "Reverso strResultado=" + strResultado);
                        break;
                    case "REVERSO_PACIFICO_CNTOL":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";

                        if (string.IsNullOrEmpty(Servicio))
                            if (string.IsNullOrEmpty(servicio1))
                                Servicio = "AP";
                            else
                                Servicio = servicio1;
                        else
                            if (Servicio == "BC")
                            Servicio = "BA";

                        Parametros = new object[] {
                            NumeroTransaccion,
                            "CNT",
                            Producto,
                            Servicio,
                            "0005",
                            FechaTransaccion,
                            FechaContable,
                            HoraTransaccion,
                            CanalProceso,
                            UserWS,
                            PasswordWS,
                            UsuarioCajero,
                            OficinaCPT,
                            NumeroTransaccionReversar,
                            Motivo,
                            NumeroTransaccionComision
                        };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_EPMAPS":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "AU";
                        Parametros = new object[] {NumeroTransaccion, "EPMAPS", Producto, Servicio,
                            "0005", FechaTransaccion, FechaContable, HoraTransaccion, CanalProceso,
                            UserWS, PasswordWS, UsuarioCajero, OficinaCPT, NumeroTransaccionReversar,
                            Motivo,NumeroTransaccionComision
                        };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_DPRATI":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "OC";
                        Parametros = new object[] { NumeroTransaccion,
                                        "DEPRATI",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_EERCS":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "LV";
                        Parametros = new object[] {
                            NumeroTransaccion,
                            "EERCS CUENCA",
                            Producto,
                            Servicio,
                            "0005",
                            FechaTransaccion,
                            FechaContable,
                            HoraTransaccion,
                            CanalProceso,
                            UserWS,
                            PasswordWS,
                            UsuarioCajero,
                            OficinaCPT,
                            NumeroTransaccionReversar,
                            Motivo,
                            NumeroTransaccionComision
                        };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_ALIANZAPAIS":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "OC";
                        Parametros = new object[] { NumeroTransaccion,
                                        empresa,Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_EEQOL":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "LV";

                        Parametros = new object[] { NumeroTransaccion,
                                        "E.E.Q",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_JUDICATURAPER":
                        //EventLog.WriteEntry("easysoft", "Reverso plantillaXml=" + plantillaXml);
                        //EventLog.WriteEntry("easysoft", "Reverso numeroTransaccion=" + numeroTransaccion + "==>NumeroTransaccionReversar=" + NumeroTransaccionReversar + "==>Motivo=" + Motivo + "==>NumeroTransaccionComision=" + NumeroTransaccionComision);
                        ////obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "PF";
                        Parametros = new object[] { NumeroTransaccion,
                                        "JUDICATURA",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        //EventLog.WriteEntry("easysoft", "Reverso strResultado=" + strResultado);
                        break;
                    case "REVERSO_PACIFICO_JUDICATURAEMP":
                        //EventLog.WriteEntry("easysoft", "Reverso plantillaXml=" + plantillaXml);
                        //EventLog.WriteEntry("easysoft", "Reverso numeroTransaccion=" + numeroTransaccion + "==>NumeroTransaccionReversar=" + NumeroTransaccionReversar + "==>Motivo=" + Motivo + "==>NumeroTransaccionComision=" + NumeroTransaccionComision);
                        ////obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "PF";
                        Parametros = new object[] { NumeroTransaccion,
                                        "JUDICATURA",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        //EventLog.WriteEntry("easysoft", "Reverso strResultado=" + strResultado);
                        break;

                    case "REVERSO_PACIFICO_SEGSUCRE":
                        //EventLog.WriteEntry("easysoft", "Reverso plantillaXml=" + plantillaXml);
                        //EventLog.WriteEntry("easysoft", "Reverso numeroTransaccion=" + numeroTransaccion + "==>NumeroTransaccionReversar=" + NumeroTransaccionReversar + "==>Motivo=" + Motivo + "==>NumeroTransaccionComision=" + NumeroTransaccionComision);
                        ////obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "SO";
                        Parametros = new object[] { NumeroTransaccion,
                                        "SEG SUCRE",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        //EventLog.WriteEntry("easysoft", "Reverso strResultado=" + strResultado);
                        break;

                    case "REVERSO_PACIFICO_GOBTUNGURAHU":
                        //EventLog.WriteEntry("easysoft", "Reverso plantillaXml=" + plantillaXml);
                        //EventLog.WriteEntry("easysoft", "Reverso numeroTransaccion=" + numeroTransaccion + "==>NumeroTransaccionReversar=" + NumeroTransaccionReversar + "==>Motivo=" + Motivo + "==>NumeroTransaccionComision=" + NumeroTransaccionComision);
                        ////obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "ZF";
                        Parametros = new object[] { NumeroTransaccion,
                                        "GOBTUNGURAHU",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_EPAEP":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "ZG";

                        Parametros = new object[] { NumeroTransaccion,
                                        "EPA EP",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_RBCEDINERO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "DC";
                        Parametros = new object[] { NumeroTransaccion,
                                        "BCE DINERO",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo};
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_DBCEDINERO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "DD";
                        Parametros = new object[] { NumeroTransaccion,
                                        "BCE DINERO",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_EMELEC":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "OC";

                        Parametros = new object[] { NumeroTransaccion,
                                        "EMELEC SOCIO",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo};
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_TUAYUDAC":

                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "ZF";
                        Parametros = new object[] { NumeroTransaccion,
                                        "PACIFI AYUDA",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo};
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_INTERAGUAOL":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "A1";
                        Parametros = new object[] { NumeroTransaccion,
                                        "INTERAGUA",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision};
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_CISNERGIA":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "LV";
                        Parametros = new object[] { NumeroTransaccion,
                                        "CISNERGIA",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_YANBAL":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "ZG";
                        Parametros = new object[] { NumeroTransaccion,
                                        "YANBAL",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_MININTERCD":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "ZG";
                        Parametros = new object[] { NumeroTransaccion,
                                        "MIN GOBIERNO",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_SCIAS":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "LV";

                        Parametros = new object[] { NumeroTransaccion,
                                        "SUPERCIAS",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_MUNIGYE":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "OC";

                        Parametros = new object[] { NumeroTransaccion,
                                        "MUNICIPIOGYE",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_PINALEGRO":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "VP";
                        Parametros = new object[] { NumeroTransaccion,
                                        "BROADNET ALE",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_MRLRCM":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "MA"; //Consignacion/Multas

                        Parametros = new object[] {
                                                    NumeroTransaccion,
                                                    "MIN LABORALE",
                                                    Producto,
                                                    Servicio,
                                                    "0005",
                                                    FechaTransaccion,
                                                    FechaContable,
                                                    HoraTransaccion,
                                                    CanalProceso,
                                                    UserWS,
                                                    PasswordWS,
                                                    UsuarioCajero,
                                                    OficinaCPT,
                                                    NumeroTransaccionReversar,
                                                    Motivo,
                                                    NumeroTransaccionComision
                                                  };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_MRLREV":
                        //obtener el xml de plantilla para su remplazo
                        Producto = "4";
                        Servicio = "MB"; //Compra de Pines (Especies Valoradas)

                        Parametros = new object[] {
                                                    NumeroTransaccion,
                                                    "MIN LABORALE",
                                                    Producto,
                                                    Servicio,
                                                    "0005",
                                                    FechaTransaccion,
                                                    FechaContable,
                                                    HoraTransaccion,
                                                    CanalProceso,
                                                    UserWS,
                                                    PasswordWS,
                                                    UsuarioCajero,
                                                    OficinaCPT,
                                                    NumeroTransaccionReversar,
                                                    Motivo,
                                                    NumeroTransaccionComision
                                                  };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_ARCOTEL":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "ZG";
                        Parametros = new object[] { NumeroTransaccion,
                                        "ARCOTEL",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_ARCSA":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "ZG";
                        Parametros = new object[] { NumeroTransaccion,
                                        "ARCSA",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_STACATALINA":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "SC";
                        Parametros = new object[] { NumeroTransaccion,
                                        "COLEGIOS-OCP",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_EMAPOTAV":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "AU";
                        Parametros = new object[] { NumeroTransaccion,
                                        "EMAPA OTAVAL",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_CNTVTA":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "VT";
                        Parametros = new object[] { NumeroTransaccion,
                                        "CNT",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,Motivo };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_EMOV":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "OC";
                        Parametros = new object[] { NumeroTransaccion,
                                        "EMOV EP",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_IEPI":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "ZG";
                        Parametros = new object[] { NumeroTransaccion,
                                        "IEPI",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_MININTERSD":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "ZF";
                        Parametros = new object[] { NumeroTransaccion,
                                        "MIN GOBIERNO",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_MUNIOTAVALO":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "OC";
                        Parametros = new object[] { NumeroTransaccion,
                                        "MUNICIPIOOTA",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_SRIAJUSTES":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "AI";
                        Parametros = new object[] { NumeroTransaccion,
                                        "SRI",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_ATMOL":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "AN";

                        Parametros = new object[] { NumeroTransaccion,
                            "ANT",Producto,Servicio,"0005",FechaTransaccion,
                            FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                            UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                            Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_IESSOL":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "IB";
                        Parametros = new object[] { NumeroTransaccion,
                            "IESS QUITO",Producto,Servicio,"0005",FechaTransaccion,
                            FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                            UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                            Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_CTEOL":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "CT";
                        Parametros = new object[] { NumeroTransaccion,
                                        "CTG",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSOPACIFICO_COMPELEC":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "CT";
                        Parametros = new object[] { NumeroTransaccion,
                                        "CTG",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_GOBMANABI":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "ZF";
                        Parametros = new object[] { NumeroTransaccion,
                                        "GOBMANABI",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_MUNIRIO":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "MU";
                        Parametros = new object[] { NumeroTransaccion,
                                        "MUNICIPIORIO",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_AMAGUAOL":
                        //obtener el xml de plantilla para su remplazo
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "ZG";

                        Parametros = new object[] { NumeroTransaccion,
                                        "AMAGUA",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_ANTOCITAC":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "AN";
                        Parametros = new object[] { NumeroTransaccion,
                                        "ANT",Producto,Servicio,"0005",FechaTransaccion,FechaContable,
                                        HoraTransaccion,CanalProceso,UserWS,PasswordWS,UsuarioCajero,OficinaCPT,
                                        NumeroTransaccionReversar,Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_ANTOCONV":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "AT";
                        Parametros = new object[] { NumeroTransaccion,
                                        "ANT",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;

                    case "REVERSO_PACIFICO_ANTOSOLIC":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "AN";
                        Parametros = new object[] { NumeroTransaccion,
                                        "ANT",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,NumeroTransaccionReversar,
                                        Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    case "REVERSO_PACIFICO_MOVIDELNOROL":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "ZG";
                        Parametros = new object[] { NumeroTransaccion,
                                        "MOVIDELNOR",Producto,Servicio,"0005",FechaTransaccion,FechaContable,HoraTransaccion,
                                        CanalProceso,UserWS,PasswordWS,UsuarioCajero,OficinaCPT,
                                        NumeroTransaccionReversar,Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #region PAGOS CNE
                    case "REVERSO_PACIFICO_CNE":
                        Producto = "3";
                        Servicio = "OP";
                        Parametros = new object[] { NumeroTransaccion,
                                        "CNE",Producto,Servicio,"0005",FechaTransaccion,FechaContable,HoraTransaccion,
                                        CanalProceso,UserWS,PasswordWS,UsuarioCajero,OficinaCPT,
                                        NumeroTransaccionReversar,Motivo };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    #region PAGOS AMT
                    case "REVERSO_PACIFICO_AMTCOMPROBANTES":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "ZF";
                        Parametros = new object[] { NumeroTransaccion,
                                        "METROPRO TRA",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,
                                        NumeroTransaccionReversar,Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    case "REVERSO_PACIFICO_AMTRUBROS":
                        TipoCodigo = "P";
                        Producto = "4";
                        Servicio = "OC";
                        Parametros = new object[] { NumeroTransaccion,
                                        "METROPRO TRA",Producto,Servicio,"0005",FechaTransaccion,
                                        FechaContable,HoraTransaccion,CanalProceso,UserWS,PasswordWS,
                                        UsuarioCajero,OficinaCPT,
                                        NumeroTransaccionReversar,Motivo,NumeroTransaccionComision };
                        strResultado = String.Format(strXmlPlantilla, Parametros);
                        break;
                    #endregion
                    default:
                        break;
                }
            }
            catch (Exception e)
            {
                EventLog.WriteEntry("EasySwitch", "EasySoft.EasySwitch.Pacifico_Procesos.TransformarTramaReverso:Error:" + e.Message, EventLogEntryType.Error);
            }

            return strResultado;
        }

        private void GrabarAppLog(string strTexto, string strTipoLog)
        {

            EventLogEntryType eventType = EventLogEntryType.Information;

            switch (strTipoLog)
            {
                case "E": // Error
                    eventType = EventLogEntryType.Error;
                    break;
                case "I": // Informacion
                    eventType = EventLogEntryType.Information;
                    break;
                case "A": // Advertencia
                    eventType = EventLogEntryType.Warning;
                    break;
                case "X": // Exito
                    eventType = EventLogEntryType.SuccessAudit;
                    break;
            }

            EventLog.WriteEntry("EasySwitch", strTexto, eventType);
        }

        private void GenerarReversoAutomatico(string strTransaccion, string strOperador, DataSet dsEntrada, bool ConTrama, string strIdTransaccion, string strTrama, string strIdOrigen)
        {
            try
            {
                if (strTransaccion.Contains("REGISTRO"))//SOLO PARA LOS CASOS DE REGISTROS DE COBRANZAS O PAGOS
                {
                    //OBTENER LA PLANTILLA DE REVERSO DE UNA DETERMINADA TRANSACCION
                    DataSet dsCatlogo = new DataSet();


                    string[] lstTransaccion = strTransaccion.Split('_');
                    strTransaccion = "REVERSO_" + lstTransaccion[1].ToString() + "_" + lstTransaccion[2].ToString();
                    dsCatlogo = adm.ObtenerTransaccion(strTransaccion, strOperador);
                    //TRANSFORMAR LA TRAMA DE REGISTRO CON LA PLANTILLA PARA REALIZAR EL REVERSO                                
                    if (ConTrama)
                        dsEntrada = adm.getDataSetFromString(strTrama);
                    string strTraceAudit = "ET|";

                    if (lstTransaccion.Length > 2)
                        strTraceAudit += lstTransaccion[1].ToString() + "_" + lstTransaccion[2].ToString() + "|" + "REVERSO";
                    else
                        strTraceAudit += lstTransaccion[0].ToString() + "|" + lstTransaccion[0].ToString();


                    string strXmlParametros = TransformarTramaReverso(dsEntrada, dsCatlogo.Tables["Switch_Transaccion"].Rows[0]["Valor"].ToString(), strTransaccion);


                    strTransaccion = "REVERSO_AUTO";// + lstTransaccion[1].ToString() + "_" + lstTransaccion[2].ToString();
                    long lngId_log = adm.IngresarLog_Tran("7", strOperador, "ENVIO", dsCatlogo.Tables["Switch_Transaccion"].Rows[0]["Id_Transaccion"].ToString(), strTransaccion, strXmlParametros, strTraceAudit, strIdOrigen, "PENDIENTE");
                }
            }
            catch (Exception e)
            {
                EventLog.WriteEntry("EasySwitch", "GenerarReversoAutomatico:Error:" + e.Message);
            }
        }

        private static void GenerarReversoAutomaticov2(string strTransaccion, string strOperador, DataSet dsEntrada, bool ConTrama, string strIdTransaccion, string strTrama, string strIdOrigen)
        {

            LogicaNegocioPacifico adm2 = new LogicaNegocioPacifico();
            try
            {
                if (strTransaccion.Contains("REGISTRO"))//SOLO PARA LOS CASOS DE REGISTROS DE COBRANZAS O PAGOS
                {
                    //OBTENER LA PLANTILLA DE REVERSO DE UNA DETERMINADA TRANSACCION
                    DataSet dsCatlogo = new DataSet();


                    string[] lstTransaccion = strTransaccion.Split('_');
                    strTransaccion = "REVERSO_" + lstTransaccion[1].ToString() + "_" + lstTransaccion[2].ToString();
                    dsCatlogo = adm2.ObtenerTransaccion(strTransaccion, strOperador);
                    //TRANSFORMAR LA TRAMA DE REGISTRO CON LA PLANTILLA PARA REALIZAR EL REVERSO                                
                    if (ConTrama)
                        dsEntrada = adm2.getDataSetFromString(strTrama);
                    string strTraceAudit = "ET|";

                    if (lstTransaccion.Length > 2)
                        strTraceAudit += lstTransaccion[1].ToString() + "_" + lstTransaccion[2].ToString() + "|" + "REVERSO";
                    else
                        strTraceAudit += lstTransaccion[0].ToString() + "|" + lstTransaccion[0].ToString();


                    string strXmlParametros = TransformarTramaReversov2(dsEntrada, dsCatlogo.Tables["Switch_Transaccion"].Rows[0]["Valor"].ToString(), strTransaccion);


                    strTransaccion = "REVERSO_AUTO";// + lstTransaccion[1].ToString() + "_" + lstTransaccion[2].ToString();
                    long lngId_log = adm2.IngresarLog_Tran("7", strOperador, "ENVIO", dsCatlogo.Tables["Switch_Transaccion"].Rows[0]["Id_Transaccion"].ToString(), strTransaccion, strXmlParametros, strTraceAudit, strIdOrigen, "PENDIENTE");
                }
            }
            catch (Exception e)
            {
                EventLog.WriteEntry("EasySwitch", "GenerarReversoAutomatico:Error:" + e.Message);
            }
        }


        // -----------------------------------------------------------------------------
        /// <summary>
        /// Revoca ítems pendientes que han sobrepasado el límite de tiempo establecido en EASYCASH.INI
        /// en la entrada APP_EASYSWITCHPLUS=.....|MINUTOS_ITEMS_REVOCAR
        /// </summary>
        /// <returns>0001|PROCESO OK o diferente en error</returns>
        public string RevocarItemPendientes()
        {
            using (LogicaNegocioPacifico admProcesosBatch = new LogicaNegocioPacifico())
            {
                return admProcesosBatch.RevocarItemsPendientes();
            }
        }

        #region IDisposable Support
        private bool disposedValue = false; // To detect redundant calls

        protected virtual void Dispose(bool disposing)
        {
            if (!disposedValue)
            {
                if (disposing)
                {
                    // TODO: dispose managed state (managed objects).
                }

                // TODO: free unmanaged resources (unmanaged objects) and override a finalizer below.
                // TODO: set large fields to null.

                disposedValue = true;
            }
        }

        // TODO: override a finalizer only if Dispose(bool disposing) above has code to free unmanaged resources.
        // ~Pacifico_Procesos() {
        //   // Do not change this code. Put cleanup code in Dispose(bool disposing) above.
        //   Dispose(false);
        // }

        // This code added to correctly implement the disposable pattern.
        public void Dispose()
        {
            // Do not change this code. Put cleanup code in Dispose(bool disposing) above.
            Dispose(true);
            // TODO: uncomment the following line if the finalizer is overridden above.
            // GC.SuppressFinalize(this);
        }
        #endregion
    }
}